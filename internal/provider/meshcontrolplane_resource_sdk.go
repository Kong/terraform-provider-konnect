// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/kong/terraform-provider-konnect/internal/sdk/models/shared"
	"time"
)

func (r *MeshControlPlaneResourceModel) ToSharedCreateMeshControlPlaneRequest() *shared.CreateMeshControlPlaneRequest {
	description := new(string)
	if !r.Description.IsUnknown() && !r.Description.IsNull() {
		*description = r.Description.ValueString()
	} else {
		description = nil
	}
	labels := make(map[string]string)
	for labelsKey, labelsValue := range r.Labels {
		labelsInst := labelsValue.ValueString()
		labels[labelsKey] = labelsInst
	}
	name := r.Name.ValueString()
	out := shared.CreateMeshControlPlaneRequest{
		Description: description,
		Labels:      labels,
		Name:        name,
	}
	return &out
}

func (r *MeshControlPlaneResourceModel) RefreshFromSharedMeshControlPlane(resp *shared.MeshControlPlane) {
	if resp != nil {
		r.CreatedAt = types.StringValue(resp.CreatedAt.Format(time.RFC3339Nano))
		r.Description = types.StringPointerValue(resp.Description)
		r.ID = types.StringValue(resp.ID)
		if len(resp.Labels) > 0 {
			r.Labels = make(map[string]types.String)
			for key, value := range resp.Labels {
				r.Labels[key] = types.StringValue(value)
			}
		}
		r.Name = types.StringValue(resp.Name)
		r.UpdatedAt = types.StringValue(resp.UpdatedAt.Format(time.RFC3339Nano))
	}
}

func (r *MeshControlPlaneResourceModel) ToSharedUpdateMeshControlPlaneRequest() *shared.UpdateMeshControlPlaneRequest {
	description := new(string)
	if !r.Description.IsUnknown() && !r.Description.IsNull() {
		*description = r.Description.ValueString()
	} else {
		description = nil
	}
	labels := make(map[string]string)
	for labelsKey, labelsValue := range r.Labels {
		labelsInst := labelsValue.ValueString()
		labels[labelsKey] = labelsInst
	}
	name := new(string)
	if !r.Name.IsUnknown() && !r.Name.IsNull() {
		*name = r.Name.ValueString()
	} else {
		name = nil
	}
	out := shared.UpdateMeshControlPlaneRequest{
		Description: description,
		Labels:      labels,
		Name:        name,
	}
	return &out
}
