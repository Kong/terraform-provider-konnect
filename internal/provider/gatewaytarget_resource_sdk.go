// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/kong/terraform-provider-konnect/v2/internal/provider/types"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/models/shared"
)

func (r *GatewayTargetResourceModel) ToSharedTargetWithoutParents() *shared.TargetWithoutParents {
	createdAt := new(float64)
	if !r.CreatedAt.IsUnknown() && !r.CreatedAt.IsNull() {
		*createdAt = r.CreatedAt.ValueFloat64()
	} else {
		createdAt = nil
	}
	id := new(string)
	if !r.ID.IsUnknown() && !r.ID.IsNull() {
		*id = r.ID.ValueString()
	} else {
		id = nil
	}
	var tags []string = []string{}
	for _, tagsItem := range r.Tags {
		tags = append(tags, tagsItem.ValueString())
	}
	target := new(string)
	if !r.Target.IsUnknown() && !r.Target.IsNull() {
		*target = r.Target.ValueString()
	} else {
		target = nil
	}
	updatedAt := new(float64)
	if !r.UpdatedAt.IsUnknown() && !r.UpdatedAt.IsNull() {
		*updatedAt = r.UpdatedAt.ValueFloat64()
	} else {
		updatedAt = nil
	}
	var upstream *shared.TargetWithoutParentsUpstream
	if r.Upstream != nil {
		id1 := new(string)
		if !r.Upstream.ID.IsUnknown() && !r.Upstream.ID.IsNull() {
			*id1 = r.Upstream.ID.ValueString()
		} else {
			id1 = nil
		}
		upstream = &shared.TargetWithoutParentsUpstream{
			ID: id1,
		}
	}
	weight := new(int64)
	if !r.Weight.IsUnknown() && !r.Weight.IsNull() {
		*weight = r.Weight.ValueInt64()
	} else {
		weight = nil
	}
	out := shared.TargetWithoutParents{
		CreatedAt: createdAt,
		ID:        id,
		Tags:      tags,
		Target:    target,
		UpdatedAt: updatedAt,
		Upstream:  upstream,
		Weight:    weight,
	}
	return &out
}

func (r *GatewayTargetResourceModel) RefreshFromSharedTarget(ctx context.Context, resp *shared.Target) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.CreatedAt = types.Float64PointerValue(resp.CreatedAt)
		r.ID = types.StringPointerValue(resp.ID)
		r.Tags = make([]types.String, 0, len(resp.Tags))
		for _, v := range resp.Tags {
			r.Tags = append(r.Tags, types.StringValue(v))
		}
		r.Target = types.StringPointerValue(resp.Target)
		r.UpdatedAt = types.Float64PointerValue(resp.UpdatedAt)
		if resp.Upstream == nil {
			r.Upstream = nil
		} else {
			r.Upstream = &tfTypes.ACLWithoutParentsConsumer{}
			r.Upstream.ID = types.StringPointerValue(resp.Upstream.ID)
		}
		r.Weight = types.Int64PointerValue(resp.Weight)
	}

	return diags
}
