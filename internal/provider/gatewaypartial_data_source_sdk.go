// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/kong/terraform-provider-konnect/v2/internal/provider/types"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/models/operations"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/models/shared"
)

func (r *GatewayPartialDataSourceModel) ToOperationsGetPartialRequest(ctx context.Context) (*operations.GetPartialRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var partialID string
	partialID = r.ID.ValueString()

	var controlPlaneID string
	controlPlaneID = r.ControlPlaneID.ValueString()

	out := operations.GetPartialRequest{
		PartialID:      partialID,
		ControlPlaneID: controlPlaneID,
	}

	return &out, diags
}

func (r *GatewayPartialDataSourceModel) RefreshFromSharedPartial(ctx context.Context, resp *shared.Partial) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		if resp.PartialRedisCE != nil {
			r.RedisCe = &tfTypes.PartialRedisCE{}
			r.RedisCe.Config.Database = types.Int64PointerValue(resp.PartialRedisCE.Config.Database)
			r.RedisCe.Config.Host = types.StringPointerValue(resp.PartialRedisCE.Config.Host)
			r.RedisCe.Config.Password = types.StringPointerValue(resp.PartialRedisCE.Config.Password)
			r.RedisCe.Config.Port = types.Int64PointerValue(resp.PartialRedisCE.Config.Port)
			r.RedisCe.Config.ServerName = types.StringPointerValue(resp.PartialRedisCE.Config.ServerName)
			r.RedisCe.Config.Ssl = types.BoolPointerValue(resp.PartialRedisCE.Config.Ssl)
			r.RedisCe.Config.SslVerify = types.BoolPointerValue(resp.PartialRedisCE.Config.SslVerify)
			r.RedisCe.Config.Timeout = types.Int64PointerValue(resp.PartialRedisCE.Config.Timeout)
			r.RedisCe.Config.Username = types.StringPointerValue(resp.PartialRedisCE.Config.Username)
			r.RedisCe.CreatedAt = types.Int64PointerValue(resp.PartialRedisCE.CreatedAt)
			r.CreatedAt = r.RedisCe.CreatedAt
			r.RedisCe.ID = types.StringPointerValue(resp.PartialRedisCE.ID)
			r.ID = r.RedisCe.ID
			r.RedisCe.Name = types.StringPointerValue(resp.PartialRedisCE.Name)
			r.Name = r.RedisCe.Name
			r.RedisCe.Tags = make([]types.String, 0, len(resp.PartialRedisCE.Tags))
			for _, v := range resp.PartialRedisCE.Tags {
				r.RedisCe.Tags = append(r.RedisCe.Tags, types.StringValue(v))
			}
			r.RedisCe.Type = types.StringValue(string(resp.PartialRedisCE.Type))
			r.RedisCe.UpdatedAt = types.Int64PointerValue(resp.PartialRedisCE.UpdatedAt)
			r.UpdatedAt = r.RedisCe.UpdatedAt
		}
		if resp.PartialRedisEE != nil {
			r.RedisEe = &tfTypes.PartialRedisEE{}
			r.RedisEe.Config.ClusterMaxRedirections = types.Int64PointerValue(resp.PartialRedisEE.Config.ClusterMaxRedirections)
			r.RedisEe.Config.ClusterNodes = []tfTypes.PartialRedisEEClusterNodes{}
			if len(r.RedisEe.Config.ClusterNodes) > len(resp.PartialRedisEE.Config.ClusterNodes) {
				r.RedisEe.Config.ClusterNodes = r.RedisEe.Config.ClusterNodes[:len(resp.PartialRedisEE.Config.ClusterNodes)]
			}
			for clusterNodesCount, clusterNodesItem := range resp.PartialRedisEE.Config.ClusterNodes {
				var clusterNodes tfTypes.PartialRedisEEClusterNodes
				clusterNodes.IP = types.StringPointerValue(clusterNodesItem.IP)
				clusterNodes.Port = types.Int64PointerValue(clusterNodesItem.Port)
				if clusterNodesCount+1 > len(r.RedisEe.Config.ClusterNodes) {
					r.RedisEe.Config.ClusterNodes = append(r.RedisEe.Config.ClusterNodes, clusterNodes)
				} else {
					r.RedisEe.Config.ClusterNodes[clusterNodesCount].IP = clusterNodes.IP
					r.RedisEe.Config.ClusterNodes[clusterNodesCount].Port = clusterNodes.Port
				}
			}
			r.RedisEe.Config.ConnectTimeout = types.Int64PointerValue(resp.PartialRedisEE.Config.ConnectTimeout)
			r.RedisEe.Config.ConnectionIsProxied = types.BoolPointerValue(resp.PartialRedisEE.Config.ConnectionIsProxied)
			r.RedisEe.Config.Database = types.Int64PointerValue(resp.PartialRedisEE.Config.Database)
			r.RedisEe.Config.Host = types.StringPointerValue(resp.PartialRedisEE.Config.Host)
			r.RedisEe.Config.KeepaliveBacklog = types.Int64PointerValue(resp.PartialRedisEE.Config.KeepaliveBacklog)
			r.RedisEe.Config.KeepalivePoolSize = types.Int64PointerValue(resp.PartialRedisEE.Config.KeepalivePoolSize)
			r.RedisEe.Config.Password = types.StringPointerValue(resp.PartialRedisEE.Config.Password)
			r.RedisEe.Config.Port = types.Int64PointerValue(resp.PartialRedisEE.Config.Port)
			r.RedisEe.Config.ReadTimeout = types.Int64PointerValue(resp.PartialRedisEE.Config.ReadTimeout)
			r.RedisEe.Config.SendTimeout = types.Int64PointerValue(resp.PartialRedisEE.Config.SendTimeout)
			r.RedisEe.Config.SentinelMaster = types.StringPointerValue(resp.PartialRedisEE.Config.SentinelMaster)
			r.RedisEe.Config.SentinelNodes = []tfTypes.PartialRedisEESentinelNodes{}
			if len(r.RedisEe.Config.SentinelNodes) > len(resp.PartialRedisEE.Config.SentinelNodes) {
				r.RedisEe.Config.SentinelNodes = r.RedisEe.Config.SentinelNodes[:len(resp.PartialRedisEE.Config.SentinelNodes)]
			}
			for sentinelNodesCount, sentinelNodesItem := range resp.PartialRedisEE.Config.SentinelNodes {
				var sentinelNodes tfTypes.PartialRedisEESentinelNodes
				sentinelNodes.Host = types.StringPointerValue(sentinelNodesItem.Host)
				sentinelNodes.Port = types.Int64PointerValue(sentinelNodesItem.Port)
				if sentinelNodesCount+1 > len(r.RedisEe.Config.SentinelNodes) {
					r.RedisEe.Config.SentinelNodes = append(r.RedisEe.Config.SentinelNodes, sentinelNodes)
				} else {
					r.RedisEe.Config.SentinelNodes[sentinelNodesCount].Host = sentinelNodes.Host
					r.RedisEe.Config.SentinelNodes[sentinelNodesCount].Port = sentinelNodes.Port
				}
			}
			r.RedisEe.Config.SentinelPassword = types.StringPointerValue(resp.PartialRedisEE.Config.SentinelPassword)
			r.RedisEe.Config.SentinelRole = types.StringPointerValue(resp.PartialRedisEE.Config.SentinelRole)
			r.RedisEe.Config.SentinelUsername = types.StringPointerValue(resp.PartialRedisEE.Config.SentinelUsername)
			r.RedisEe.Config.ServerName = types.StringPointerValue(resp.PartialRedisEE.Config.ServerName)
			r.RedisEe.Config.Ssl = types.BoolPointerValue(resp.PartialRedisEE.Config.Ssl)
			r.RedisEe.Config.SslVerify = types.BoolPointerValue(resp.PartialRedisEE.Config.SslVerify)
			r.RedisEe.Config.Username = types.StringPointerValue(resp.PartialRedisEE.Config.Username)
			r.RedisEe.CreatedAt = types.Int64PointerValue(resp.PartialRedisEE.CreatedAt)
			r.CreatedAt = r.RedisEe.CreatedAt
			r.RedisEe.ID = types.StringPointerValue(resp.PartialRedisEE.ID)
			r.ID = r.RedisEe.ID
			r.RedisEe.Name = types.StringPointerValue(resp.PartialRedisEE.Name)
			r.Name = r.RedisEe.Name
			r.RedisEe.Tags = make([]types.String, 0, len(resp.PartialRedisEE.Tags))
			for _, v := range resp.PartialRedisEE.Tags {
				r.RedisEe.Tags = append(r.RedisEe.Tags, types.StringValue(v))
			}
			r.RedisEe.Type = types.StringValue(string(resp.PartialRedisEE.Type))
			r.RedisEe.UpdatedAt = types.Int64PointerValue(resp.PartialRedisEE.UpdatedAt)
			r.UpdatedAt = r.RedisEe.UpdatedAt
		}
	}

	return diags
}
