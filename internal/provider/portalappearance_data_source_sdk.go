// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/kong/terraform-provider-konnect/v2/internal/provider/types"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/models/shared"
)

func (r *PortalAppearanceDataSourceModel) RefreshFromSharedGetPortalAppearanceResponse(resp *shared.GetPortalAppearanceResponse) {
	if resp != nil {
		if resp.CustomFonts == nil {
			r.CustomFonts = nil
		} else {
			r.CustomFonts = &tfTypes.NullableAppearanceFonts{}
			r.CustomFonts.Base = types.StringValue(string(resp.CustomFonts.Base))
			r.CustomFonts.Code = types.StringValue(string(resp.CustomFonts.Code))
			r.CustomFonts.Headings = types.StringValue(string(resp.CustomFonts.Headings))
		}
		if resp.CustomTheme == nil {
			r.CustomTheme = nil
		} else {
			r.CustomTheme = &tfTypes.NullableAppearanceThemeVariables{}
			r.CustomTheme.Colors.Button.PrimaryFill.Description = types.StringPointerValue(resp.CustomTheme.Colors.Button.PrimaryFill.Description)
			r.CustomTheme.Colors.Button.PrimaryFill.Value = types.StringValue(resp.CustomTheme.Colors.Button.PrimaryFill.Value)
			r.CustomTheme.Colors.Button.PrimaryText.Description = types.StringPointerValue(resp.CustomTheme.Colors.Button.PrimaryText.Description)
			r.CustomTheme.Colors.Button.PrimaryText.Value = types.StringValue(resp.CustomTheme.Colors.Button.PrimaryText.Value)
			r.CustomTheme.Colors.Section.Accent.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Accent.Description)
			r.CustomTheme.Colors.Section.Accent.Value = types.StringValue(resp.CustomTheme.Colors.Section.Accent.Value)
			r.CustomTheme.Colors.Section.Body.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Body.Description)
			r.CustomTheme.Colors.Section.Body.Value = types.StringValue(resp.CustomTheme.Colors.Section.Body.Value)
			r.CustomTheme.Colors.Section.Footer.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Footer.Description)
			r.CustomTheme.Colors.Section.Footer.Value = types.StringValue(resp.CustomTheme.Colors.Section.Footer.Value)
			r.CustomTheme.Colors.Section.Header.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Header.Description)
			r.CustomTheme.Colors.Section.Header.Value = types.StringValue(resp.CustomTheme.Colors.Section.Header.Value)
			r.CustomTheme.Colors.Section.Hero.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Hero.Description)
			r.CustomTheme.Colors.Section.Hero.Value = types.StringValue(resp.CustomTheme.Colors.Section.Hero.Value)
			r.CustomTheme.Colors.Section.Stroke.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Stroke.Description)
			r.CustomTheme.Colors.Section.Stroke.Value = types.StringValue(resp.CustomTheme.Colors.Section.Stroke.Value)
			r.CustomTheme.Colors.Section.Tertiary.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Tertiary.Description)
			r.CustomTheme.Colors.Section.Tertiary.Value = types.StringValue(resp.CustomTheme.Colors.Section.Tertiary.Value)
			r.CustomTheme.Colors.Text.Accent.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Accent.Description)
			r.CustomTheme.Colors.Text.Accent.Value = types.StringValue(resp.CustomTheme.Colors.Text.Accent.Value)
			r.CustomTheme.Colors.Text.Footer.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Footer.Description)
			r.CustomTheme.Colors.Text.Footer.Value = types.StringValue(resp.CustomTheme.Colors.Text.Footer.Value)
			r.CustomTheme.Colors.Text.Header.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Header.Description)
			r.CustomTheme.Colors.Text.Header.Value = types.StringValue(resp.CustomTheme.Colors.Text.Header.Value)
			r.CustomTheme.Colors.Text.Headings.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Headings.Description)
			r.CustomTheme.Colors.Text.Headings.Value = types.StringValue(resp.CustomTheme.Colors.Text.Headings.Value)
			r.CustomTheme.Colors.Text.Hero.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Hero.Description)
			r.CustomTheme.Colors.Text.Hero.Value = types.StringValue(resp.CustomTheme.Colors.Text.Hero.Value)
			r.CustomTheme.Colors.Text.Link.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Link.Description)
			r.CustomTheme.Colors.Text.Link.Value = types.StringValue(resp.CustomTheme.Colors.Text.Link.Value)
			r.CustomTheme.Colors.Text.Primary.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Primary.Description)
			r.CustomTheme.Colors.Text.Primary.Value = types.StringValue(resp.CustomTheme.Colors.Text.Primary.Value)
			r.CustomTheme.Colors.Text.Secondary.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Secondary.Description)
			r.CustomTheme.Colors.Text.Secondary.Value = types.StringValue(resp.CustomTheme.Colors.Text.Secondary.Value)
		}
		if resp.Images == nil {
			r.Images = nil
		} else {
			r.Images = &tfTypes.AppearanceImages{}
			if resp.Images.CatalogCover == nil {
				r.Images.CatalogCover = nil
			} else {
				r.Images.CatalogCover = &tfTypes.AppearanceImage{}
				r.Images.CatalogCover.Data = types.StringValue(resp.Images.CatalogCover.Data)
				r.Images.CatalogCover.Filename = types.StringPointerValue(resp.Images.CatalogCover.Filename)
			}
			if resp.Images.Favicon == nil {
				r.Images.Favicon = nil
			} else {
				r.Images.Favicon = &tfTypes.AppearanceImage{}
				r.Images.Favicon.Data = types.StringValue(resp.Images.Favicon.Data)
				r.Images.Favicon.Filename = types.StringPointerValue(resp.Images.Favicon.Filename)
			}
			if resp.Images.Logo == nil {
				r.Images.Logo = nil
			} else {
				r.Images.Logo = &tfTypes.AppearanceImage{}
				r.Images.Logo.Data = types.StringValue(resp.Images.Logo.Data)
				r.Images.Logo.Filename = types.StringPointerValue(resp.Images.Logo.Filename)
			}
		}
		if resp.Text == nil {
			r.Text = nil
		} else {
			r.Text = &tfTypes.NullableAppearanceTextVariables{}
			r.Text.Catalog.PrimaryHeader = types.StringValue(resp.Text.Catalog.PrimaryHeader)
			r.Text.Catalog.WelcomeMessage = types.StringValue(resp.Text.Catalog.WelcomeMessage)
		}
		r.ThemeName = types.StringValue(string(resp.ThemeName))
		r.UseCustomFonts = types.BoolValue(resp.UseCustomFonts)
	}
}
