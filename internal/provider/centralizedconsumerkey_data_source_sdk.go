// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/kong/terraform-provider-konnect/v2/internal/provider/typeconvert"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/models/operations"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/models/shared"
)

func (r *CentralizedConsumerKeyDataSourceModel) ToOperationsGetConsumerKeyRequest(ctx context.Context) (*operations.GetConsumerKeyRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var realmID string
	realmID = r.RealmID.ValueString()

	var consumerID string
	consumerID = r.ConsumerID.ValueString()

	var keyID string
	keyID = r.ID.ValueString()

	out := operations.GetConsumerKeyRequest{
		RealmID:    realmID,
		ConsumerID: consumerID,
		KeyID:      keyID,
	}

	return &out, diags
}

func (r *CentralizedConsumerKeyDataSourceModel) RefreshFromSharedAPIKey(ctx context.Context, resp *shared.APIKey) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.CreatedAt = types.StringValue(typeconvert.TimeToString(resp.CreatedAt))
		r.ID = types.StringValue(resp.ID)
		r.Tags = make([]types.String, 0, len(resp.Tags))
		for _, v := range resp.Tags {
			r.Tags = append(r.Tags, types.StringValue(v))
		}
		r.Type = types.StringValue(string(resp.Type))
	}

	return diags
}
