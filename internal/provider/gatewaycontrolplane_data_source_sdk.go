// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/kong/terraform-provider-konnect/internal/provider/types"
	"github.com/kong/terraform-provider-konnect/internal/sdk/models/shared"
)

func (r *GatewayControlPlaneDataSourceModel) RefreshFromSharedControlPlane(resp *shared.ControlPlane) {
	if resp != nil {
		if resp.Config == nil {
			r.Config = nil
		} else {
			r.Config = &tfTypes.Config{}
			r.Config.ControlPlaneEndpoint = types.StringPointerValue(resp.Config.ControlPlaneEndpoint)
			r.Config.TelemetryEndpoint = types.StringPointerValue(resp.Config.TelemetryEndpoint)
		}
		r.Description = types.StringPointerValue(resp.Description)
		r.ID = types.StringPointerValue(resp.ID)
		if len(resp.Labels) > 0 {
			r.Labels = make(map[string]types.String)
			for key, value := range resp.Labels {
				r.Labels[key] = types.StringValue(value)
			}
		}
		r.Name = types.StringPointerValue(resp.Name)
	}
}
