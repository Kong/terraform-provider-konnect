// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/kong/terraform-provider-konnect/v2/internal/provider/types"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/models/shared"
)

func (r *DcrProviderDataSourceModel) RefreshFromSharedDcrProviderResponse(resp *shared.DcrProviderResponse) {
	if resp != nil {
		if resp.DcrProviderAuth0 != nil {
			r.Auth0 = &tfTypes.DcrProviderAuth01{}
			r.Auth0.Active = types.BoolPointerValue(resp.DcrProviderAuth0.Active)
			r.Active = r.Auth0.Active
			r.Auth0.DcrConfig.InitialClientAudience = types.StringPointerValue(resp.DcrProviderAuth0.DcrConfig.InitialClientAudience)
			r.Auth0.DcrConfig.InitialClientID = types.StringValue(resp.DcrProviderAuth0.DcrConfig.InitialClientID)
			r.Auth0.DcrConfig.UseDeveloperManagedScopes = types.BoolValue(resp.DcrProviderAuth0.DcrConfig.UseDeveloperManagedScopes)
			r.Auth0.DisplayName = types.StringPointerValue(resp.DcrProviderAuth0.DisplayName)
			r.DisplayName = r.Auth0.DisplayName
			r.Auth0.ID = types.StringPointerValue(resp.DcrProviderAuth0.ID)
			r.ID = r.Auth0.ID
			r.Auth0.Issuer = types.StringPointerValue(resp.DcrProviderAuth0.Issuer)
			r.Issuer = r.Auth0.Issuer
			r.Auth0.Name = types.StringPointerValue(resp.DcrProviderAuth0.Name)
			r.Name = r.Auth0.Name
			r.Auth0.ProviderType = types.StringValue(string(resp.DcrProviderAuth0.ProviderType))
		}
		if resp.DcrProviderAzureAd != nil {
			r.AzureAd = &tfTypes.DcrProviderAzureAd1{}
			r.AzureAd.Active = types.BoolPointerValue(resp.DcrProviderAzureAd.Active)
			r.Active = r.AzureAd.Active
			r.AzureAd.DcrConfig.InitialClientID = types.StringValue(resp.DcrProviderAzureAd.DcrConfig.InitialClientID)
			r.AzureAd.DisplayName = types.StringPointerValue(resp.DcrProviderAzureAd.DisplayName)
			r.DisplayName = r.AzureAd.DisplayName
			r.AzureAd.ID = types.StringPointerValue(resp.DcrProviderAzureAd.ID)
			r.ID = r.AzureAd.ID
			r.AzureAd.Issuer = types.StringPointerValue(resp.DcrProviderAzureAd.Issuer)
			r.Issuer = r.AzureAd.Issuer
			r.AzureAd.Name = types.StringPointerValue(resp.DcrProviderAzureAd.Name)
			r.Name = r.AzureAd.Name
			r.AzureAd.ProviderType = types.StringValue(string(resp.DcrProviderAzureAd.ProviderType))
		}
		if resp.DcrProviderCurity != nil {
			r.Curity = &tfTypes.DcrProviderAzureAd1{}
			r.Curity.Active = types.BoolPointerValue(resp.DcrProviderCurity.Active)
			r.Active = r.Curity.Active
			r.Curity.DcrConfig.InitialClientID = types.StringValue(resp.DcrProviderCurity.DcrConfig.InitialClientID)
			r.Curity.DisplayName = types.StringPointerValue(resp.DcrProviderCurity.DisplayName)
			r.DisplayName = r.Curity.DisplayName
			r.Curity.ID = types.StringPointerValue(resp.DcrProviderCurity.ID)
			r.ID = r.Curity.ID
			r.Curity.Issuer = types.StringPointerValue(resp.DcrProviderCurity.Issuer)
			r.Issuer = r.Curity.Issuer
			r.Curity.Name = types.StringPointerValue(resp.DcrProviderCurity.Name)
			r.Name = r.Curity.Name
			r.Curity.ProviderType = types.StringValue(string(resp.DcrProviderCurity.ProviderType))
		}
		if resp.DcrProviderHTTP != nil {
			r.HTTP = &tfTypes.DcrProviderHTTP1{}
			r.HTTP.Active = types.BoolPointerValue(resp.DcrProviderHTTP.Active)
			r.Active = r.HTTP.Active
			r.HTTP.DcrConfig.DcrBaseURL = types.StringValue(resp.DcrProviderHTTP.DcrConfig.DcrBaseURL)
			r.HTTP.DcrConfig.DisableEventHooks = types.BoolPointerValue(resp.DcrProviderHTTP.DcrConfig.DisableEventHooks)
			r.HTTP.DcrConfig.DisableRefreshSecret = types.BoolPointerValue(resp.DcrProviderHTTP.DcrConfig.DisableRefreshSecret)
			r.HTTP.DisplayName = types.StringPointerValue(resp.DcrProviderHTTP.DisplayName)
			r.DisplayName = r.HTTP.DisplayName
			r.HTTP.ID = types.StringPointerValue(resp.DcrProviderHTTP.ID)
			r.ID = r.HTTP.ID
			r.HTTP.Issuer = types.StringPointerValue(resp.DcrProviderHTTP.Issuer)
			r.Issuer = r.HTTP.Issuer
			r.HTTP.Name = types.StringPointerValue(resp.DcrProviderHTTP.Name)
			r.Name = r.HTTP.Name
			r.HTTP.ProviderType = types.StringValue(string(resp.DcrProviderHTTP.ProviderType))
		}
		if resp.DcrProviderOkta != nil {
			r.Okta = &tfTypes.DcrProviderOkta1{}
			r.Okta.Active = types.BoolPointerValue(resp.DcrProviderOkta.Active)
			r.Active = r.Okta.Active
			r.Okta.DisplayName = types.StringPointerValue(resp.DcrProviderOkta.DisplayName)
			r.DisplayName = r.Okta.DisplayName
			r.Okta.ID = types.StringPointerValue(resp.DcrProviderOkta.ID)
			r.ID = r.Okta.ID
			r.Okta.Issuer = types.StringPointerValue(resp.DcrProviderOkta.Issuer)
			r.Issuer = r.Okta.Issuer
			r.Okta.Name = types.StringPointerValue(resp.DcrProviderOkta.Name)
			r.Name = r.Okta.Name
			r.Okta.ProviderType = types.StringValue(string(resp.DcrProviderOkta.ProviderType))
		}
	}
}
