// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/kong/terraform-provider-konnect/internal/provider/types"
	"github.com/kong/terraform-provider-konnect/internal/sdk/models/shared"
)

func (r *PortalAppearanceResourceModel) ToSharedUpdatePortalAppearanceRequest() *shared.UpdatePortalAppearanceRequest {
	var customFonts *shared.NullableAppearanceFonts
	if r.CustomFonts != nil {
		base := shared.AppearanceFontName(r.CustomFonts.Base.ValueString())
		code := shared.AppearanceFontName(r.CustomFonts.Code.ValueString())
		headings := shared.AppearanceFontName(r.CustomFonts.Headings.ValueString())
		customFonts = &shared.NullableAppearanceFonts{
			Base:     base,
			Code:     code,
			Headings: headings,
		}
	}
	var customTheme *shared.NullableAppearanceThemeVariables
	if r.CustomTheme != nil {
		description := new(string)
		if !r.CustomTheme.Colors.Button.PrimaryFill.Description.IsUnknown() && !r.CustomTheme.Colors.Button.PrimaryFill.Description.IsNull() {
			*description = r.CustomTheme.Colors.Button.PrimaryFill.Description.ValueString()
		} else {
			description = nil
		}
		value := r.CustomTheme.Colors.Button.PrimaryFill.Value.ValueString()
		primaryFill := shared.AppearanceColorVariable{
			Description: description,
			Value:       value,
		}
		description1 := new(string)
		if !r.CustomTheme.Colors.Button.PrimaryText.Description.IsUnknown() && !r.CustomTheme.Colors.Button.PrimaryText.Description.IsNull() {
			*description1 = r.CustomTheme.Colors.Button.PrimaryText.Description.ValueString()
		} else {
			description1 = nil
		}
		value1 := r.CustomTheme.Colors.Button.PrimaryText.Value.ValueString()
		primaryText := shared.AppearanceColorVariable{
			Description: description1,
			Value:       value1,
		}
		button := shared.Button{
			PrimaryFill: primaryFill,
			PrimaryText: primaryText,
		}
		description2 := new(string)
		if !r.CustomTheme.Colors.Section.Accent.Description.IsUnknown() && !r.CustomTheme.Colors.Section.Accent.Description.IsNull() {
			*description2 = r.CustomTheme.Colors.Section.Accent.Description.ValueString()
		} else {
			description2 = nil
		}
		value2 := r.CustomTheme.Colors.Section.Accent.Value.ValueString()
		accent := shared.AppearanceColorVariable{
			Description: description2,
			Value:       value2,
		}
		description3 := new(string)
		if !r.CustomTheme.Colors.Section.Body.Description.IsUnknown() && !r.CustomTheme.Colors.Section.Body.Description.IsNull() {
			*description3 = r.CustomTheme.Colors.Section.Body.Description.ValueString()
		} else {
			description3 = nil
		}
		value3 := r.CustomTheme.Colors.Section.Body.Value.ValueString()
		body := shared.AppearanceColorVariable{
			Description: description3,
			Value:       value3,
		}
		description4 := new(string)
		if !r.CustomTheme.Colors.Section.Footer.Description.IsUnknown() && !r.CustomTheme.Colors.Section.Footer.Description.IsNull() {
			*description4 = r.CustomTheme.Colors.Section.Footer.Description.ValueString()
		} else {
			description4 = nil
		}
		value4 := r.CustomTheme.Colors.Section.Footer.Value.ValueString()
		footer := shared.AppearanceColorVariable{
			Description: description4,
			Value:       value4,
		}
		description5 := new(string)
		if !r.CustomTheme.Colors.Section.Header.Description.IsUnknown() && !r.CustomTheme.Colors.Section.Header.Description.IsNull() {
			*description5 = r.CustomTheme.Colors.Section.Header.Description.ValueString()
		} else {
			description5 = nil
		}
		value5 := r.CustomTheme.Colors.Section.Header.Value.ValueString()
		header := shared.AppearanceColorVariable{
			Description: description5,
			Value:       value5,
		}
		description6 := new(string)
		if !r.CustomTheme.Colors.Section.Hero.Description.IsUnknown() && !r.CustomTheme.Colors.Section.Hero.Description.IsNull() {
			*description6 = r.CustomTheme.Colors.Section.Hero.Description.ValueString()
		} else {
			description6 = nil
		}
		value6 := r.CustomTheme.Colors.Section.Hero.Value.ValueString()
		hero := shared.AppearanceColorVariable{
			Description: description6,
			Value:       value6,
		}
		description7 := new(string)
		if !r.CustomTheme.Colors.Section.Stroke.Description.IsUnknown() && !r.CustomTheme.Colors.Section.Stroke.Description.IsNull() {
			*description7 = r.CustomTheme.Colors.Section.Stroke.Description.ValueString()
		} else {
			description7 = nil
		}
		value7 := r.CustomTheme.Colors.Section.Stroke.Value.ValueString()
		stroke := shared.AppearanceColorVariable{
			Description: description7,
			Value:       value7,
		}
		description8 := new(string)
		if !r.CustomTheme.Colors.Section.Tertiary.Description.IsUnknown() && !r.CustomTheme.Colors.Section.Tertiary.Description.IsNull() {
			*description8 = r.CustomTheme.Colors.Section.Tertiary.Description.ValueString()
		} else {
			description8 = nil
		}
		value8 := r.CustomTheme.Colors.Section.Tertiary.Value.ValueString()
		tertiary := shared.AppearanceColorVariable{
			Description: description8,
			Value:       value8,
		}
		section := shared.Section{
			Accent:   accent,
			Body:     body,
			Footer:   footer,
			Header:   header,
			Hero:     hero,
			Stroke:   stroke,
			Tertiary: tertiary,
		}
		description9 := new(string)
		if !r.CustomTheme.Colors.Text.Accent.Description.IsUnknown() && !r.CustomTheme.Colors.Text.Accent.Description.IsNull() {
			*description9 = r.CustomTheme.Colors.Text.Accent.Description.ValueString()
		} else {
			description9 = nil
		}
		value9 := r.CustomTheme.Colors.Text.Accent.Value.ValueString()
		accent1 := shared.AppearanceColorVariable{
			Description: description9,
			Value:       value9,
		}
		description10 := new(string)
		if !r.CustomTheme.Colors.Text.Footer.Description.IsUnknown() && !r.CustomTheme.Colors.Text.Footer.Description.IsNull() {
			*description10 = r.CustomTheme.Colors.Text.Footer.Description.ValueString()
		} else {
			description10 = nil
		}
		value10 := r.CustomTheme.Colors.Text.Footer.Value.ValueString()
		footer1 := shared.AppearanceColorVariable{
			Description: description10,
			Value:       value10,
		}
		description11 := new(string)
		if !r.CustomTheme.Colors.Text.Header.Description.IsUnknown() && !r.CustomTheme.Colors.Text.Header.Description.IsNull() {
			*description11 = r.CustomTheme.Colors.Text.Header.Description.ValueString()
		} else {
			description11 = nil
		}
		value11 := r.CustomTheme.Colors.Text.Header.Value.ValueString()
		header1 := shared.AppearanceColorVariable{
			Description: description11,
			Value:       value11,
		}
		description12 := new(string)
		if !r.CustomTheme.Colors.Text.Headings.Description.IsUnknown() && !r.CustomTheme.Colors.Text.Headings.Description.IsNull() {
			*description12 = r.CustomTheme.Colors.Text.Headings.Description.ValueString()
		} else {
			description12 = nil
		}
		value12 := r.CustomTheme.Colors.Text.Headings.Value.ValueString()
		headings1 := shared.AppearanceColorVariable{
			Description: description12,
			Value:       value12,
		}
		description13 := new(string)
		if !r.CustomTheme.Colors.Text.Hero.Description.IsUnknown() && !r.CustomTheme.Colors.Text.Hero.Description.IsNull() {
			*description13 = r.CustomTheme.Colors.Text.Hero.Description.ValueString()
		} else {
			description13 = nil
		}
		value13 := r.CustomTheme.Colors.Text.Hero.Value.ValueString()
		hero1 := shared.AppearanceColorVariable{
			Description: description13,
			Value:       value13,
		}
		description14 := new(string)
		if !r.CustomTheme.Colors.Text.Link.Description.IsUnknown() && !r.CustomTheme.Colors.Text.Link.Description.IsNull() {
			*description14 = r.CustomTheme.Colors.Text.Link.Description.ValueString()
		} else {
			description14 = nil
		}
		value14 := r.CustomTheme.Colors.Text.Link.Value.ValueString()
		link := shared.AppearanceColorVariable{
			Description: description14,
			Value:       value14,
		}
		description15 := new(string)
		if !r.CustomTheme.Colors.Text.Primary.Description.IsUnknown() && !r.CustomTheme.Colors.Text.Primary.Description.IsNull() {
			*description15 = r.CustomTheme.Colors.Text.Primary.Description.ValueString()
		} else {
			description15 = nil
		}
		value15 := r.CustomTheme.Colors.Text.Primary.Value.ValueString()
		primary := shared.AppearanceColorVariable{
			Description: description15,
			Value:       value15,
		}
		description16 := new(string)
		if !r.CustomTheme.Colors.Text.Secondary.Description.IsUnknown() && !r.CustomTheme.Colors.Text.Secondary.Description.IsNull() {
			*description16 = r.CustomTheme.Colors.Text.Secondary.Description.ValueString()
		} else {
			description16 = nil
		}
		value16 := r.CustomTheme.Colors.Text.Secondary.Value.ValueString()
		secondary := shared.AppearanceColorVariable{
			Description: description16,
			Value:       value16,
		}
		text := shared.Text{
			Accent:    accent1,
			Footer:    footer1,
			Header:    header1,
			Headings:  headings1,
			Hero:      hero1,
			Link:      link,
			Primary:   primary,
			Secondary: secondary,
		}
		colors := shared.AppearanceThemeColorVariables{
			Button:  button,
			Section: section,
			Text:    text,
		}
		customTheme = &shared.NullableAppearanceThemeVariables{
			Colors: colors,
		}
	}
	var images *shared.AppearanceImages
	if r.Images != nil {
		var catalogCover *shared.AppearanceImage
		if r.Images.CatalogCover != nil {
			data := r.Images.CatalogCover.Data.ValueString()
			filename := new(string)
			if !r.Images.CatalogCover.Filename.IsUnknown() && !r.Images.CatalogCover.Filename.IsNull() {
				*filename = r.Images.CatalogCover.Filename.ValueString()
			} else {
				filename = nil
			}
			catalogCover = &shared.AppearanceImage{
				Data:     data,
				Filename: filename,
			}
		}
		var favicon *shared.AppearanceImage
		if r.Images.Favicon != nil {
			data1 := r.Images.Favicon.Data.ValueString()
			filename1 := new(string)
			if !r.Images.Favicon.Filename.IsUnknown() && !r.Images.Favicon.Filename.IsNull() {
				*filename1 = r.Images.Favicon.Filename.ValueString()
			} else {
				filename1 = nil
			}
			favicon = &shared.AppearanceImage{
				Data:     data1,
				Filename: filename1,
			}
		}
		var logo *shared.AppearanceImage
		if r.Images.Logo != nil {
			data2 := r.Images.Logo.Data.ValueString()
			filename2 := new(string)
			if !r.Images.Logo.Filename.IsUnknown() && !r.Images.Logo.Filename.IsNull() {
				*filename2 = r.Images.Logo.Filename.ValueString()
			} else {
				filename2 = nil
			}
			logo = &shared.AppearanceImage{
				Data:     data2,
				Filename: filename2,
			}
		}
		images = &shared.AppearanceImages{
			CatalogCover: catalogCover,
			Favicon:      favicon,
			Logo:         logo,
		}
	}
	var text1 *shared.NullableAppearanceTextVariables
	if r.Text != nil {
		primaryHeader := r.Text.Catalog.PrimaryHeader.ValueString()
		welcomeMessage := r.Text.Catalog.WelcomeMessage.ValueString()
		catalog := shared.Catalog{
			PrimaryHeader:  primaryHeader,
			WelcomeMessage: welcomeMessage,
		}
		text1 = &shared.NullableAppearanceTextVariables{
			Catalog: catalog,
		}
	}
	themeName := new(shared.PortalTheme)
	if !r.ThemeName.IsUnknown() && !r.ThemeName.IsNull() {
		*themeName = shared.PortalTheme(r.ThemeName.ValueString())
	} else {
		themeName = nil
	}
	useCustomFonts := new(bool)
	if !r.UseCustomFonts.IsUnknown() && !r.UseCustomFonts.IsNull() {
		*useCustomFonts = r.UseCustomFonts.ValueBool()
	} else {
		useCustomFonts = nil
	}
	out := shared.UpdatePortalAppearanceRequest{
		CustomFonts:    customFonts,
		CustomTheme:    customTheme,
		Images:         images,
		Text:           text1,
		ThemeName:      themeName,
		UseCustomFonts: useCustomFonts,
	}
	return &out
}

func (r *PortalAppearanceResourceModel) RefreshFromSharedUpdatePortalAppearanceResponse(resp *shared.UpdatePortalAppearanceResponse) {
	if resp != nil {
		if resp.CustomFonts == nil {
			r.CustomFonts = nil
		} else {
			r.CustomFonts = &tfTypes.NullableAppearanceFonts{}
			r.CustomFonts.Base = types.StringValue(string(resp.CustomFonts.Base))
			r.CustomFonts.Code = types.StringValue(string(resp.CustomFonts.Code))
			r.CustomFonts.Headings = types.StringValue(string(resp.CustomFonts.Headings))
		}
		if resp.CustomTheme == nil {
			r.CustomTheme = nil
		} else {
			r.CustomTheme = &tfTypes.NullableAppearanceThemeVariables{}
			r.CustomTheme.Colors.Button.PrimaryFill.Description = types.StringPointerValue(resp.CustomTheme.Colors.Button.PrimaryFill.Description)
			r.CustomTheme.Colors.Button.PrimaryFill.Value = types.StringValue(resp.CustomTheme.Colors.Button.PrimaryFill.Value)
			r.CustomTheme.Colors.Button.PrimaryText.Description = types.StringPointerValue(resp.CustomTheme.Colors.Button.PrimaryText.Description)
			r.CustomTheme.Colors.Button.PrimaryText.Value = types.StringValue(resp.CustomTheme.Colors.Button.PrimaryText.Value)
			r.CustomTheme.Colors.Section.Accent.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Accent.Description)
			r.CustomTheme.Colors.Section.Accent.Value = types.StringValue(resp.CustomTheme.Colors.Section.Accent.Value)
			r.CustomTheme.Colors.Section.Body.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Body.Description)
			r.CustomTheme.Colors.Section.Body.Value = types.StringValue(resp.CustomTheme.Colors.Section.Body.Value)
			r.CustomTheme.Colors.Section.Footer.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Footer.Description)
			r.CustomTheme.Colors.Section.Footer.Value = types.StringValue(resp.CustomTheme.Colors.Section.Footer.Value)
			r.CustomTheme.Colors.Section.Header.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Header.Description)
			r.CustomTheme.Colors.Section.Header.Value = types.StringValue(resp.CustomTheme.Colors.Section.Header.Value)
			r.CustomTheme.Colors.Section.Hero.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Hero.Description)
			r.CustomTheme.Colors.Section.Hero.Value = types.StringValue(resp.CustomTheme.Colors.Section.Hero.Value)
			r.CustomTheme.Colors.Section.Stroke.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Stroke.Description)
			r.CustomTheme.Colors.Section.Stroke.Value = types.StringValue(resp.CustomTheme.Colors.Section.Stroke.Value)
			r.CustomTheme.Colors.Section.Tertiary.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Tertiary.Description)
			r.CustomTheme.Colors.Section.Tertiary.Value = types.StringValue(resp.CustomTheme.Colors.Section.Tertiary.Value)
			r.CustomTheme.Colors.Text.Accent.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Accent.Description)
			r.CustomTheme.Colors.Text.Accent.Value = types.StringValue(resp.CustomTheme.Colors.Text.Accent.Value)
			r.CustomTheme.Colors.Text.Footer.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Footer.Description)
			r.CustomTheme.Colors.Text.Footer.Value = types.StringValue(resp.CustomTheme.Colors.Text.Footer.Value)
			r.CustomTheme.Colors.Text.Header.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Header.Description)
			r.CustomTheme.Colors.Text.Header.Value = types.StringValue(resp.CustomTheme.Colors.Text.Header.Value)
			r.CustomTheme.Colors.Text.Headings.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Headings.Description)
			r.CustomTheme.Colors.Text.Headings.Value = types.StringValue(resp.CustomTheme.Colors.Text.Headings.Value)
			r.CustomTheme.Colors.Text.Hero.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Hero.Description)
			r.CustomTheme.Colors.Text.Hero.Value = types.StringValue(resp.CustomTheme.Colors.Text.Hero.Value)
			r.CustomTheme.Colors.Text.Link.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Link.Description)
			r.CustomTheme.Colors.Text.Link.Value = types.StringValue(resp.CustomTheme.Colors.Text.Link.Value)
			r.CustomTheme.Colors.Text.Primary.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Primary.Description)
			r.CustomTheme.Colors.Text.Primary.Value = types.StringValue(resp.CustomTheme.Colors.Text.Primary.Value)
			r.CustomTheme.Colors.Text.Secondary.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Secondary.Description)
			r.CustomTheme.Colors.Text.Secondary.Value = types.StringValue(resp.CustomTheme.Colors.Text.Secondary.Value)
		}
		if resp.Images == nil {
			r.Images = nil
		} else {
			r.Images = &tfTypes.AppearanceImages{}
			if resp.Images.CatalogCover == nil {
				r.Images.CatalogCover = nil
			} else {
				r.Images.CatalogCover = &tfTypes.AppearanceImage{}
				r.Images.CatalogCover.Data = types.StringValue(resp.Images.CatalogCover.Data)
				r.Images.CatalogCover.Filename = types.StringPointerValue(resp.Images.CatalogCover.Filename)
			}
			if resp.Images.Favicon == nil {
				r.Images.Favicon = nil
			} else {
				r.Images.Favicon = &tfTypes.AppearanceImage{}
				r.Images.Favicon.Data = types.StringValue(resp.Images.Favicon.Data)
				r.Images.Favicon.Filename = types.StringPointerValue(resp.Images.Favicon.Filename)
			}
			if resp.Images.Logo == nil {
				r.Images.Logo = nil
			} else {
				r.Images.Logo = &tfTypes.AppearanceImage{}
				r.Images.Logo.Data = types.StringValue(resp.Images.Logo.Data)
				r.Images.Logo.Filename = types.StringPointerValue(resp.Images.Logo.Filename)
			}
		}
		if resp.Text == nil {
			r.Text = nil
		} else {
			r.Text = &tfTypes.NullableAppearanceTextVariables{}
			r.Text.Catalog.PrimaryHeader = types.StringValue(resp.Text.Catalog.PrimaryHeader)
			r.Text.Catalog.WelcomeMessage = types.StringValue(resp.Text.Catalog.WelcomeMessage)
		}
		r.ThemeName = types.StringValue(string(resp.ThemeName))
		r.UseCustomFonts = types.BoolValue(resp.UseCustomFonts)
	}
}

func (r *PortalAppearanceResourceModel) RefreshFromSharedGetPortalAppearanceResponse(resp *shared.GetPortalAppearanceResponse) {
	if resp != nil {
		if resp.CustomFonts == nil {
			r.CustomFonts = nil
		} else {
			r.CustomFonts = &tfTypes.NullableAppearanceFonts{}
			r.CustomFonts.Base = types.StringValue(string(resp.CustomFonts.Base))
			r.CustomFonts.Code = types.StringValue(string(resp.CustomFonts.Code))
			r.CustomFonts.Headings = types.StringValue(string(resp.CustomFonts.Headings))
		}
		if resp.CustomTheme == nil {
			r.CustomTheme = nil
		} else {
			r.CustomTheme = &tfTypes.NullableAppearanceThemeVariables{}
			r.CustomTheme.Colors.Button.PrimaryFill.Description = types.StringPointerValue(resp.CustomTheme.Colors.Button.PrimaryFill.Description)
			r.CustomTheme.Colors.Button.PrimaryFill.Value = types.StringValue(resp.CustomTheme.Colors.Button.PrimaryFill.Value)
			r.CustomTheme.Colors.Button.PrimaryText.Description = types.StringPointerValue(resp.CustomTheme.Colors.Button.PrimaryText.Description)
			r.CustomTheme.Colors.Button.PrimaryText.Value = types.StringValue(resp.CustomTheme.Colors.Button.PrimaryText.Value)
			r.CustomTheme.Colors.Section.Accent.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Accent.Description)
			r.CustomTheme.Colors.Section.Accent.Value = types.StringValue(resp.CustomTheme.Colors.Section.Accent.Value)
			r.CustomTheme.Colors.Section.Body.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Body.Description)
			r.CustomTheme.Colors.Section.Body.Value = types.StringValue(resp.CustomTheme.Colors.Section.Body.Value)
			r.CustomTheme.Colors.Section.Footer.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Footer.Description)
			r.CustomTheme.Colors.Section.Footer.Value = types.StringValue(resp.CustomTheme.Colors.Section.Footer.Value)
			r.CustomTheme.Colors.Section.Header.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Header.Description)
			r.CustomTheme.Colors.Section.Header.Value = types.StringValue(resp.CustomTheme.Colors.Section.Header.Value)
			r.CustomTheme.Colors.Section.Hero.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Hero.Description)
			r.CustomTheme.Colors.Section.Hero.Value = types.StringValue(resp.CustomTheme.Colors.Section.Hero.Value)
			r.CustomTheme.Colors.Section.Stroke.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Stroke.Description)
			r.CustomTheme.Colors.Section.Stroke.Value = types.StringValue(resp.CustomTheme.Colors.Section.Stroke.Value)
			r.CustomTheme.Colors.Section.Tertiary.Description = types.StringPointerValue(resp.CustomTheme.Colors.Section.Tertiary.Description)
			r.CustomTheme.Colors.Section.Tertiary.Value = types.StringValue(resp.CustomTheme.Colors.Section.Tertiary.Value)
			r.CustomTheme.Colors.Text.Accent.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Accent.Description)
			r.CustomTheme.Colors.Text.Accent.Value = types.StringValue(resp.CustomTheme.Colors.Text.Accent.Value)
			r.CustomTheme.Colors.Text.Footer.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Footer.Description)
			r.CustomTheme.Colors.Text.Footer.Value = types.StringValue(resp.CustomTheme.Colors.Text.Footer.Value)
			r.CustomTheme.Colors.Text.Header.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Header.Description)
			r.CustomTheme.Colors.Text.Header.Value = types.StringValue(resp.CustomTheme.Colors.Text.Header.Value)
			r.CustomTheme.Colors.Text.Headings.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Headings.Description)
			r.CustomTheme.Colors.Text.Headings.Value = types.StringValue(resp.CustomTheme.Colors.Text.Headings.Value)
			r.CustomTheme.Colors.Text.Hero.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Hero.Description)
			r.CustomTheme.Colors.Text.Hero.Value = types.StringValue(resp.CustomTheme.Colors.Text.Hero.Value)
			r.CustomTheme.Colors.Text.Link.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Link.Description)
			r.CustomTheme.Colors.Text.Link.Value = types.StringValue(resp.CustomTheme.Colors.Text.Link.Value)
			r.CustomTheme.Colors.Text.Primary.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Primary.Description)
			r.CustomTheme.Colors.Text.Primary.Value = types.StringValue(resp.CustomTheme.Colors.Text.Primary.Value)
			r.CustomTheme.Colors.Text.Secondary.Description = types.StringPointerValue(resp.CustomTheme.Colors.Text.Secondary.Description)
			r.CustomTheme.Colors.Text.Secondary.Value = types.StringValue(resp.CustomTheme.Colors.Text.Secondary.Value)
		}
		if resp.Images == nil {
			r.Images = nil
		} else {
			r.Images = &tfTypes.AppearanceImages{}
			if resp.Images.CatalogCover == nil {
				r.Images.CatalogCover = nil
			} else {
				r.Images.CatalogCover = &tfTypes.AppearanceImage{}
				r.Images.CatalogCover.Data = types.StringValue(resp.Images.CatalogCover.Data)
				r.Images.CatalogCover.Filename = types.StringPointerValue(resp.Images.CatalogCover.Filename)
			}
			if resp.Images.Favicon == nil {
				r.Images.Favicon = nil
			} else {
				r.Images.Favicon = &tfTypes.AppearanceImage{}
				r.Images.Favicon.Data = types.StringValue(resp.Images.Favicon.Data)
				r.Images.Favicon.Filename = types.StringPointerValue(resp.Images.Favicon.Filename)
			}
			if resp.Images.Logo == nil {
				r.Images.Logo = nil
			} else {
				r.Images.Logo = &tfTypes.AppearanceImage{}
				r.Images.Logo.Data = types.StringValue(resp.Images.Logo.Data)
				r.Images.Logo.Filename = types.StringPointerValue(resp.Images.Logo.Filename)
			}
		}
		if resp.Text == nil {
			r.Text = nil
		} else {
			r.Text = &tfTypes.NullableAppearanceTextVariables{}
			r.Text.Catalog.PrimaryHeader = types.StringValue(resp.Text.Catalog.PrimaryHeader)
			r.Text.Catalog.WelcomeMessage = types.StringValue(resp.Text.Catalog.WelcomeMessage)
		}
		r.ThemeName = types.StringValue(string(resp.ThemeName))
		r.UseCustomFonts = types.BoolValue(resp.UseCustomFonts)
	}
}
