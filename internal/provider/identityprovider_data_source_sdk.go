// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/kong/terraform-provider-konnect/v2/internal/provider/typeconvert"
	tfTypes "github.com/kong/terraform-provider-konnect/v2/internal/provider/types"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/models/operations"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/models/shared"
)

func (r *IdentityProviderDataSourceModel) ToOperationsGetIdentityProviderRequest(ctx context.Context) (*operations.GetIdentityProviderRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	out := operations.GetIdentityProviderRequest{
		ID: id,
	}

	return &out, diags
}

func (r *IdentityProviderDataSourceModel) RefreshFromSharedIdentityProvider(ctx context.Context, resp *shared.IdentityProvider) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		if resp.Config != nil {
			r.Config = &tfTypes.IdentityProviderConfig{}
			if resp.Config.OIDCIdentityProviderConfigOutput != nil {
				r.Config.OIDCIdentityProviderConfig = &tfTypes.OIDCIdentityProviderConfig{}
				if resp.Config.OIDCIdentityProviderConfigOutput.ClaimMappings == nil {
					r.Config.OIDCIdentityProviderConfig.ClaimMappings = nil
				} else {
					r.Config.OIDCIdentityProviderConfig.ClaimMappings = &tfTypes.OIDCIdentityProviderClaimMappings{}
					r.Config.OIDCIdentityProviderConfig.ClaimMappings.Email = types.StringPointerValue(resp.Config.OIDCIdentityProviderConfigOutput.ClaimMappings.Email)
					r.Config.OIDCIdentityProviderConfig.ClaimMappings.Groups = types.StringPointerValue(resp.Config.OIDCIdentityProviderConfigOutput.ClaimMappings.Groups)
					r.Config.OIDCIdentityProviderConfig.ClaimMappings.Name = types.StringPointerValue(resp.Config.OIDCIdentityProviderConfigOutput.ClaimMappings.Name)
				}
				r.Config.OIDCIdentityProviderConfig.ClientID = types.StringValue(resp.Config.OIDCIdentityProviderConfigOutput.ClientID)
				r.Config.OIDCIdentityProviderConfig.IssuerURL = types.StringValue(resp.Config.OIDCIdentityProviderConfigOutput.IssuerURL)
				r.Config.OIDCIdentityProviderConfig.Scopes = make([]types.String, 0, len(resp.Config.OIDCIdentityProviderConfigOutput.Scopes))
				for _, v := range resp.Config.OIDCIdentityProviderConfigOutput.Scopes {
					r.Config.OIDCIdentityProviderConfig.Scopes = append(r.Config.OIDCIdentityProviderConfig.Scopes, types.StringValue(v))
				}
			}
			if resp.Config.SAMLIdentityProviderConfig != nil {
				r.Config.SAMLIdentityProviderConfig = &tfTypes.SAMLIdentityProviderConfig{}
				r.Config.SAMLIdentityProviderConfig.CallbackURL = types.StringPointerValue(resp.Config.SAMLIdentityProviderConfig.CallbackURL)
				r.Config.SAMLIdentityProviderConfig.IdpMetadataURL = types.StringPointerValue(resp.Config.SAMLIdentityProviderConfig.IdpMetadataURL)
				r.Config.SAMLIdentityProviderConfig.IdpMetadataXML = types.StringPointerValue(resp.Config.SAMLIdentityProviderConfig.IdpMetadataXML)
				r.Config.SAMLIdentityProviderConfig.LoginURL = types.StringPointerValue(resp.Config.SAMLIdentityProviderConfig.LoginURL)
				r.Config.SAMLIdentityProviderConfig.SpEntityID = types.StringPointerValue(resp.Config.SAMLIdentityProviderConfig.SpEntityID)
				r.Config.SAMLIdentityProviderConfig.SpMetadataURL = types.StringPointerValue(resp.Config.SAMLIdentityProviderConfig.SpMetadataURL)
			}
		}
		r.CreatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.CreatedAt))
		r.Enabled = types.BoolPointerValue(resp.Enabled)
		r.ID = types.StringPointerValue(resp.ID)
		r.LoginPath = types.StringPointerValue(resp.LoginPath)
		if resp.Type != nil {
			r.Type = types.StringValue(string(*resp.Type))
		} else {
			r.Type = types.StringNull()
		}
		r.UpdatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.UpdatedAt))
	}

	return diags
}
