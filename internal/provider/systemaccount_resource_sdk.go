// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/kong/terraform-provider-konnect/v3/internal/provider/typeconvert"
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/models/operations"
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/models/shared"
)

func (r *SystemAccountResourceModel) RefreshFromSharedSystemAccount(ctx context.Context, resp *shared.SystemAccount) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.CreatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.CreatedAt))
		r.Description = types.StringPointerValue(resp.Description)
		r.ID = types.StringPointerValue(resp.ID)
		r.KonnectManaged = types.BoolPointerValue(resp.KonnectManaged)
		r.Name = types.StringPointerValue(resp.Name)
		r.UpdatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.UpdatedAt))
	}

	return diags
}

func (r *SystemAccountResourceModel) ToOperationsDeleteSystemAccountsIDRequest(ctx context.Context) (*operations.DeleteSystemAccountsIDRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var accountID string
	accountID = r.ID.ValueString()

	out := operations.DeleteSystemAccountsIDRequest{
		AccountID: accountID,
	}

	return &out, diags
}

func (r *SystemAccountResourceModel) ToOperationsGetSystemAccountsIDRequest(ctx context.Context) (*operations.GetSystemAccountsIDRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var accountID string
	accountID = r.ID.ValueString()

	out := operations.GetSystemAccountsIDRequest{
		AccountID: accountID,
	}

	return &out, diags
}

func (r *SystemAccountResourceModel) ToOperationsPatchSystemAccountsIDRequest(ctx context.Context) (*operations.PatchSystemAccountsIDRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var accountID string
	accountID = r.ID.ValueString()

	updateSystemAccount, updateSystemAccountDiags := r.ToSharedUpdateSystemAccount(ctx)
	diags.Append(updateSystemAccountDiags...)

	if diags.HasError() {
		return nil, diags
	}

	out := operations.PatchSystemAccountsIDRequest{
		AccountID:           accountID,
		UpdateSystemAccount: updateSystemAccount,
	}

	return &out, diags
}

func (r *SystemAccountResourceModel) ToSharedCreateSystemAccount(ctx context.Context) (*shared.CreateSystemAccount, diag.Diagnostics) {
	var diags diag.Diagnostics

	var name string
	name = r.Name.ValueString()

	var description string
	description = r.Description.ValueString()

	konnectManaged := new(bool)
	if !r.KonnectManaged.IsUnknown() && !r.KonnectManaged.IsNull() {
		*konnectManaged = r.KonnectManaged.ValueBool()
	} else {
		konnectManaged = nil
	}
	out := shared.CreateSystemAccount{
		Name:           name,
		Description:    description,
		KonnectManaged: konnectManaged,
	}

	return &out, diags
}

func (r *SystemAccountResourceModel) ToSharedUpdateSystemAccount(ctx context.Context) (*shared.UpdateSystemAccount, diag.Diagnostics) {
	var diags diag.Diagnostics

	name := new(string)
	if !r.Name.IsUnknown() && !r.Name.IsNull() {
		*name = r.Name.ValueString()
	} else {
		name = nil
	}
	description := new(string)
	if !r.Description.IsUnknown() && !r.Description.IsNull() {
		*description = r.Description.ValueString()
	} else {
		description = nil
	}
	out := shared.UpdateSystemAccount{
		Name:        name,
		Description: description,
	}

	return &out, diags
}
