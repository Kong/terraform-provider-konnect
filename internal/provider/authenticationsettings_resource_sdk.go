// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/models/operations"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/models/shared"
)

func (r *AuthenticationSettingsResourceModel) ToSharedUpdateAuthenticationSettings(ctx context.Context) (*shared.UpdateAuthenticationSettings, diag.Diagnostics) {
	var diags diag.Diagnostics

	basicAuthEnabled := new(bool)
	if !r.BasicAuthEnabled.IsUnknown() && !r.BasicAuthEnabled.IsNull() {
		*basicAuthEnabled = r.BasicAuthEnabled.ValueBool()
	} else {
		basicAuthEnabled = nil
	}
	oidcAuthEnabled := new(bool)
	if !r.OidcAuthEnabled.IsUnknown() && !r.OidcAuthEnabled.IsNull() {
		*oidcAuthEnabled = r.OidcAuthEnabled.ValueBool()
	} else {
		oidcAuthEnabled = nil
	}
	samlAuthEnabled := new(bool)
	if !r.SamlAuthEnabled.IsUnknown() && !r.SamlAuthEnabled.IsNull() {
		*samlAuthEnabled = r.SamlAuthEnabled.ValueBool()
	} else {
		samlAuthEnabled = nil
	}
	idpMappingEnabled := new(bool)
	if !r.IdpMappingEnabled.IsUnknown() && !r.IdpMappingEnabled.IsNull() {
		*idpMappingEnabled = r.IdpMappingEnabled.ValueBool()
	} else {
		idpMappingEnabled = nil
	}
	konnectMappingEnabled := new(bool)
	if !r.KonnectMappingEnabled.IsUnknown() && !r.KonnectMappingEnabled.IsNull() {
		*konnectMappingEnabled = r.KonnectMappingEnabled.ValueBool()
	} else {
		konnectMappingEnabled = nil
	}
	out := shared.UpdateAuthenticationSettings{
		BasicAuthEnabled:      basicAuthEnabled,
		OidcAuthEnabled:       oidcAuthEnabled,
		SamlAuthEnabled:       samlAuthEnabled,
		IdpMappingEnabled:     idpMappingEnabled,
		KonnectMappingEnabled: konnectMappingEnabled,
	}

	return &out, diags
}

func (r *AuthenticationSettingsResourceModel) ToOperationsResetAuthenticationSettingsRequestBody(ctx context.Context) (*operations.ResetAuthenticationSettingsRequestBody, diag.Diagnostics) {
	var diags diag.Diagnostics

	out := operations.ResetAuthenticationSettingsRequestBody{}

	return &out, diags
}

func (r *AuthenticationSettingsResourceModel) RefreshFromSharedAuthenticationSettings(ctx context.Context, resp *shared.AuthenticationSettings) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.BasicAuthEnabled = types.BoolPointerValue(resp.BasicAuthEnabled)
		r.IdpMappingEnabled = types.BoolPointerValue(resp.IdpMappingEnabled)
		r.KonnectMappingEnabled = types.BoolPointerValue(resp.KonnectMappingEnabled)
		r.OidcAuthEnabled = types.BoolPointerValue(resp.OidcAuthEnabled)
		r.SamlAuthEnabled = types.BoolPointerValue(resp.SamlAuthEnabled)
	}

	return diags
}
