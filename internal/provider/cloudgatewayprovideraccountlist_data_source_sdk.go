// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/kong/terraform-provider-konnect/v2/internal/provider/typeconvert"
	tfTypes "github.com/kong/terraform-provider-konnect/v2/internal/provider/types"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/models/operations"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/models/shared"
)

func (r *CloudGatewayProviderAccountListDataSourceModel) RefreshFromSharedListProviderAccountsResponse(ctx context.Context, resp *shared.ListProviderAccountsResponse) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.Data = []tfTypes.ProviderAccount{}

		for _, dataItem := range resp.Data {
			var data tfTypes.ProviderAccount

			data.CreatedAt = types.StringValue(typeconvert.TimeToString(dataItem.CreatedAt))
			data.ID = types.StringValue(dataItem.ID)
			data.Provider = types.StringValue(string(dataItem.Provider))
			data.ProviderAccountID = types.StringValue(dataItem.ProviderAccountID)
			data.UpdatedAt = types.StringValue(typeconvert.TimeToString(dataItem.UpdatedAt))

			r.Data = append(r.Data, data)
		}
		r.Meta.Page.Number = types.Float64Value(resp.Meta.Page.Number)
		r.Meta.Page.Size = types.Float64Value(resp.Meta.Page.Size)
		r.Meta.Page.Total = types.Float64Value(resp.Meta.Page.Total)
	}

	return diags
}

func (r *CloudGatewayProviderAccountListDataSourceModel) ToOperationsListProviderAccountsRequest(ctx context.Context) (*operations.ListProviderAccountsRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	pageSize := new(int64)
	if !r.PageSize.IsUnknown() && !r.PageSize.IsNull() {
		*pageSize = r.PageSize.ValueInt64()
	} else {
		pageSize = nil
	}
	pageNumber := new(int64)
	if !r.PageNumber.IsUnknown() && !r.PageNumber.IsNull() {
		*pageNumber = r.PageNumber.ValueInt64()
	} else {
		pageNumber = nil
	}
	out := operations.ListProviderAccountsRequest{
		PageSize:   pageSize,
		PageNumber: pageNumber,
	}

	return &out, diags
}
