// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/internal/utils"
)

type KeyAuthConsumer struct {
	ID *string `json:"id,omitempty"`
}

func (o *KeyAuthConsumer) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

type KeyAuth struct {
	Consumer *KeyAuthConsumer `json:"consumer"`
	// Unix epoch when the resource was created.
	CreatedAt *int64   `json:"created_at,omitempty"`
	ID        *string  `json:"id,omitempty"`
	Key       *string  `default:"null" json:"key"`
	Tags      []string `json:"tags,omitempty"`
	// key-auth ttl in seconds
	TTL *int64 `default:"null" json:"ttl"`
}

func (k KeyAuth) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(k, "", false)
}

func (k *KeyAuth) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &k, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *KeyAuth) GetConsumer() *KeyAuthConsumer {
	if o == nil {
		return nil
	}
	return o.Consumer
}

func (o *KeyAuth) GetCreatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *KeyAuth) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *KeyAuth) GetKey() *string {
	if o == nil {
		return nil
	}
	return o.Key
}

func (o *KeyAuth) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *KeyAuth) GetTTL() *int64 {
	if o == nil {
		return nil
	}
	return o.TTL
}
