// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type CreateIntegrationInstance struct {
	// The type of integration instance to create.
	IntegrationName string `json:"integration_name"`
	// The machine name of the integration instance that uniquely identifies it within the catalog.
	//
	Name string `json:"name"`
	// The display name of the integration instance.
	DisplayName string `json:"display_name"`
	// Optionally provide a description of the integration instance.
	Description *string `json:"description,omitempty"`
	// JSON object representing configuration specific to the integration instance.
	// The expected schema depends on the integration type and is dynamically registered at runtime.
	//
	Config any `json:"config"`
}

func (o *CreateIntegrationInstance) GetIntegrationName() string {
	if o == nil {
		return ""
	}
	return o.IntegrationName
}

func (o *CreateIntegrationInstance) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateIntegrationInstance) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *CreateIntegrationInstance) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateIntegrationInstance) GetConfig() any {
	if o == nil {
		return nil
	}
	return o.Config
}
