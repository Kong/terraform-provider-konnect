// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/internal/utils"
	"time"
)

type Portals struct {
	// The portal identifier.
	ID string `json:"id"`
	// The name of the portal, used to distinguish it from other portals.
	Name string `json:"name"`
	// The display name of the portal. This value will be the portal's `name` in Portal API.
	DisplayName string `json:"display_name"`
}

func (o *Portals) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Portals) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Portals) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

// APIResponseSchema - API
type APIResponseSchema struct {
	// The API identifier.
	ID string `json:"id"`
	// The name of your API. The `name + version` combination must be unique for each API you publish.
	//
	Name string `json:"name"`
	// A description of your API. Will be visible on your live Portal.
	Description *string `default:"null" json:"description"`
	// An optional version for your API. Leave this empty if your API is unversioned.
	Version               *string            `default:"null" json:"version"`
	CurrentVersionSummary *APIVersionSummary `json:"current_version_summary"`
	// The `slug` is used in generated URLs to provide human readable paths.
	//
	// Defaults to `slugify(name + version)`
	//
	Slug *string `default:"null" json:"slug"`
	// The list of API specification ids for the API.
	//
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	APISpecIds []string `json:"api_spec_ids"`
	// The list of portals which this API is published to.
	Portals []Portals `json:"portals"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]*string `json:"labels"`
	// A set of attributes that describe the API
	Attributes any `json:"attributes,omitempty"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (a APIResponseSchema) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *APIResponseSchema) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *APIResponseSchema) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *APIResponseSchema) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *APIResponseSchema) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *APIResponseSchema) GetVersion() *string {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *APIResponseSchema) GetCurrentVersionSummary() *APIVersionSummary {
	if o == nil {
		return nil
	}
	return o.CurrentVersionSummary
}

func (o *APIResponseSchema) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *APIResponseSchema) GetAPISpecIds() []string {
	if o == nil {
		return []string{}
	}
	return o.APISpecIds
}

func (o *APIResponseSchema) GetPortals() []Portals {
	if o == nil {
		return []Portals{}
	}
	return o.Portals
}

func (o *APIResponseSchema) GetLabels() map[string]*string {
	if o == nil {
		return map[string]*string{}
	}
	return o.Labels
}

func (o *APIResponseSchema) GetAttributes() any {
	if o == nil {
		return nil
	}
	return o.Attributes
}

func (o *APIResponseSchema) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *APIResponseSchema) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
