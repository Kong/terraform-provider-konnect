// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/internal/utils"
)

type IntegrationInstanceAuthCredentialType string

const (
	IntegrationInstanceAuthCredentialTypeMultiKeyAuthCredential IntegrationInstanceAuthCredentialType = "MultiKeyAuthCredential"
)

// IntegrationInstanceAuthCredential - Object containing metadata for an integration instance auth credential.
type IntegrationInstanceAuthCredential struct {
	MultiKeyAuthCredential *MultiKeyAuthCredential `queryParam:"inline"`

	Type IntegrationInstanceAuthCredentialType
}

func CreateIntegrationInstanceAuthCredentialMultiKeyAuthCredential(multiKeyAuthCredential MultiKeyAuthCredential) IntegrationInstanceAuthCredential {
	typ := IntegrationInstanceAuthCredentialTypeMultiKeyAuthCredential

	return IntegrationInstanceAuthCredential{
		MultiKeyAuthCredential: &multiKeyAuthCredential,
		Type:                   typ,
	}
}

func (u *IntegrationInstanceAuthCredential) UnmarshalJSON(data []byte) error {

	var multiKeyAuthCredential MultiKeyAuthCredential = MultiKeyAuthCredential{}
	if err := utils.UnmarshalJSON(data, &multiKeyAuthCredential, "", true, true); err == nil {
		u.MultiKeyAuthCredential = &multiKeyAuthCredential
		u.Type = IntegrationInstanceAuthCredentialTypeMultiKeyAuthCredential
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for IntegrationInstanceAuthCredential", string(data))
}

func (u IntegrationInstanceAuthCredential) MarshalJSON() ([]byte, error) {
	if u.MultiKeyAuthCredential != nil {
		return utils.MarshalJSON(u.MultiKeyAuthCredential, "", true)
	}

	return nil, errors.New("could not marshal union type IntegrationInstanceAuthCredential: all fields are null")
}
