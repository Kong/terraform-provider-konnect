// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CustomDomainState - State of the custom domain.
type CustomDomainState string

const (
	CustomDomainStateCreated      CustomDomainState = "created"
	CustomDomainStateInitializing CustomDomainState = "initializing"
	CustomDomainStateReady        CustomDomainState = "ready"
	CustomDomainStateTerminating  CustomDomainState = "terminating"
	CustomDomainStateTerminated   CustomDomainState = "terminated"
	CustomDomainStateError        CustomDomainState = "error"
)

func (e CustomDomainState) ToPointer() *CustomDomainState {
	return &e
}

func (e *CustomDomainState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created":
		fallthrough
	case "initializing":
		fallthrough
	case "ready":
		fallthrough
	case "terminating":
		fallthrough
	case "terminated":
		fallthrough
	case "error":
		*e = CustomDomainState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomDomainState: %v", v)
	}
}
