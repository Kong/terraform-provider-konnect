// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
)

type AWSVPCPeeringAttachmentConfig string

const (
	AWSVPCPeeringAttachmentConfigAwsVpcPeeringAttachment AWSVPCPeeringAttachmentConfig = "aws-vpc-peering-attachment"
)

func (e AWSVPCPeeringAttachmentConfig) ToPointer() *AWSVPCPeeringAttachmentConfig {
	return &e
}
func (e *AWSVPCPeeringAttachmentConfig) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "aws-vpc-peering-attachment":
		*e = AWSVPCPeeringAttachmentConfig(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AWSVPCPeeringAttachmentConfig: %v", v)
	}
}

type AwsVpcPeeringGatewayAttachmentConfig struct {
	Kind          AWSVPCPeeringAttachmentConfig `json:"kind"`
	PeerAccountID string                        `json:"peer_account_id"`
	PeerVpcID     string                        `json:"peer_vpc_id"`
	PeerVpcRegion string                        `json:"peer_vpc_region"`
}

func (a AwsVpcPeeringGatewayAttachmentConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AwsVpcPeeringGatewayAttachmentConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"kind", "peer_account_id", "peer_vpc_id", "peer_vpc_region"}); err != nil {
		return err
	}
	return nil
}

func (a *AwsVpcPeeringGatewayAttachmentConfig) GetKind() AWSVPCPeeringAttachmentConfig {
	if a == nil {
		return AWSVPCPeeringAttachmentConfig("")
	}
	return a.Kind
}

func (a *AwsVpcPeeringGatewayAttachmentConfig) GetPeerAccountID() string {
	if a == nil {
		return ""
	}
	return a.PeerAccountID
}

func (a *AwsVpcPeeringGatewayAttachmentConfig) GetPeerVpcID() string {
	if a == nil {
		return ""
	}
	return a.PeerVpcID
}

func (a *AwsVpcPeeringGatewayAttachmentConfig) GetPeerVpcRegion() string {
	if a == nil {
		return ""
	}
	return a.PeerVpcRegion
}
