// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
)

type UpdateAPIRequest struct {
	// The name of your API. The `name + version` combination must be unique for each API you publish.
	//
	Name *string `default:"null" json:"name"`
	// A description of your API. Will be visible on your live Portal.
	Description *string `default:"null" json:"description"`
	// An optional version for your API. Leave this empty if your API is unversioned.
	Version *string `json:"version,omitempty"`
	// The `slug` is used in generated URLs to provide human readable paths.
	//
	// Defaults to `slugify(name + version)`
	//
	Slug *string `json:"slug,omitempty"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Labels are intended to store **INTERNAL** metadata.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]*string `json:"labels,omitempty"`
	// A set of attributes that describe the API
	Attributes any `json:"attributes,omitempty"`
}

func (u UpdateAPIRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateAPIRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UpdateAPIRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateAPIRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateAPIRequest) GetVersion() *string {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *UpdateAPIRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *UpdateAPIRequest) GetLabels() map[string]*string {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *UpdateAPIRequest) GetAttributes() any {
	if o == nil {
		return nil
	}
	return o.Attributes
}
