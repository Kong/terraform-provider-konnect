// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type Consumer struct {
	// Unix epoch when the resource was created.
	CreatedAt *int64 `json:"created_at,omitempty"`
	// Field for storing an existing unique ID for the Consumer - useful for mapping Kong with users in your existing database. You must send either this field or `username` with the request.
	CustomID *string `json:"custom_id,omitempty"`
	ID       *string `json:"id,omitempty"`
	// An optional set of strings associated with the Consumer for grouping and filtering.
	Tags []string `json:"tags,omitempty"`
	// Unix epoch when the resource was last updated.
	UpdatedAt *int64 `json:"updated_at,omitempty"`
	// The unique username of the Consumer. You must send either this field or `custom_id` with the request.
	Username *string `json:"username,omitempty"`
}

func (o *Consumer) GetCreatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *Consumer) GetCustomID() *string {
	if o == nil {
		return nil
	}
	return o.CustomID
}

func (o *Consumer) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Consumer) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *Consumer) GetUpdatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *Consumer) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}
