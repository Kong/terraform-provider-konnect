// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DcrProviderOktaProviderType string

const (
	DcrProviderOktaProviderTypeOkta DcrProviderOktaProviderType = "okta"
)

func (e DcrProviderOktaProviderType) ToPointer() *DcrProviderOktaProviderType {
	return &e
}
func (e *DcrProviderOktaProviderType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "okta":
		*e = DcrProviderOktaProviderType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DcrProviderOktaProviderType: %v", v)
	}
}

// DcrProviderOkta - A DCR provider for Okta -- only properties not included in DcrProviderBase
type DcrProviderOkta struct {
	// Contains a unique identifier used by the API for this resource.
	ID *string `json:"id,omitempty"`
	// The name of the DCR provider. This is used to identify the DCR provider in the Konnect UI.
	//
	Name *string `json:"name,omitempty"`
	// The display name of the DCR provider. This is used to identify the DCR provider in the Portal UI.
	//
	DisplayName *string `json:"display_name,omitempty"`
	// The issuer of the DCR provider.
	Issuer *string `json:"issuer,omitempty"`
	// At least one active auth strategy is using this DCR provider.
	Active       *bool                       `json:"active,omitempty"`
	ProviderType DcrProviderOktaProviderType `json:"provider_type"`
	// A DCR provider configuration for Okta
	DcrConfig DcrConfigOktaInResponse `json:"dcr_config"`
}

func (o *DcrProviderOkta) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *DcrProviderOkta) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *DcrProviderOkta) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *DcrProviderOkta) GetIssuer() *string {
	if o == nil {
		return nil
	}
	return o.Issuer
}

func (o *DcrProviderOkta) GetActive() *bool {
	if o == nil {
		return nil
	}
	return o.Active
}

func (o *DcrProviderOkta) GetProviderType() DcrProviderOktaProviderType {
	if o == nil {
		return DcrProviderOktaProviderType("")
	}
	return o.ProviderType
}

func (o *DcrProviderOkta) GetDcrConfig() DcrConfigOktaInResponse {
	if o == nil {
		return DcrConfigOktaInResponse{}
	}
	return o.DcrConfig
}
