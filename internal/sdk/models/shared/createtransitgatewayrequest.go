// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/internal/utils"
)

type CreateTransitGatewayRequestType string

const (
	CreateTransitGatewayRequestTypeCreateAwsTransitGateway    CreateTransitGatewayRequestType = "CreateAwsTransitGateway"
	CreateTransitGatewayRequestTypeCreateAwsVpcPeeringGateway CreateTransitGatewayRequestType = "CreateAwsVpcPeeringGateway"
	CreateTransitGatewayRequestTypeCreateAzureTransitGateway  CreateTransitGatewayRequestType = "CreateAzureTransitGateway"
)

// CreateTransitGatewayRequest - Request schema for creating a transit gateway.
type CreateTransitGatewayRequest struct {
	CreateAwsTransitGateway    *CreateAwsTransitGateway    `queryParam:"inline"`
	CreateAwsVpcPeeringGateway *CreateAwsVpcPeeringGateway `queryParam:"inline"`
	CreateAzureTransitGateway  *CreateAzureTransitGateway  `queryParam:"inline"`

	Type CreateTransitGatewayRequestType
}

func CreateCreateTransitGatewayRequestCreateAwsTransitGateway(createAwsTransitGateway CreateAwsTransitGateway) CreateTransitGatewayRequest {
	typ := CreateTransitGatewayRequestTypeCreateAwsTransitGateway

	return CreateTransitGatewayRequest{
		CreateAwsTransitGateway: &createAwsTransitGateway,
		Type:                    typ,
	}
}

func CreateCreateTransitGatewayRequestCreateAwsVpcPeeringGateway(createAwsVpcPeeringGateway CreateAwsVpcPeeringGateway) CreateTransitGatewayRequest {
	typ := CreateTransitGatewayRequestTypeCreateAwsVpcPeeringGateway

	return CreateTransitGatewayRequest{
		CreateAwsVpcPeeringGateway: &createAwsVpcPeeringGateway,
		Type:                       typ,
	}
}

func CreateCreateTransitGatewayRequestCreateAzureTransitGateway(createAzureTransitGateway CreateAzureTransitGateway) CreateTransitGatewayRequest {
	typ := CreateTransitGatewayRequestTypeCreateAzureTransitGateway

	return CreateTransitGatewayRequest{
		CreateAzureTransitGateway: &createAzureTransitGateway,
		Type:                      typ,
	}
}

func (u *CreateTransitGatewayRequest) UnmarshalJSON(data []byte) error {

	var createAzureTransitGateway CreateAzureTransitGateway = CreateAzureTransitGateway{}
	if err := utils.UnmarshalJSON(data, &createAzureTransitGateway, "", true, true); err == nil {
		u.CreateAzureTransitGateway = &createAzureTransitGateway
		u.Type = CreateTransitGatewayRequestTypeCreateAzureTransitGateway
		return nil
	}

	var createAwsTransitGateway CreateAwsTransitGateway = CreateAwsTransitGateway{}
	if err := utils.UnmarshalJSON(data, &createAwsTransitGateway, "", true, true); err == nil {
		u.CreateAwsTransitGateway = &createAwsTransitGateway
		u.Type = CreateTransitGatewayRequestTypeCreateAwsTransitGateway
		return nil
	}

	var createAwsVpcPeeringGateway CreateAwsVpcPeeringGateway = CreateAwsVpcPeeringGateway{}
	if err := utils.UnmarshalJSON(data, &createAwsVpcPeeringGateway, "", true, true); err == nil {
		u.CreateAwsVpcPeeringGateway = &createAwsVpcPeeringGateway
		u.Type = CreateTransitGatewayRequestTypeCreateAwsVpcPeeringGateway
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for CreateTransitGatewayRequest", string(data))
}

func (u CreateTransitGatewayRequest) MarshalJSON() ([]byte, error) {
	if u.CreateAwsTransitGateway != nil {
		return utils.MarshalJSON(u.CreateAwsTransitGateway, "", true)
	}

	if u.CreateAwsVpcPeeringGateway != nil {
		return utils.MarshalJSON(u.CreateAwsVpcPeeringGateway, "", true)
	}

	if u.CreateAzureTransitGateway != nil {
		return utils.MarshalJSON(u.CreateAzureTransitGateway, "", true)
	}

	return nil, errors.New("could not marshal union type CreateTransitGatewayRequest: all fields are null")
}
