// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GCPPrivateHostedZoneType string

const (
	GCPPrivateHostedZoneTypeGcpPrivateHostedZoneAttachment GCPPrivateHostedZoneType = "gcp-private-hosted-zone-attachment"
)

func (e GCPPrivateHostedZoneType) ToPointer() *GCPPrivateHostedZoneType {
	return &e
}
func (e *GCPPrivateHostedZoneType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "gcp-private-hosted-zone-attachment":
		*e = GCPPrivateHostedZoneType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GCPPrivateHostedZoneType: %v", v)
	}
}

type GcpPrivateHostedZoneAttachmentConfig struct {
	Kind GCPPrivateHostedZoneType `json:"kind"`
	// Domain name to create attachment to.
	DomainName string `json:"domain_name"`
	// Customer's GCP Project ID.
	PeerProjectID string `json:"peer_project_id"`
	// Customer's GCP VPC ID.
	PeerVpcName string `json:"peer_vpc_name"`
}

func (o *GcpPrivateHostedZoneAttachmentConfig) GetKind() GCPPrivateHostedZoneType {
	if o == nil {
		return GCPPrivateHostedZoneType("")
	}
	return o.Kind
}

func (o *GcpPrivateHostedZoneAttachmentConfig) GetDomainName() string {
	if o == nil {
		return ""
	}
	return o.DomainName
}

func (o *GcpPrivateHostedZoneAttachmentConfig) GetPeerProjectID() string {
	if o == nil {
		return ""
	}
	return o.PeerProjectID
}

func (o *GcpPrivateHostedZoneAttachmentConfig) GetPeerVpcName() string {
	if o == nil {
		return ""
	}
	return o.PeerVpcName
}
