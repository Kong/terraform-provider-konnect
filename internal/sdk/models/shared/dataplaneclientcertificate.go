// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
)

type DataPlaneClientCertificate struct {
	// Unique ID of the certificate entity.
	ID *string `json:"id,omitempty"`
	// Date certificate was created.
	CreatedAt *int64 `json:"created_at,omitempty"`
	// Date certificate was last updated.
	UpdatedAt *int64 `json:"updated_at,omitempty"`
	// JSON escaped string of the certificate.
	Cert *string `default:"null" json:"cert"`
}

func (d DataPlaneClientCertificate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DataPlaneClientCertificate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (d *DataPlaneClientCertificate) GetID() *string {
	if d == nil {
		return nil
	}
	return d.ID
}

func (d *DataPlaneClientCertificate) GetCreatedAt() *int64 {
	if d == nil {
		return nil
	}
	return d.CreatedAt
}

func (d *DataPlaneClientCertificate) GetUpdatedAt() *int64 {
	if d == nil {
		return nil
	}
	return d.UpdatedAt
}

func (d *DataPlaneClientCertificate) GetCert() *string {
	if d == nil {
		return nil
	}
	return d.Cert
}
