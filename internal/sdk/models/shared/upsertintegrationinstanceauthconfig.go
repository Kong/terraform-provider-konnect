// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
)

type UpsertIntegrationInstanceAuthConfigType string

const (
	UpsertIntegrationInstanceAuthConfigTypeOauthConfig UpsertIntegrationInstanceAuthConfigType = "oauth_config"
)

type UpsertIntegrationInstanceAuthConfig struct {
	OauthConfig *OauthConfig `queryParam:"inline"`

	Type UpsertIntegrationInstanceAuthConfigType
}

func CreateUpsertIntegrationInstanceAuthConfigOauthConfig(oauthConfig OauthConfig) UpsertIntegrationInstanceAuthConfig {
	typ := UpsertIntegrationInstanceAuthConfigTypeOauthConfig

	return UpsertIntegrationInstanceAuthConfig{
		OauthConfig: &oauthConfig,
		Type:        typ,
	}
}

func (u *UpsertIntegrationInstanceAuthConfig) UnmarshalJSON(data []byte) error {

	var oauthConfig OauthConfig = OauthConfig{}
	if err := utils.UnmarshalJSON(data, &oauthConfig, "", true, true); err == nil {
		u.OauthConfig = &oauthConfig
		u.Type = UpsertIntegrationInstanceAuthConfigTypeOauthConfig
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for UpsertIntegrationInstanceAuthConfig", string(data))
}

func (u UpsertIntegrationInstanceAuthConfig) MarshalJSON() ([]byte, error) {
	if u.OauthConfig != nil {
		return utils.MarshalJSON(u.OauthConfig, "", true)
	}

	return nil, errors.New("could not marshal union type UpsertIntegrationInstanceAuthConfig: all fields are null")
}
