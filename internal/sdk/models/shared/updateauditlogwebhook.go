// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
)

// UpdateAuditLogWebhook - The request schema to modify an audit log webhook.
type UpdateAuditLogWebhook struct {
	// The endpoint that will receive audit log messages.
	Endpoint *string `default:"null" json:"endpoint"`
	// The value to include in the `Authorization` header when sending audit logs to the webhook.
	Authorization *string `default:"null" json:"authorization"`
	// Indicates if the data should be sent to the webhook.
	Enabled *bool `default:"false" json:"enabled"`
	// The output format of each log messages.
	LogFormat *LogFormat `default:"cef" json:"log_format"`
	// Indicates if the SSL certificate verification of the host endpoint should be skipped when delivering payloads.
	// We strongly recommend not setting this to 'true' as you are subject to man-in-the-middle and other attacks.
	// This option should be considered only for self-signed SSL certificates used in a non-production environment.
	SkipSslVerification *bool `default:"false" json:"skip_ssl_verification"`
}

func (u UpdateAuditLogWebhook) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateAuditLogWebhook) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (u *UpdateAuditLogWebhook) GetEndpoint() *string {
	if u == nil {
		return nil
	}
	return u.Endpoint
}

func (u *UpdateAuditLogWebhook) GetAuthorization() *string {
	if u == nil {
		return nil
	}
	return u.Authorization
}

func (u *UpdateAuditLogWebhook) GetEnabled() *bool {
	if u == nil {
		return nil
	}
	return u.Enabled
}

func (u *UpdateAuditLogWebhook) GetLogFormat() *LogFormat {
	if u == nil {
		return nil
	}
	return u.LogFormat
}

func (u *UpdateAuditLogWebhook) GetSkipSslVerification() *bool {
	if u == nil {
		return nil
	}
	return u.SkipSslVerification
}
