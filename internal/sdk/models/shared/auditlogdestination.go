// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/internal/utils"
	"time"
)

// AuditLogDestinationLogFormat - The output format of each log messages.
type AuditLogDestinationLogFormat string

const (
	AuditLogDestinationLogFormatCef  AuditLogDestinationLogFormat = "cef"
	AuditLogDestinationLogFormatJSON AuditLogDestinationLogFormat = "json"
)

func (e AuditLogDestinationLogFormat) ToPointer() *AuditLogDestinationLogFormat {
	return &e
}
func (e *AuditLogDestinationLogFormat) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cef":
		fallthrough
	case "json":
		*e = AuditLogDestinationLogFormat(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuditLogDestinationLogFormat: %v", v)
	}
}

// AuditLogDestination - Audit Log Destination Schema
type AuditLogDestination struct {
	// The unique ID of the audit log destination.
	ID *string `json:"id,omitempty"`
	// The name of the audit log destination.
	Name *string `json:"name,omitempty"`
	// The endpoint that will receive audit log messages.
	Endpoint *string `json:"endpoint,omitempty"`
	// The output format of each log messages.
	LogFormat *AuditLogDestinationLogFormat `json:"log_format,omitempty"`
	// Indicates if the SSL certificate verification of the host endpoint should be skipped when delivering payloads.
	SkipSslVerification *bool `json:"skip_ssl_verification,omitempty"`
	// Timestamp when this webhook was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Timestamp when this webhook was last updated. Initial value is 0001-01-01T00:00:0Z.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

func (a AuditLogDestination) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AuditLogDestination) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AuditLogDestination) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *AuditLogDestination) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *AuditLogDestination) GetEndpoint() *string {
	if o == nil {
		return nil
	}
	return o.Endpoint
}

func (o *AuditLogDestination) GetLogFormat() *AuditLogDestinationLogFormat {
	if o == nil {
		return nil
	}
	return o.LogFormat
}

func (o *AuditLogDestination) GetSkipSslVerification() *bool {
	if o == nil {
		return nil
	}
	return o.SkipSslVerification
}

func (o *AuditLogDestination) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *AuditLogDestination) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
