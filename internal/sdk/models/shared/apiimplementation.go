// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/internal/utils"
)

type APIImplementationType string

const (
	APIImplementationTypeServiceReference APIImplementationType = "Service Reference"
)

// APIImplementation - An entity that implements an API
type APIImplementation struct {
	ServiceReference *ServiceReference `queryParam:"inline"`

	Type APIImplementationType
}

func CreateAPIImplementationServiceReference(serviceReference ServiceReference) APIImplementation {
	typ := APIImplementationTypeServiceReference

	return APIImplementation{
		ServiceReference: &serviceReference,
		Type:             typ,
	}
}

func (u *APIImplementation) UnmarshalJSON(data []byte) error {

	var serviceReference ServiceReference = ServiceReference{}
	if err := utils.UnmarshalJSON(data, &serviceReference, "", true, true); err == nil {
		u.ServiceReference = &serviceReference
		u.Type = APIImplementationTypeServiceReference
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for APIImplementation", string(data))
}

func (u APIImplementation) MarshalJSON() ([]byte, error) {
	if u.ServiceReference != nil {
		return utils.MarshalJSON(u.ServiceReference, "", true)
	}

	return nil, errors.New("could not marshal union type APIImplementation: all fields are null")
}
