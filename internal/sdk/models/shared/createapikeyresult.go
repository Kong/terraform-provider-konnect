// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
	"time"
)

type CreateAPIKeyResult struct {
	ID     string      `json:"id"`
	Type   KeyTypeEnum `json:"type"`
	Secret string      `json:"secret"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
	Tags      []string  `json:"tags"`
}

func (c CreateAPIKeyResult) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateAPIKeyResult) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateAPIKeyResult) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateAPIKeyResult) GetType() KeyTypeEnum {
	if o == nil {
		return KeyTypeEnum("")
	}
	return o.Type
}

func (o *CreateAPIKeyResult) GetSecret() string {
	if o == nil {
		return ""
	}
	return o.Secret
}

func (o *CreateAPIKeyResult) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *CreateAPIKeyResult) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *CreateAPIKeyResult) GetTags() []string {
	if o == nil {
		return []string{}
	}
	return o.Tags
}
