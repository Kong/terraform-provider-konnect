// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TransitGatewayState - State of the transit gateway.
type TransitGatewayState string

const (
	TransitGatewayStateCreated      TransitGatewayState = "created"
	TransitGatewayStateInitializing TransitGatewayState = "initializing"
	TransitGatewayStateReady        TransitGatewayState = "ready"
	TransitGatewayStateTerminating  TransitGatewayState = "terminating"
	TransitGatewayStateTerminated   TransitGatewayState = "terminated"
)

func (e TransitGatewayState) ToPointer() *TransitGatewayState {
	return &e
}
func (e *TransitGatewayState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created":
		fallthrough
	case "initializing":
		fallthrough
	case "ready":
		fallthrough
	case "terminating":
		fallthrough
	case "terminated":
		*e = TransitGatewayState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TransitGatewayState: %v", v)
	}
}
