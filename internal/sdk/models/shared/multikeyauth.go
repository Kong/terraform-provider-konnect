// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
)

type Headers struct {
	// Name of the request header
	Name string `json:"name"`
	// The key used to populate the request header
	Key string `json:"key"`
}

func (h Headers) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(h, "", false)
}

func (h *Headers) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &h, "", false, []string{"name", "key"}); err != nil {
		return err
	}
	return nil
}

func (h *Headers) GetName() string {
	if h == nil {
		return ""
	}
	return h.Name
}

func (h *Headers) GetKey() string {
	if h == nil {
		return ""
	}
	return h.Key
}

type CreateMultiKeyAuthCredentialConfig struct {
	// A list of header key/value pairs used to transmit API credentials to the integration's external API.
	// Header names are defined by the integration within its `Multi Key` authorization strategy definition.
	//
	Headers []Headers `json:"headers"`
}

func (c CreateMultiKeyAuthCredentialConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateMultiKeyAuthCredentialConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"headers"}); err != nil {
		return err
	}
	return nil
}

func (c *CreateMultiKeyAuthCredentialConfig) GetHeaders() []Headers {
	if c == nil {
		return []Headers{}
	}
	return c.Headers
}

// MultiKeyAuth - Payload used to create an `Multi Key` credential for an integration instance.
type MultiKeyAuth struct {
	type_  string                             `const:"multi_key_auth" json:"type"`
	Config CreateMultiKeyAuthCredentialConfig `json:"config"`
}

func (m MultiKeyAuth) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MultiKeyAuth) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, []string{"type", "config"}); err != nil {
		return err
	}
	return nil
}

func (m *MultiKeyAuth) GetType() string {
	return "multi_key_auth"
}

func (m *MultiKeyAuth) GetConfig() CreateMultiKeyAuthCredentialConfig {
	if m == nil {
		return CreateMultiKeyAuthCredentialConfig{}
	}
	return m.Config
}
