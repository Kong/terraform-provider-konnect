// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
)

type PrivateDNSAttachmentConfigType string

const (
	PrivateDNSAttachmentConfigTypeAwsPrivateHostedZoneAttachmentConfig  PrivateDNSAttachmentConfigType = "AwsPrivateHostedZoneAttachmentConfig"
	PrivateDNSAttachmentConfigTypeAwsPrivateDNSResolverAttachmentConfig PrivateDNSAttachmentConfigType = "AwsPrivateDnsResolverAttachmentConfig"
	PrivateDNSAttachmentConfigTypeGcpPrivateHostedZoneAttachmentConfig  PrivateDNSAttachmentConfigType = "GcpPrivateHostedZoneAttachmentConfig"
)

type PrivateDNSAttachmentConfig struct {
	AwsPrivateHostedZoneAttachmentConfig  *AwsPrivateHostedZoneAttachmentConfig  `queryParam:"inline"`
	AwsPrivateDNSResolverAttachmentConfig *AwsPrivateDNSResolverAttachmentConfig `queryParam:"inline"`
	GcpPrivateHostedZoneAttachmentConfig  *GcpPrivateHostedZoneAttachmentConfig  `queryParam:"inline"`

	Type PrivateDNSAttachmentConfigType
}

func CreatePrivateDNSAttachmentConfigAwsPrivateHostedZoneAttachmentConfig(awsPrivateHostedZoneAttachmentConfig AwsPrivateHostedZoneAttachmentConfig) PrivateDNSAttachmentConfig {
	typ := PrivateDNSAttachmentConfigTypeAwsPrivateHostedZoneAttachmentConfig

	return PrivateDNSAttachmentConfig{
		AwsPrivateHostedZoneAttachmentConfig: &awsPrivateHostedZoneAttachmentConfig,
		Type:                                 typ,
	}
}

func CreatePrivateDNSAttachmentConfigAwsPrivateDNSResolverAttachmentConfig(awsPrivateDNSResolverAttachmentConfig AwsPrivateDNSResolverAttachmentConfig) PrivateDNSAttachmentConfig {
	typ := PrivateDNSAttachmentConfigTypeAwsPrivateDNSResolverAttachmentConfig

	return PrivateDNSAttachmentConfig{
		AwsPrivateDNSResolverAttachmentConfig: &awsPrivateDNSResolverAttachmentConfig,
		Type:                                  typ,
	}
}

func CreatePrivateDNSAttachmentConfigGcpPrivateHostedZoneAttachmentConfig(gcpPrivateHostedZoneAttachmentConfig GcpPrivateHostedZoneAttachmentConfig) PrivateDNSAttachmentConfig {
	typ := PrivateDNSAttachmentConfigTypeGcpPrivateHostedZoneAttachmentConfig

	return PrivateDNSAttachmentConfig{
		GcpPrivateHostedZoneAttachmentConfig: &gcpPrivateHostedZoneAttachmentConfig,
		Type:                                 typ,
	}
}

func (u *PrivateDNSAttachmentConfig) UnmarshalJSON(data []byte) error {

	var awsPrivateHostedZoneAttachmentConfig AwsPrivateHostedZoneAttachmentConfig = AwsPrivateHostedZoneAttachmentConfig{}
	if err := utils.UnmarshalJSON(data, &awsPrivateHostedZoneAttachmentConfig, "", true, true); err == nil {
		u.AwsPrivateHostedZoneAttachmentConfig = &awsPrivateHostedZoneAttachmentConfig
		u.Type = PrivateDNSAttachmentConfigTypeAwsPrivateHostedZoneAttachmentConfig
		return nil
	}

	var awsPrivateDNSResolverAttachmentConfig AwsPrivateDNSResolverAttachmentConfig = AwsPrivateDNSResolverAttachmentConfig{}
	if err := utils.UnmarshalJSON(data, &awsPrivateDNSResolverAttachmentConfig, "", true, true); err == nil {
		u.AwsPrivateDNSResolverAttachmentConfig = &awsPrivateDNSResolverAttachmentConfig
		u.Type = PrivateDNSAttachmentConfigTypeAwsPrivateDNSResolverAttachmentConfig
		return nil
	}

	var gcpPrivateHostedZoneAttachmentConfig GcpPrivateHostedZoneAttachmentConfig = GcpPrivateHostedZoneAttachmentConfig{}
	if err := utils.UnmarshalJSON(data, &gcpPrivateHostedZoneAttachmentConfig, "", true, true); err == nil {
		u.GcpPrivateHostedZoneAttachmentConfig = &gcpPrivateHostedZoneAttachmentConfig
		u.Type = PrivateDNSAttachmentConfigTypeGcpPrivateHostedZoneAttachmentConfig
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for PrivateDNSAttachmentConfig", string(data))
}

func (u PrivateDNSAttachmentConfig) MarshalJSON() ([]byte, error) {
	if u.AwsPrivateHostedZoneAttachmentConfig != nil {
		return utils.MarshalJSON(u.AwsPrivateHostedZoneAttachmentConfig, "", true)
	}

	if u.AwsPrivateDNSResolverAttachmentConfig != nil {
		return utils.MarshalJSON(u.AwsPrivateDNSResolverAttachmentConfig, "", true)
	}

	if u.GcpPrivateHostedZoneAttachmentConfig != nil {
		return utils.MarshalJSON(u.GcpPrivateHostedZoneAttachmentConfig, "", true)
	}

	return nil, errors.New("could not marshal union type PrivateDNSAttachmentConfig: all fields are null")
}

// CreatePrivateDNSRequest - Request schema for creating a Private DNS.
type CreatePrivateDNSRequest struct {
	// Human-readable name of the Private DNS.
	Name                       *string                     `json:"name,omitempty"`
	PrivateDNSAttachmentConfig *PrivateDNSAttachmentConfig `json:"private_dns_attachment_config,omitempty"`
}

func (o *CreatePrivateDNSRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CreatePrivateDNSRequest) GetPrivateDNSAttachmentConfig() *PrivateDNSAttachmentConfig {
	if o == nil {
		return nil
	}
	return o.PrivateDNSAttachmentConfig
}
