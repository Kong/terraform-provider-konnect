// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/internal/utils"
)

type IntegrationInstanceAuthConfigType string

const (
	IntegrationInstanceAuthConfigTypeOauthAuthConfig IntegrationInstanceAuthConfigType = "OauthAuthConfig"
)

// IntegrationInstanceAuthConfig - A response containing integration instance auth config.
type IntegrationInstanceAuthConfig struct {
	OauthAuthConfig *OauthAuthConfig `queryParam:"inline"`

	Type IntegrationInstanceAuthConfigType
}

func CreateIntegrationInstanceAuthConfigOauthAuthConfig(oauthAuthConfig OauthAuthConfig) IntegrationInstanceAuthConfig {
	typ := IntegrationInstanceAuthConfigTypeOauthAuthConfig

	return IntegrationInstanceAuthConfig{
		OauthAuthConfig: &oauthAuthConfig,
		Type:            typ,
	}
}

func (u *IntegrationInstanceAuthConfig) UnmarshalJSON(data []byte) error {

	var oauthAuthConfig OauthAuthConfig = OauthAuthConfig{}
	if err := utils.UnmarshalJSON(data, &oauthAuthConfig, "", true, true); err == nil {
		u.OauthAuthConfig = &oauthAuthConfig
		u.Type = IntegrationInstanceAuthConfigTypeOauthAuthConfig
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for IntegrationInstanceAuthConfig", string(data))
}

func (u IntegrationInstanceAuthConfig) MarshalJSON() ([]byte, error) {
	if u.OauthAuthConfig != nil {
		return utils.MarshalJSON(u.OauthAuthConfig, "", true)
	}

	return nil, errors.New("could not marshal union type IntegrationInstanceAuthConfig: all fields are null")
}
