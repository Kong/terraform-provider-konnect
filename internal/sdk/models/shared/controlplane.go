// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect/internal/sdk/internal/utils"
	"time"
)

// Config - CP configuration object for related access endpoints.
type Config struct {
	// Control Plane Endpoint.
	ControlPlaneEndpoint *string `json:"control_plane_endpoint,omitempty"`
	// Telemetry Endpoint.
	TelemetryEndpoint *string `json:"telemetry_endpoint,omitempty"`
}

func (o *Config) GetControlPlaneEndpoint() *string {
	if o == nil {
		return nil
	}
	return o.ControlPlaneEndpoint
}

func (o *Config) GetTelemetryEndpoint() *string {
	if o == nil {
		return nil
	}
	return o.TelemetryEndpoint
}

// ControlPlane - The control plane object contains information about a Kong control plane.
type ControlPlane struct {
	// CP configuration object for related access endpoints.
	Config *Config `json:"config,omitempty"`
	// An ISO-8604 timestamp representation of control plane creation date.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The description of the control plane in Konnect.
	Description *string `json:"description,omitempty"`
	// The control plane ID.
	ID *string `json:"id,omitempty"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]string `json:"labels,omitempty"`
	// The name of the control plane.
	Name *string `json:"name,omitempty"`
	// An ISO-8604 timestamp representation of control plane update date.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

func (c ControlPlane) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ControlPlane) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ControlPlane) GetConfig() *Config {
	if o == nil {
		return nil
	}
	return o.Config
}

func (o *ControlPlane) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *ControlPlane) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ControlPlane) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ControlPlane) GetLabels() map[string]string {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *ControlPlane) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ControlPlane) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
