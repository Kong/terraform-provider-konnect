// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
)

type PatchAWSResourceEndpointGatewayAWSResourceEndpointAttachmentType string

const (
	PatchAWSResourceEndpointGatewayAWSResourceEndpointAttachmentTypeAwsResourceEndpointAttachment PatchAWSResourceEndpointGatewayAWSResourceEndpointAttachmentType = "aws-resource-endpoint-attachment"
)

func (e PatchAWSResourceEndpointGatewayAWSResourceEndpointAttachmentType) ToPointer() *PatchAWSResourceEndpointGatewayAWSResourceEndpointAttachmentType {
	return &e
}
func (e *PatchAWSResourceEndpointGatewayAWSResourceEndpointAttachmentType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "aws-resource-endpoint-attachment":
		*e = PatchAWSResourceEndpointGatewayAWSResourceEndpointAttachmentType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchAWSResourceEndpointGatewayAWSResourceEndpointAttachmentType: %v", v)
	}
}

type TransitGatewayAttachmentConfig struct {
	Kind PatchAWSResourceEndpointGatewayAWSResourceEndpointAttachmentType `json:"kind"`
	// List of unique resource config mapping for aws resource endpoint.
	//
	ResourceConfig []AwsResourceEndpointConfig `json:"resource_config"`
}

func (o *TransitGatewayAttachmentConfig) GetKind() PatchAWSResourceEndpointGatewayAWSResourceEndpointAttachmentType {
	if o == nil {
		return PatchAWSResourceEndpointGatewayAWSResourceEndpointAttachmentType("")
	}
	return o.Kind
}

func (o *TransitGatewayAttachmentConfig) GetResourceConfig() []AwsResourceEndpointConfig {
	if o == nil {
		return []AwsResourceEndpointConfig{}
	}
	return o.ResourceConfig
}

// PatchAwsResourceEndpointGateway - Request schema for updating AWS Resource Endpoint.
type PatchAwsResourceEndpointGateway struct {
	TransitGatewayAttachmentConfig TransitGatewayAttachmentConfig `json:"transit_gateway_attachment_config"`
}

func (o *PatchAwsResourceEndpointGateway) GetTransitGatewayAttachmentConfig() TransitGatewayAttachmentConfig {
	if o == nil {
		return TransitGatewayAttachmentConfig{}
	}
	return o.TransitGatewayAttachmentConfig
}

type PatchTransitGatewayRequestType string

const (
	PatchTransitGatewayRequestTypePatchAwsResourceEndpointGateway PatchTransitGatewayRequestType = "PatchAwsResourceEndpointGateway"
)

// PatchTransitGatewayRequest - Request schema for updating a transit gateway.
type PatchTransitGatewayRequest struct {
	PatchAwsResourceEndpointGateway *PatchAwsResourceEndpointGateway `queryParam:"inline"`

	Type PatchTransitGatewayRequestType
}

func CreatePatchTransitGatewayRequestPatchAwsResourceEndpointGateway(patchAwsResourceEndpointGateway PatchAwsResourceEndpointGateway) PatchTransitGatewayRequest {
	typ := PatchTransitGatewayRequestTypePatchAwsResourceEndpointGateway

	return PatchTransitGatewayRequest{
		PatchAwsResourceEndpointGateway: &patchAwsResourceEndpointGateway,
		Type:                            typ,
	}
}

func (u *PatchTransitGatewayRequest) UnmarshalJSON(data []byte) error {

	var patchAwsResourceEndpointGateway PatchAwsResourceEndpointGateway = PatchAwsResourceEndpointGateway{}
	if err := utils.UnmarshalJSON(data, &patchAwsResourceEndpointGateway, "", true, true); err == nil {
		u.PatchAwsResourceEndpointGateway = &patchAwsResourceEndpointGateway
		u.Type = PatchTransitGatewayRequestTypePatchAwsResourceEndpointGateway
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for PatchTransitGatewayRequest", string(data))
}

func (u PatchTransitGatewayRequest) MarshalJSON() ([]byte, error) {
	if u.PatchAwsResourceEndpointGateway != nil {
		return utils.MarshalJSON(u.PatchAwsResourceEndpointGateway, "", true)
	}

	return nil, errors.New("could not marshal union type PatchTransitGatewayRequest: all fields are null")
}
