// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
)

// UpdatePortalPageRequest - Update a page in a portal.
type UpdatePortalPageRequest struct {
	// The slug of a page in a portal, used to compute its full URL path within the portal hierarchy.
	// When a page has a `parent_page_id`, its full path is built by joining the parent’s slug with its own.
	// For example, if a parent page has the slug `slug1` and this page’s slug is `slug2`, the resulting path will be `/slug1/slug2`.
	// This enables nested page structures like `/slug1/slug2/slug3`.
	//
	Slug *string `json:"slug,omitempty"`
	// The title of a page in a portal.
	Title *string `json:"title,omitempty"`
	// The renderable markdown content of a page in a portal.
	Content *string `json:"content,omitempty"`
	// Whether the resource is publicly accessible to non-authenticated users.
	Visibility *VisibilityStatus `json:"visibility,omitempty"`
	// Whether the resource is visible on a given portal. Defaults to unpublished.
	Status      *PublishedStatus `json:"status,omitempty"`
	Description *string          `json:"description,omitempty"`
	// Pages may be rendered as a tree of files.
	//
	// Specify the `id` of another page as the `parent_page_id` to add some hierarchy to your pages.
	//
	ParentPageID *string `default:"null" json:"parent_page_id"`
}

func (u UpdatePortalPageRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdatePortalPageRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UpdatePortalPageRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *UpdatePortalPageRequest) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *UpdatePortalPageRequest) GetContent() *string {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *UpdatePortalPageRequest) GetVisibility() *VisibilityStatus {
	if o == nil {
		return nil
	}
	return o.Visibility
}

func (o *UpdatePortalPageRequest) GetStatus() *PublishedStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *UpdatePortalPageRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdatePortalPageRequest) GetParentPageID() *string {
	if o == nil {
		return nil
	}
	return o.ParentPageID
}
