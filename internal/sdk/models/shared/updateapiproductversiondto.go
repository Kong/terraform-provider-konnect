// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/internal/utils"
)

// UpdateAPIProductVersionDTOPublishStatus - The publish status of the API product version. Applies publish status to all related portal product versions. This field is deprecated: Use [PortalProductVersion.publish_status](https://docs.konghq.com/konnect/api/portal-management/v2/#/operations/create-portal-product-version) instead.
//
// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
type UpdateAPIProductVersionDTOPublishStatus string

const (
	UpdateAPIProductVersionDTOPublishStatusUnpublished UpdateAPIProductVersionDTOPublishStatus = "unpublished"
	UpdateAPIProductVersionDTOPublishStatusPublished   UpdateAPIProductVersionDTOPublishStatus = "published"
)

func (e UpdateAPIProductVersionDTOPublishStatus) ToPointer() *UpdateAPIProductVersionDTOPublishStatus {
	return &e
}
func (e *UpdateAPIProductVersionDTOPublishStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unpublished":
		fallthrough
	case "published":
		*e = UpdateAPIProductVersionDTOPublishStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAPIProductVersionDTOPublishStatus: %v", v)
	}
}

// UpdateAPIProductVersionDTO - The request schema for updating a version of an API product.
// Note that the `publish_status` and `deprecated` fields are deprecated:  Use [PortalProductVersion.publish_status](https://docs.konghq.com/konnect/api/portal-management/v2/#/operations/create-portal-product-version) instead.
type UpdateAPIProductVersionDTO struct {
	// The version name of the API product version.
	Name *string `default:"null" json:"name"`
	// The publish status of the API product version. Applies publish status to all related portal product versions. This field is deprecated: Use [PortalProductVersion.publish_status](https://docs.konghq.com/konnect/api/portal-management/v2/#/operations/create-portal-product-version) instead.
	//
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	PublishStatus *UpdateAPIProductVersionDTOPublishStatus `json:"publish_status,omitempty"`
	// Indicates if the version of the API product is deprecated. Applies deprecation or removes deprecation from all related portal product versions. This field is deprecated: Use [PortalProductVersion.deprecated](https://docs.konghq.com/konnect/api/portal-management/v2/#/operations/create-portal-product-version) instead.
	//
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	Deprecated *bool `default:"null" json:"deprecated"`
	// When set to `true`, and all the following conditions are true:
	// - version of the API product deprecation has changed from `false` -> `true`
	// - version of the API product is published
	//
	// then consumers of the now deprecated verion of the API product will be notified.
	//
	Notify         *bool                  `default:"null" json:"notify"`
	GatewayService *GatewayServicePayload `json:"gateway_service"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Labels are intended to store **INTERNAL** metadata.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]*string `json:"labels,omitempty"`
}

func (u UpdateAPIProductVersionDTO) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateAPIProductVersionDTO) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UpdateAPIProductVersionDTO) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateAPIProductVersionDTO) GetPublishStatus() *UpdateAPIProductVersionDTOPublishStatus {
	if o == nil {
		return nil
	}
	return o.PublishStatus
}

func (o *UpdateAPIProductVersionDTO) GetDeprecated() *bool {
	if o == nil {
		return nil
	}
	return o.Deprecated
}

func (o *UpdateAPIProductVersionDTO) GetNotify() *bool {
	if o == nil {
		return nil
	}
	return o.Notify
}

func (o *UpdateAPIProductVersionDTO) GetGatewayService() *GatewayServicePayload {
	if o == nil {
		return nil
	}
	return o.GatewayService
}

func (o *UpdateAPIProductVersionDTO) GetLabels() map[string]*string {
	if o == nil {
		return nil
	}
	return o.Labels
}
