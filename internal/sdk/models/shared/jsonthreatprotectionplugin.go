// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/internal/utils"
)

type JSONThreatProtectionPluginAfter struct {
	Access []string `json:"access,omitempty"`
}

func (o *JSONThreatProtectionPluginAfter) GetAccess() []string {
	if o == nil {
		return nil
	}
	return o.Access
}

type JSONThreatProtectionPluginBefore struct {
	Access []string `json:"access,omitempty"`
}

func (o *JSONThreatProtectionPluginBefore) GetAccess() []string {
	if o == nil {
		return nil
	}
	return o.Access
}

type JSONThreatProtectionPluginOrdering struct {
	After  *JSONThreatProtectionPluginAfter  `json:"after,omitempty"`
	Before *JSONThreatProtectionPluginBefore `json:"before,omitempty"`
}

func (o *JSONThreatProtectionPluginOrdering) GetAfter() *JSONThreatProtectionPluginAfter {
	if o == nil {
		return nil
	}
	return o.After
}

func (o *JSONThreatProtectionPluginOrdering) GetBefore() *JSONThreatProtectionPluginBefore {
	if o == nil {
		return nil
	}
	return o.Before
}

type JSONThreatProtectionPluginPartials struct {
	ID   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Path *string `json:"path,omitempty"`
}

func (o *JSONThreatProtectionPluginPartials) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *JSONThreatProtectionPluginPartials) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *JSONThreatProtectionPluginPartials) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

// JSONThreatProtectionPluginEnforcementMode - Enforcement mode of the security policy.
type JSONThreatProtectionPluginEnforcementMode string

const (
	JSONThreatProtectionPluginEnforcementModeBlock   JSONThreatProtectionPluginEnforcementMode = "block"
	JSONThreatProtectionPluginEnforcementModeLogOnly JSONThreatProtectionPluginEnforcementMode = "log_only"
)

func (e JSONThreatProtectionPluginEnforcementMode) ToPointer() *JSONThreatProtectionPluginEnforcementMode {
	return &e
}
func (e *JSONThreatProtectionPluginEnforcementMode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "block":
		fallthrough
	case "log_only":
		*e = JSONThreatProtectionPluginEnforcementMode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JSONThreatProtectionPluginEnforcementMode: %v", v)
	}
}

type JSONThreatProtectionPluginConfig struct {
	// Allow or disallow duplicate object entry name.
	AllowDuplicateObjectEntryName *bool `json:"allow_duplicate_object_entry_name,omitempty"`
	// Enforcement mode of the security policy.
	EnforcementMode *JSONThreatProtectionPluginEnforcementMode `json:"enforcement_mode,omitempty"`
	// The response message when validation fails
	ErrorMessage *string `json:"error_message,omitempty"`
	// The response status code when validation fails.
	ErrorStatusCode *int64 `json:"error_status_code,omitempty"`
	// Max number of elements in an array. -1 means unlimited.
	MaxArrayElementCount *int64 `json:"max_array_element_count,omitempty"`
	// Max size of the request body. -1 means unlimited.
	MaxBodySize *int64 `json:"max_body_size,omitempty"`
	// Max nested depth of objects and arrays. -1 means unlimited.
	MaxContainerDepth *int64 `json:"max_container_depth,omitempty"`
	// Max number of entries in an object. -1 means unlimited.
	MaxObjectEntryCount *int64 `json:"max_object_entry_count,omitempty"`
	// Max string length of object name. -1 means unlimited.
	MaxObjectEntryNameLength *int64 `json:"max_object_entry_name_length,omitempty"`
	// Max string value length. -1 means unlimited.
	MaxStringValueLength *int64 `json:"max_string_value_length,omitempty"`
}

func (o *JSONThreatProtectionPluginConfig) GetAllowDuplicateObjectEntryName() *bool {
	if o == nil {
		return nil
	}
	return o.AllowDuplicateObjectEntryName
}

func (o *JSONThreatProtectionPluginConfig) GetEnforcementMode() *JSONThreatProtectionPluginEnforcementMode {
	if o == nil {
		return nil
	}
	return o.EnforcementMode
}

func (o *JSONThreatProtectionPluginConfig) GetErrorMessage() *string {
	if o == nil {
		return nil
	}
	return o.ErrorMessage
}

func (o *JSONThreatProtectionPluginConfig) GetErrorStatusCode() *int64 {
	if o == nil {
		return nil
	}
	return o.ErrorStatusCode
}

func (o *JSONThreatProtectionPluginConfig) GetMaxArrayElementCount() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxArrayElementCount
}

func (o *JSONThreatProtectionPluginConfig) GetMaxBodySize() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxBodySize
}

func (o *JSONThreatProtectionPluginConfig) GetMaxContainerDepth() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxContainerDepth
}

func (o *JSONThreatProtectionPluginConfig) GetMaxObjectEntryCount() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxObjectEntryCount
}

func (o *JSONThreatProtectionPluginConfig) GetMaxObjectEntryNameLength() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxObjectEntryNameLength
}

func (o *JSONThreatProtectionPluginConfig) GetMaxStringValueLength() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxStringValueLength
}

type JSONThreatProtectionPluginProtocols string

const (
	JSONThreatProtectionPluginProtocolsGrpc  JSONThreatProtectionPluginProtocols = "grpc"
	JSONThreatProtectionPluginProtocolsGrpcs JSONThreatProtectionPluginProtocols = "grpcs"
	JSONThreatProtectionPluginProtocolsHTTP  JSONThreatProtectionPluginProtocols = "http"
	JSONThreatProtectionPluginProtocolsHTTPS JSONThreatProtectionPluginProtocols = "https"
)

func (e JSONThreatProtectionPluginProtocols) ToPointer() *JSONThreatProtectionPluginProtocols {
	return &e
}
func (e *JSONThreatProtectionPluginProtocols) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "grpc":
		fallthrough
	case "grpcs":
		fallthrough
	case "http":
		fallthrough
	case "https":
		*e = JSONThreatProtectionPluginProtocols(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JSONThreatProtectionPluginProtocols: %v", v)
	}
}

// JSONThreatProtectionPluginRoute - If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.
type JSONThreatProtectionPluginRoute struct {
	ID *string `json:"id,omitempty"`
}

func (o *JSONThreatProtectionPluginRoute) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

// JSONThreatProtectionPluginService - If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
type JSONThreatProtectionPluginService struct {
	ID *string `json:"id,omitempty"`
}

func (o *JSONThreatProtectionPluginService) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

// JSONThreatProtectionPlugin - A Plugin entity represents a plugin configuration that will be executed during the HTTP request/response lifecycle. It is how you can add functionalities to Services that run behind Kong, like Authentication or Rate Limiting for example. You can find more information about how to install and what values each plugin takes by visiting the [Kong Hub](https://docs.konghq.com/hub/). When adding a Plugin Configuration to a Service, every request made by a client to that Service will run said Plugin. If a Plugin needs to be tuned to different values for some specific Consumers, you can do so by creating a separate plugin instance that specifies both the Service and the Consumer, through the `service` and `consumer` fields.
type JSONThreatProtectionPlugin struct {
	// Unix epoch when the resource was created.
	CreatedAt *int64 `json:"created_at,omitempty"`
	// Whether the plugin is applied.
	Enabled      *bool                                `json:"enabled,omitempty"`
	ID           *string                              `json:"id,omitempty"`
	InstanceName *string                              `json:"instance_name,omitempty"`
	name         string                               `const:"json-threat-protection" json:"name"`
	Ordering     *JSONThreatProtectionPluginOrdering  `json:"ordering,omitempty"`
	Partials     []JSONThreatProtectionPluginPartials `json:"partials,omitempty"`
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags []string `json:"tags,omitempty"`
	// Unix epoch when the resource was last updated.
	UpdatedAt *int64                            `json:"updated_at,omitempty"`
	Config    *JSONThreatProtectionPluginConfig `json:"config,omitempty"`
	// A set of strings representing HTTP protocols.
	Protocols []JSONThreatProtectionPluginProtocols `json:"protocols,omitempty"`
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.
	Route *JSONThreatProtectionPluginRoute `json:"route"`
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service *JSONThreatProtectionPluginService `json:"service"`
}

func (j JSONThreatProtectionPlugin) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(j, "", false)
}

func (j *JSONThreatProtectionPlugin) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &j, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *JSONThreatProtectionPlugin) GetCreatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *JSONThreatProtectionPlugin) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *JSONThreatProtectionPlugin) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *JSONThreatProtectionPlugin) GetInstanceName() *string {
	if o == nil {
		return nil
	}
	return o.InstanceName
}

func (o *JSONThreatProtectionPlugin) GetName() string {
	return "json-threat-protection"
}

func (o *JSONThreatProtectionPlugin) GetOrdering() *JSONThreatProtectionPluginOrdering {
	if o == nil {
		return nil
	}
	return o.Ordering
}

func (o *JSONThreatProtectionPlugin) GetPartials() []JSONThreatProtectionPluginPartials {
	if o == nil {
		return nil
	}
	return o.Partials
}

func (o *JSONThreatProtectionPlugin) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *JSONThreatProtectionPlugin) GetUpdatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *JSONThreatProtectionPlugin) GetConfig() *JSONThreatProtectionPluginConfig {
	if o == nil {
		return nil
	}
	return o.Config
}

func (o *JSONThreatProtectionPlugin) GetProtocols() []JSONThreatProtectionPluginProtocols {
	if o == nil {
		return nil
	}
	return o.Protocols
}

func (o *JSONThreatProtectionPlugin) GetRoute() *JSONThreatProtectionPluginRoute {
	if o == nil {
		return nil
	}
	return o.Route
}

func (o *JSONThreatProtectionPlugin) GetService() *JSONThreatProtectionPluginService {
	if o == nil {
		return nil
	}
	return o.Service
}
