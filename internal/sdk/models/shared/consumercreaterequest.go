// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
)

type ConsumerCreateRequest struct {
	// The unique username of the Consumer.
	Username string `json:"username"`
	// Field for storing an existing unique ID for the Consumer - useful for mapping Kong with users in your existing database.
	CustomID *string `json:"custom_id,omitempty"`
	// A list of consumer groups that the Consumer is in.
	// If `consumer_groups` are provided on the Consumer object _and_ on the Realm, the Consumer will be placed in all defined consumer groups.
	//
	ConsumerGroups []string `json:"consumer_groups,omitempty"`
	// Type of the consumer.
	//
	Type *ConsumerType `default:"proxy" json:"type"`
	Tags []string      `json:"tags,omitempty"`
}

func (c ConsumerCreateRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ConsumerCreateRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"username"}); err != nil {
		return err
	}
	return nil
}

func (c *ConsumerCreateRequest) GetUsername() string {
	if c == nil {
		return ""
	}
	return c.Username
}

func (c *ConsumerCreateRequest) GetCustomID() *string {
	if c == nil {
		return nil
	}
	return c.CustomID
}

func (c *ConsumerCreateRequest) GetConsumerGroups() []string {
	if c == nil {
		return nil
	}
	return c.ConsumerGroups
}

func (c *ConsumerCreateRequest) GetType() *ConsumerType {
	if c == nil {
		return nil
	}
	return c.Type
}

func (c *ConsumerCreateRequest) GetTags() []string {
	if c == nil {
		return nil
	}
	return c.Tags
}
