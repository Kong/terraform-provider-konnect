// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// CreatePortalSnippetRequest - Create a snippet in a portal.
type CreatePortalSnippetRequest struct {
	// The unique name of a snippet in a portal.
	Name string `json:"name"`
	// The display title of a snippet in a portal.
	Title *string `json:"title,omitempty"`
	// The renderable markdown content of a page in a portal.
	Content string `json:"content"`
	// Whether a snippet is publicly accessible to non-authenticated users.
	// If not provided, the default_page_visibility value of the portal will be used.
	//
	Visibility *SnippetVisibilityStatus `json:"visibility,omitempty"`
	// Whether the resource is visible on a given portal. Defaults to unpublished.
	Status      *PublishedStatus `json:"status,omitempty"`
	Description *string          `json:"description,omitempty"`
}

func (c *CreatePortalSnippetRequest) GetName() string {
	if c == nil {
		return ""
	}
	return c.Name
}

func (c *CreatePortalSnippetRequest) GetTitle() *string {
	if c == nil {
		return nil
	}
	return c.Title
}

func (c *CreatePortalSnippetRequest) GetContent() string {
	if c == nil {
		return ""
	}
	return c.Content
}

func (c *CreatePortalSnippetRequest) GetVisibility() *SnippetVisibilityStatus {
	if c == nil {
		return nil
	}
	return c.Visibility
}

func (c *CreatePortalSnippetRequest) GetStatus() *PublishedStatus {
	if c == nil {
		return nil
	}
	return c.Status
}

func (c *CreatePortalSnippetRequest) GetDescription() *string {
	if c == nil {
		return nil
	}
	return c.Description
}
