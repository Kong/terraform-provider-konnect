// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
	"time"
)

// APIPublicationResponse - An API publication in a portal
type APIPublicationResponse struct {
	// Whether the application registration auto approval on this portal for the api is enabled. If set to false, fallbacks on portal's auto_approve_applications value.
	AutoApproveRegistrations *bool `json:"auto_approve_registrations,omitempty"`
	// The auth strategy the API enforces for applications in the portal.
	// Omitting this property means the portal's default application auth strategy will be used.
	// Setting to null means the API will not require application authentication.
	// DCR support for application registration is currently in development.
	//
	AuthStrategyIds []string `json:"auth_strategy_ids"`
	// The visibility of the API in the portal.
	// Public API publications do not require authentication to view and retrieve information about them.
	// Private API publications require authentication to retrieve information about them.
	//
	Visibility *APIPublicationVisibility `default:"private" json:"visibility"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (a APIPublicationResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *APIPublicationResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *APIPublicationResponse) GetAutoApproveRegistrations() *bool {
	if o == nil {
		return nil
	}
	return o.AutoApproveRegistrations
}

func (o *APIPublicationResponse) GetAuthStrategyIds() []string {
	if o == nil {
		return nil
	}
	return o.AuthStrategyIds
}

func (o *APIPublicationResponse) GetVisibility() *APIPublicationVisibility {
	if o == nil {
		return nil
	}
	return o.Visibility
}

func (o *APIPublicationResponse) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *APIPublicationResponse) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
