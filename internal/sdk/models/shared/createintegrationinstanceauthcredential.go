// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/internal/utils"
)

type CreateIntegrationInstanceAuthCredentialType string

const (
	CreateIntegrationInstanceAuthCredentialTypeMultiKeyAuth CreateIntegrationInstanceAuthCredentialType = "multi_key_auth"
)

type CreateIntegrationInstanceAuthCredential struct {
	MultiKeyAuth *MultiKeyAuth `queryParam:"inline"`

	Type CreateIntegrationInstanceAuthCredentialType
}

func CreateCreateIntegrationInstanceAuthCredentialMultiKeyAuth(multiKeyAuth MultiKeyAuth) CreateIntegrationInstanceAuthCredential {
	typ := CreateIntegrationInstanceAuthCredentialTypeMultiKeyAuth

	return CreateIntegrationInstanceAuthCredential{
		MultiKeyAuth: &multiKeyAuth,
		Type:         typ,
	}
}

func (u *CreateIntegrationInstanceAuthCredential) UnmarshalJSON(data []byte) error {

	var multiKeyAuth MultiKeyAuth = MultiKeyAuth{}
	if err := utils.UnmarshalJSON(data, &multiKeyAuth, "", true, true); err == nil {
		u.MultiKeyAuth = &multiKeyAuth
		u.Type = CreateIntegrationInstanceAuthCredentialTypeMultiKeyAuth
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for CreateIntegrationInstanceAuthCredential", string(data))
}

func (u CreateIntegrationInstanceAuthCredential) MarshalJSON() ([]byte, error) {
	if u.MultiKeyAuth != nil {
		return utils.MarshalJSON(u.MultiKeyAuth, "", true)
	}

	return nil, errors.New("could not marshal union type CreateIntegrationInstanceAuthCredential: all fields are null")
}
