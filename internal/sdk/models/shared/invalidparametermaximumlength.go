// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
)

// InvalidParameterMaximumLengthRule - invalid parameters rules
type InvalidParameterMaximumLengthRule string

const (
	InvalidParameterMaximumLengthRuleMaxLength InvalidParameterMaximumLengthRule = "max_length"
	InvalidParameterMaximumLengthRuleMaxItems  InvalidParameterMaximumLengthRule = "max_items"
	InvalidParameterMaximumLengthRuleMax       InvalidParameterMaximumLengthRule = "max"
)

func (e InvalidParameterMaximumLengthRule) ToPointer() *InvalidParameterMaximumLengthRule {
	return &e
}
func (e *InvalidParameterMaximumLengthRule) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "max_length":
		fallthrough
	case "max_items":
		fallthrough
	case "max":
		*e = InvalidParameterMaximumLengthRule(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InvalidParameterMaximumLengthRule: %v", v)
	}
}

type InvalidParameterMaximumLength struct {
	Field string `json:"field"`
	// invalid parameters rules
	Rule    InvalidParameterMaximumLengthRule `json:"rule"`
	Maximum int64                             `json:"maximum"`
	Source  *string                           `default:"null" json:"source"`
	Reason  string                            `json:"reason"`
}

func (i InvalidParameterMaximumLength) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *InvalidParameterMaximumLength) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, []string{"field", "rule", "maximum", "reason"}); err != nil {
		return err
	}
	return nil
}

func (i *InvalidParameterMaximumLength) GetField() string {
	if i == nil {
		return ""
	}
	return i.Field
}

func (i *InvalidParameterMaximumLength) GetRule() InvalidParameterMaximumLengthRule {
	if i == nil {
		return InvalidParameterMaximumLengthRule("")
	}
	return i.Rule
}

func (i *InvalidParameterMaximumLength) GetMaximum() int64 {
	if i == nil {
		return 0
	}
	return i.Maximum
}

func (i *InvalidParameterMaximumLength) GetSource() *string {
	if i == nil {
		return nil
	}
	return i.Source
}

func (i *InvalidParameterMaximumLength) GetReason() string {
	if i == nil {
		return ""
	}
	return i.Reason
}
