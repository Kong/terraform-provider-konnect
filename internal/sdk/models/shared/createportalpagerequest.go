// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// CreatePortalPageRequest - Create a page in a portal.
type CreatePortalPageRequest struct {
	// The slug of a page in a portal, used to compute its full URL path within the portal hierarchy.
	// When a page has a `parent_page_id`, its full path is built by joining the parent’s slug with its own.
	// For example, if a parent page has the slug `slug1` and this page’s slug is `slug2`, the resulting path will be `/slug1/slug2`.
	// This enables nested page structures like `/slug1/slug2/slug3`.
	//
	Slug string `json:"slug"`
	// The title of a page in a portal.
	Title *string `json:"title,omitempty"`
	// The renderable markdown content of a page in a portal.
	Content string `json:"content"`
	// Whether a page is publicly accessible to non-authenticated users.
	// If not provided, the default_page_visibility value of the portal will be used.
	//
	Visibility *PageVisibilityStatus `json:"visibility,omitempty"`
	// Whether the resource is visible on a given portal. Defaults to unpublished.
	Status      *PublishedStatus `json:"status,omitempty"`
	Description *string          `json:"description,omitempty"`
	// Pages may be rendered as a tree of files.
	//
	// Specify the `id` of another page as the `parent_page_id` to add some hierarchy to your pages.
	//
	ParentPageID *string `json:"parent_page_id,omitempty"`
}

func (o *CreatePortalPageRequest) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

func (o *CreatePortalPageRequest) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *CreatePortalPageRequest) GetContent() string {
	if o == nil {
		return ""
	}
	return o.Content
}

func (o *CreatePortalPageRequest) GetVisibility() *PageVisibilityStatus {
	if o == nil {
		return nil
	}
	return o.Visibility
}

func (o *CreatePortalPageRequest) GetStatus() *PublishedStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *CreatePortalPageRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreatePortalPageRequest) GetParentPageID() *string {
	if o == nil {
		return nil
	}
	return o.ParentPageID
}
