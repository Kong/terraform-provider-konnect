// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type HTTPDcrConfig struct {
	// The base URL of the DCR server. This is the URL that will be used to make the HTTP requests from Konnect to the DCR provider.
	// This URL must be accessible from the Konnect service.
	//
	DcrBaseURL *string `json:"dcr_base_url,omitempty"`
	// This is the API Key that will be sent with each HTTP request to the custom DCR server. It can be
	// verified on the server to ensure that incoming requests are coming from Konnect.
	//
	APIKey *string `json:"api_key,omitempty"`
	// This flag disables all the event-hooks on the application flow for the DCR provider.
	DisableEventHooks *bool `json:"disable_event_hooks,omitempty"`
	// This flag disable the refresh-secret endpoint on the application flow for the DCR provider.
	DisableRefreshSecret *bool `json:"disable_refresh_secret,omitempty"`
}

func (o *HTTPDcrConfig) GetDcrBaseURL() *string {
	if o == nil {
		return nil
	}
	return o.DcrBaseURL
}

func (o *HTTPDcrConfig) GetAPIKey() *string {
	if o == nil {
		return nil
	}
	return o.APIKey
}

func (o *HTTPDcrConfig) GetDisableEventHooks() *bool {
	if o == nil {
		return nil
	}
	return o.DisableEventHooks
}

func (o *HTTPDcrConfig) GetDisableRefreshSecret() *bool {
	if o == nil {
		return nil
	}
	return o.DisableRefreshSecret
}

// HTTP - Payload to update an HTTP DCR provider.
type HTTP struct {
	// The name of the DCR provider. This is used to identify the DCR provider in the Konnect UI.
	//
	Name *string `json:"name,omitempty"`
	// The display name of the DCR provider. This is used to identify the DCR provider in the Portal UI.
	//
	DisplayName *string `json:"display_name,omitempty"`
	Issuer      *string `json:"issuer,omitempty"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Labels are intended to store **INTERNAL** metadata.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels    map[string]string `json:"labels,omitempty"`
	DcrConfig *HTTPDcrConfig    `json:"dcr_config,omitempty"`
}

func (o *HTTP) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *HTTP) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *HTTP) GetIssuer() *string {
	if o == nil {
		return nil
	}
	return o.Issuer
}

func (o *HTTP) GetLabels() map[string]string {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *HTTP) GetDcrConfig() *HTTPDcrConfig {
	if o == nil {
		return nil
	}
	return o.DcrConfig
}
