// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
	"time"
)

// PortalSnippetResponse - Details about a page in a portal.
type PortalSnippetResponse struct {
	// Contains a unique identifier used for this resource.
	ID string `json:"id"`
	// The unique name of a snippet in a portal.
	Name string `json:"name"`
	// The display title of a snippet in a portal.
	Title *string `json:"title,omitempty"`
	// The renderable markdown content of a page in a portal.
	Content string `json:"content"`
	// Whether the resource is publicly accessible to non-authenticated users.
	Visibility VisibilityStatus `json:"visibility"`
	// Whether the resource is visible on a given portal. Defaults to unpublished.
	Status      PublishedStatus `json:"status"`
	Description *string         `json:"description,omitempty"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (p PortalSnippetResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PortalSnippetResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, []string{"id", "name", "content", "visibility", "status", "created_at", "updated_at"}); err != nil {
		return err
	}
	return nil
}

func (p *PortalSnippetResponse) GetID() string {
	if p == nil {
		return ""
	}
	return p.ID
}

func (p *PortalSnippetResponse) GetName() string {
	if p == nil {
		return ""
	}
	return p.Name
}

func (p *PortalSnippetResponse) GetTitle() *string {
	if p == nil {
		return nil
	}
	return p.Title
}

func (p *PortalSnippetResponse) GetContent() string {
	if p == nil {
		return ""
	}
	return p.Content
}

func (p *PortalSnippetResponse) GetVisibility() VisibilityStatus {
	if p == nil {
		return VisibilityStatus("")
	}
	return p.Visibility
}

func (p *PortalSnippetResponse) GetStatus() PublishedStatus {
	if p == nil {
		return PublishedStatus("")
	}
	return p.Status
}

func (p *PortalSnippetResponse) GetDescription() *string {
	if p == nil {
		return nil
	}
	return p.Description
}

func (p *PortalSnippetResponse) GetCreatedAt() time.Time {
	if p == nil {
		return time.Time{}
	}
	return p.CreatedAt
}

func (p *PortalSnippetResponse) GetUpdatedAt() time.Time {
	if p == nil {
		return time.Time{}
	}
	return p.UpdatedAt
}
