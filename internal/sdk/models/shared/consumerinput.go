// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// ConsumerInput - The Consumer object represents a consumer - or a user - of a Service. You can either rely on Kong as the primary datastore, or you can map the consumer list with your database to keep consistency between Kong and your existing primary datastore.
type ConsumerInput struct {
	// Field for storing an existing unique ID for the Consumer - useful for mapping Kong with users in your existing database. You must send either this field or `username` with the request.
	CustomID *string `json:"custom_id,omitempty"`
	ID       *string `json:"id,omitempty"`
	// An optional set of strings associated with the Consumer for grouping and filtering.
	Tags []string `json:"tags,omitempty"`
	// The unique username of the Consumer. You must send either this field or `custom_id` with the request.
	Username *string `json:"username,omitempty"`
}

func (o *ConsumerInput) GetCustomID() *string {
	if o == nil {
		return nil
	}
	return o.CustomID
}

func (o *ConsumerInput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ConsumerInput) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *ConsumerInput) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}
