// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/internal/utils"
	"time"
)

type ValidationMessages struct {
	Message string `json:"message"`
}

func (o *ValidationMessages) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// APISpecResponseAPISpecType - The type of specification being stored. This allows us to render the specification correctly.
type APISpecResponseAPISpecType string

const (
	APISpecResponseAPISpecTypeOas2     APISpecResponseAPISpecType = "oas2"
	APISpecResponseAPISpecTypeOas3     APISpecResponseAPISpecType = "oas3"
	APISpecResponseAPISpecTypeAsyncapi APISpecResponseAPISpecType = "asyncapi"
)

func (e APISpecResponseAPISpecType) ToPointer() *APISpecResponseAPISpecType {
	return &e
}
func (e *APISpecResponseAPISpecType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "oas2":
		fallthrough
	case "oas3":
		fallthrough
	case "asyncapi":
		*e = APISpecResponseAPISpecType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for APISpecResponseAPISpecType: %v", v)
	}
}

// APISpecResponse - API specification (OpenAPI or AsyncAPI)
type APISpecResponse struct {
	// The API specification identifier.
	ID string `json:"id"`
	// The raw content of your API specification, in json or yaml format (OpenAPI or AsyncAPI).
	//
	Content string `json:"content"`
	// The errors that occurred while parsing the API specification.
	ValidationMessages []ValidationMessages `json:"validation_messages"`
	// The type of specification being stored. This allows us to render the specification correctly.
	//
	Type APISpecResponseAPISpecType `json:"type"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (a APISpecResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *APISpecResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *APISpecResponse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *APISpecResponse) GetContent() string {
	if o == nil {
		return ""
	}
	return o.Content
}

func (o *APISpecResponse) GetValidationMessages() []ValidationMessages {
	if o == nil {
		return []ValidationMessages{}
	}
	return o.ValidationMessages
}

func (o *APISpecResponse) GetType() APISpecResponseAPISpecType {
	if o == nil {
		return APISpecResponseAPISpecType("")
	}
	return o.Type
}

func (o *APISpecResponse) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *APISpecResponse) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
