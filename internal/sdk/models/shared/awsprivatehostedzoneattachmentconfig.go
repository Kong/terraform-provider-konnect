// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AWSPrivateHostedZoneType string

const (
	AWSPrivateHostedZoneTypeAwsPrivateHostedZoneAttachment AWSPrivateHostedZoneType = "aws-private-hosted-zone-attachment"
)

func (e AWSPrivateHostedZoneType) ToPointer() *AWSPrivateHostedZoneType {
	return &e
}
func (e *AWSPrivateHostedZoneType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "aws-private-hosted-zone-attachment":
		*e = AWSPrivateHostedZoneType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AWSPrivateHostedZoneType: %v", v)
	}
}

type AwsPrivateHostedZoneAttachmentConfig struct {
	Kind AWSPrivateHostedZoneType `json:"kind"`
	// AWS Hosted Zone to create attachment to.
	HostedZoneID string `json:"hosted_zone_id"`
}

func (o *AwsPrivateHostedZoneAttachmentConfig) GetKind() AWSPrivateHostedZoneType {
	if o == nil {
		return AWSPrivateHostedZoneType("")
	}
	return o.Kind
}

func (o *AwsPrivateHostedZoneAttachmentConfig) GetHostedZoneID() string {
	if o == nil {
		return ""
	}
	return o.HostedZoneID
}
