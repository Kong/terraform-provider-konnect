// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// ReplacePortalProductVersionPayload - Payload to update a Portal Product Version
type ReplacePortalProductVersionPayload struct {
	// Publication status of the API product version on the portal
	PublishStatus PortalProductVersionPublishStatus `json:"publish_status"`
	// A list of authentication strategy IDs
	AuthStrategyIds []string `json:"auth_strategy_ids"`
	// Whether the application registration on this portal for the api product version is enabled
	ApplicationRegistrationEnabled bool `json:"application_registration_enabled"`
	// Whether the application registration auto approval on this portal for the api product version is enabled
	AutoApproveRegistration bool `json:"auto_approve_registration"`
	// Whether the api product version on the portal is deprecated
	Deprecated bool `json:"deprecated"`
	// Whether to notify developers who are affected by this change
	NotifyDevelopers *bool `json:"notify_developers,omitempty"`
}

func (o *ReplacePortalProductVersionPayload) GetPublishStatus() PortalProductVersionPublishStatus {
	if o == nil {
		return PortalProductVersionPublishStatus("")
	}
	return o.PublishStatus
}

func (o *ReplacePortalProductVersionPayload) GetAuthStrategyIds() []string {
	if o == nil {
		return []string{}
	}
	return o.AuthStrategyIds
}

func (o *ReplacePortalProductVersionPayload) GetApplicationRegistrationEnabled() bool {
	if o == nil {
		return false
	}
	return o.ApplicationRegistrationEnabled
}

func (o *ReplacePortalProductVersionPayload) GetAutoApproveRegistration() bool {
	if o == nil {
		return false
	}
	return o.AutoApproveRegistration
}

func (o *ReplacePortalProductVersionPayload) GetDeprecated() bool {
	if o == nil {
		return false
	}
	return o.Deprecated
}

func (o *ReplacePortalProductVersionPayload) GetNotifyDevelopers() *bool {
	if o == nil {
		return nil
	}
	return o.NotifyDevelopers
}
