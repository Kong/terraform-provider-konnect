// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AwsResourceEndpointConfigState - The current state of the resource config in AWS Resource Endpoint. Possible values:
// - `initializing` - The config is in the process of being initialized and is setting up necessary resources.
// - `missing` - The config is missing and is no longer accepting new traffic.
// - `ready` - The config is fully operational and can route traffic as configured.
// - `error` - The config is in an error state, and is not operational.
// - `terminating` - The config is in the process of being deleted and is no longer accepting new traffic.
type AwsResourceEndpointConfigState string

const (
	AwsResourceEndpointConfigStateInitializing AwsResourceEndpointConfigState = "initializing"
	AwsResourceEndpointConfigStateMissing      AwsResourceEndpointConfigState = "missing"
	AwsResourceEndpointConfigStateReady        AwsResourceEndpointConfigState = "ready"
	AwsResourceEndpointConfigStateError        AwsResourceEndpointConfigState = "error"
	AwsResourceEndpointConfigStateTerminating  AwsResourceEndpointConfigState = "terminating"
)

func (e AwsResourceEndpointConfigState) ToPointer() *AwsResourceEndpointConfigState {
	return &e
}
func (e *AwsResourceEndpointConfigState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initializing":
		fallthrough
	case "missing":
		fallthrough
	case "ready":
		fallthrough
	case "error":
		fallthrough
	case "terminating":
		*e = AwsResourceEndpointConfigState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AwsResourceEndpointConfigState: %v", v)
	}
}
