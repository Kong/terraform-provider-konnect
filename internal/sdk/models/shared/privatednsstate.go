// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PrivateDNSState - The current state of the Private DNS attachment. Possible values:
// - `created` - The attachment has been created but is not attached to Private DNS.
// - `initializing` - The attachment is in the process of being initialized and is setting up necessary resources.
// - `pending-association` The attachment request is awaiting association to the cloud provider infrastructure in order for provisioning to proceed.
// - `ready` - The attachment is fully operational and can route traffic as configured.
// - `error` - The attachment is in an error state, and is not operational.
// - `terminating` - The attachment is in the process of being deleted.
// - `terminated` - The attachment has been fully deleted and is no longer available.
type PrivateDNSState string

const (
	PrivateDNSStateCreated            PrivateDNSState = "created"
	PrivateDNSStateInitializing       PrivateDNSState = "initializing"
	PrivateDNSStatePendingAssociation PrivateDNSState = "pending-association"
	PrivateDNSStateReady              PrivateDNSState = "ready"
	PrivateDNSStateError              PrivateDNSState = "error"
	PrivateDNSStateTerminating        PrivateDNSState = "terminating"
	PrivateDNSStateTerminated         PrivateDNSState = "terminated"
)

func (e PrivateDNSState) ToPointer() *PrivateDNSState {
	return &e
}
func (e *PrivateDNSState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created":
		fallthrough
	case "initializing":
		fallthrough
	case "pending-association":
		fallthrough
	case "ready":
		fallthrough
	case "error":
		fallthrough
	case "terminating":
		fallthrough
	case "terminated":
		*e = PrivateDNSState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PrivateDNSState: %v", v)
	}
}
