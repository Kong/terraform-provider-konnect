// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
)

// InvalidParameterChoiceItemRule - invalid parameters rules
type InvalidParameterChoiceItemRule string

const (
	InvalidParameterChoiceItemRuleEnum InvalidParameterChoiceItemRule = "enum"
)

func (e InvalidParameterChoiceItemRule) ToPointer() *InvalidParameterChoiceItemRule {
	return &e
}
func (e *InvalidParameterChoiceItemRule) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "enum":
		*e = InvalidParameterChoiceItemRule(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InvalidParameterChoiceItemRule: %v", v)
	}
}

type InvalidParameterChoiceItem struct {
	Field string `json:"field"`
	// invalid parameters rules
	Rule    InvalidParameterChoiceItemRule `json:"rule"`
	Reason  string                         `json:"reason"`
	Choices []any                          `json:"choices"`
	Source  *string                        `default:"null" json:"source"`
}

func (i InvalidParameterChoiceItem) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *InvalidParameterChoiceItem) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, []string{"field", "rule", "reason", "choices"}); err != nil {
		return err
	}
	return nil
}

func (i *InvalidParameterChoiceItem) GetField() string {
	if i == nil {
		return ""
	}
	return i.Field
}

func (i *InvalidParameterChoiceItem) GetRule() InvalidParameterChoiceItemRule {
	if i == nil {
		return InvalidParameterChoiceItemRule("")
	}
	return i.Rule
}

func (i *InvalidParameterChoiceItem) GetReason() string {
	if i == nil {
		return ""
	}
	return i.Reason
}

func (i *InvalidParameterChoiceItem) GetChoices() []any {
	if i == nil {
		return []any{}
	}
	return i.Choices
}

func (i *InvalidParameterChoiceItem) GetSource() *string {
	if i == nil {
		return nil
	}
	return i.Source
}
