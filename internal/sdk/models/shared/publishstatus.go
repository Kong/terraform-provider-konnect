// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PublishStatus - document publish status
type PublishStatus string

const (
	PublishStatusPublished   PublishStatus = "published"
	PublishStatusUnpublished PublishStatus = "unpublished"
)

func (e PublishStatus) ToPointer() *PublishStatus {
	return &e
}
func (e *PublishStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "published":
		fallthrough
	case "unpublished":
		*e = PublishStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PublishStatus: %v", v)
	}
}
