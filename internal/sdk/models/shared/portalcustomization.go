// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/internal/utils"
)

type PortalCustomizationMode string

const (
	PortalCustomizationModeLight  PortalCustomizationMode = "light"
	PortalCustomizationModeDark   PortalCustomizationMode = "dark"
	PortalCustomizationModeSystem PortalCustomizationMode = "system"
)

func (e PortalCustomizationMode) ToPointer() *PortalCustomizationMode {
	return &e
}
func (e *PortalCustomizationMode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "light":
		fallthrough
	case "dark":
		fallthrough
	case "system":
		*e = PortalCustomizationMode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PortalCustomizationMode: %v", v)
	}
}

type Colors struct {
	Primary *string `json:"primary,omitempty"`
}

func (o *Colors) GetPrimary() *string {
	if o == nil {
		return nil
	}
	return o.Primary
}

type Theme struct {
	Name   *string                  `json:"name,omitempty"`
	Mode   *PortalCustomizationMode `json:"mode,omitempty"`
	Colors *Colors                  `json:"colors"`
}

func (o *Theme) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Theme) GetMode() *PortalCustomizationMode {
	if o == nil {
		return nil
	}
	return o.Mode
}

func (o *Theme) GetColors() *Colors {
	if o == nil {
		return nil
	}
	return o.Colors
}

type Menu struct {
	Main           []PortalMenuItem          `json:"main"`
	FooterSections []PortalFooterMenuSection `json:"footer_sections"`
	FooterBottom   []PortalMenuItem          `json:"footer_bottom"`
}

func (o *Menu) GetMain() []PortalMenuItem {
	if o == nil {
		return nil
	}
	return o.Main
}

func (o *Menu) GetFooterSections() []PortalFooterMenuSection {
	if o == nil {
		return nil
	}
	return o.FooterSections
}

func (o *Menu) GetFooterBottom() []PortalMenuItem {
	if o == nil {
		return nil
	}
	return o.FooterBottom
}

type SpecRenderer struct {
	TryItUI        *bool `default:"true" json:"try_it_ui"`
	TryItInsomnia  *bool `default:"true" json:"try_it_insomnia"`
	InfiniteScroll *bool `default:"true" json:"infinite_scroll"`
	ShowSchemas    *bool `default:"true" json:"show_schemas"`
	HideInternal   *bool `default:"false" json:"hide_internal"`
	HideDeprecated *bool `default:"false" json:"hide_deprecated"`
}

func (s SpecRenderer) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SpecRenderer) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SpecRenderer) GetTryItUI() *bool {
	if o == nil {
		return nil
	}
	return o.TryItUI
}

func (o *SpecRenderer) GetTryItInsomnia() *bool {
	if o == nil {
		return nil
	}
	return o.TryItInsomnia
}

func (o *SpecRenderer) GetInfiniteScroll() *bool {
	if o == nil {
		return nil
	}
	return o.InfiniteScroll
}

func (o *SpecRenderer) GetShowSchemas() *bool {
	if o == nil {
		return nil
	}
	return o.ShowSchemas
}

func (o *SpecRenderer) GetHideInternal() *bool {
	if o == nil {
		return nil
	}
	return o.HideInternal
}

func (o *SpecRenderer) GetHideDeprecated() *bool {
	if o == nil {
		return nil
	}
	return o.HideDeprecated
}

// PortalCustomization - The custom settings of this portal
type PortalCustomization struct {
	Theme        *Theme        `json:"theme"`
	Layout       *string       `json:"layout,omitempty"`
	CSS          *string       `default:"null" json:"css"`
	Menu         *Menu         `json:"menu,omitempty"`
	SpecRenderer *SpecRenderer `json:"spec_renderer,omitempty"`
	Robots       *string       `default:"null" json:"robots"`
}

func (p PortalCustomization) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PortalCustomization) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PortalCustomization) GetTheme() *Theme {
	if o == nil {
		return nil
	}
	return o.Theme
}

func (o *PortalCustomization) GetLayout() *string {
	if o == nil {
		return nil
	}
	return o.Layout
}

func (o *PortalCustomization) GetCSS() *string {
	if o == nil {
		return nil
	}
	return o.CSS
}

func (o *PortalCustomization) GetMenu() *Menu {
	if o == nil {
		return nil
	}
	return o.Menu
}

func (o *PortalCustomization) GetSpecRenderer() *SpecRenderer {
	if o == nil {
		return nil
	}
	return o.SpecRenderer
}

func (o *PortalCustomization) GetRobots() *string {
	if o == nil {
		return nil
	}
	return o.Robots
}
