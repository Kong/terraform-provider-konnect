// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type UpdatePortalAppearanceResponse struct {
	// Font selections to render text in the portal user interface. Must set use_custom_fonts to true to enable using custom font values.
	CustomFonts *NullableAppearanceFonts `json:"custom_fonts"`
	// Groups of variables for configuring visual details of the portal user interface. Set theme_name to 'custom' to use custom values for theme variables.
	CustomTheme *NullableAppearanceThemeVariables `json:"custom_theme"`
	// A collection of binary image data to customize images in the portal
	Images *AppearanceImages `json:"images"`
	// Values to display for customizable text in the portal user interface
	Text *NullableAppearanceTextVariables `json:"text"`
	// Select a pre-existing default theme or specify 'custom' to use custom_theme variables.
	ThemeName PortalTheme `json:"theme_name"`
	// If true, fonts in custom_fonts will be used over the theme's default fonts
	UseCustomFonts bool `json:"use_custom_fonts"`
}

func (o *UpdatePortalAppearanceResponse) GetCustomFonts() *NullableAppearanceFonts {
	if o == nil {
		return nil
	}
	return o.CustomFonts
}

func (o *UpdatePortalAppearanceResponse) GetCustomTheme() *NullableAppearanceThemeVariables {
	if o == nil {
		return nil
	}
	return o.CustomTheme
}

func (o *UpdatePortalAppearanceResponse) GetImages() *AppearanceImages {
	if o == nil {
		return nil
	}
	return o.Images
}

func (o *UpdatePortalAppearanceResponse) GetText() *NullableAppearanceTextVariables {
	if o == nil {
		return nil
	}
	return o.Text
}

func (o *UpdatePortalAppearanceResponse) GetThemeName() PortalTheme {
	if o == nil {
		return PortalTheme("")
	}
	return o.ThemeName
}

func (o *UpdatePortalAppearanceResponse) GetUseCustomFonts() bool {
	if o == nil {
		return false
	}
	return o.UseCustomFonts
}
