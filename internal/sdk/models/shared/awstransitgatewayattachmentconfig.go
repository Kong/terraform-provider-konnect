// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AWSTransitGatewayAttachmentType string

const (
	AWSTransitGatewayAttachmentTypeAwsTransitGatewayAttachment AWSTransitGatewayAttachmentType = "aws-transit-gateway-attachment"
)

func (e AWSTransitGatewayAttachmentType) ToPointer() *AWSTransitGatewayAttachmentType {
	return &e
}

func (e *AWSTransitGatewayAttachmentType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "aws-transit-gateway-attachment":
		*e = AWSTransitGatewayAttachmentType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AWSTransitGatewayAttachmentType: %v", v)
	}
}

type AwsTransitGatewayAttachmentConfig struct {
	Kind AWSTransitGatewayAttachmentType `json:"kind"`
	// AWS Transit Gateway ID to create attachment to.
	TransitGatewayID string `json:"transit_gateway_id"`
	// Resource Share ARN to verify request to create transit gateway attachment.
	RAMShareArn string `json:"ram_share_arn"`
}

func (o *AwsTransitGatewayAttachmentConfig) GetKind() AWSTransitGatewayAttachmentType {
	if o == nil {
		return AWSTransitGatewayAttachmentType("")
	}
	return o.Kind
}

func (o *AwsTransitGatewayAttachmentConfig) GetTransitGatewayID() string {
	if o == nil {
		return ""
	}
	return o.TransitGatewayID
}

func (o *AwsTransitGatewayAttachmentConfig) GetRAMShareArn() string {
	if o == nil {
		return ""
	}
	return o.RAMShareArn
}
