// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
)

// CreateConfigurationRequest - Request schema for creating a configuration.
type CreateConfigurationRequest struct {
	ControlPlaneID string `json:"control_plane_id"`
	// Set of control-plane geos supported for deploying cloud-gateways configurations.
	ControlPlaneGeo ControlPlaneGeo `json:"control_plane_geo"`
	// Supported gateway version.
	Version string `json:"version"`
	// List of data-plane groups that describe where to deploy instances, along with how many instances.
	DataplaneGroups []CreateConfigurationDataPlaneGroup `json:"dataplane_groups"`
	// Type of API access data-plane groups will support for a configuration.
	APIAccess *APIAccess `default:"private+public" json:"api_access"`
}

func (c CreateConfigurationRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateConfigurationRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"control_plane_id", "control_plane_geo", "version", "dataplane_groups"}); err != nil {
		return err
	}
	return nil
}

func (c *CreateConfigurationRequest) GetControlPlaneID() string {
	if c == nil {
		return ""
	}
	return c.ControlPlaneID
}

func (c *CreateConfigurationRequest) GetControlPlaneGeo() ControlPlaneGeo {
	if c == nil {
		return ControlPlaneGeo("")
	}
	return c.ControlPlaneGeo
}

func (c *CreateConfigurationRequest) GetVersion() string {
	if c == nil {
		return ""
	}
	return c.Version
}

func (c *CreateConfigurationRequest) GetDataplaneGroups() []CreateConfigurationDataPlaneGroup {
	if c == nil {
		return []CreateConfigurationDataPlaneGroup{}
	}
	return c.DataplaneGroups
}

func (c *CreateConfigurationRequest) GetAPIAccess() *APIAccess {
	if c == nil {
		return nil
	}
	return c.APIAccess
}
