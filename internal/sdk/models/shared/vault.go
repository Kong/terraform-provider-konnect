// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
)

// Vault entities are used to configure different Vault connectors. Examples of Vaults are Environment Variables, Hashicorp Vault and AWS Secrets Manager. Configuring a Vault allows referencing the secrets with other entities. For example a certificate entity can store a reference to a certificate and key, stored in a vault, instead of storing the certificate and key within the entity. This allows a proper separation of secrets and configuration and prevents secret sprawl.
type Vault struct {
	// The configuration properties for the Vault which can be found on the vaults' documentation page.
	Config any `json:"config,omitempty"`
	// Unix epoch when the resource was created.
	CreatedAt *int64 `json:"created_at,omitempty"`
	// The description of the Vault entity.
	Description *string `default:"null" json:"description"`
	// A string representing a UUID (universally unique identifier).
	ID *string `json:"id,omitempty"`
	// The name of the Vault that's going to be added. Currently, the Vault implementation must be installed in every Kong instance.
	Name string `json:"name"`
	// The unique prefix (or identifier) for this Vault configuration. The prefix is used to load the right Vault configuration and implementation when referencing secrets with the other entities.
	Prefix string `json:"prefix"`
	// An optional set of strings associated with the Vault for grouping and filtering.
	Tags []string `json:"tags"`
	// Unix epoch when the resource was last updated.
	UpdatedAt *int64 `json:"updated_at,omitempty"`
}

func (v Vault) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *Vault) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"name", "prefix"}); err != nil {
		return err
	}
	return nil
}

func (v *Vault) GetConfig() any {
	if v == nil {
		return nil
	}
	return v.Config
}

func (v *Vault) GetCreatedAt() *int64 {
	if v == nil {
		return nil
	}
	return v.CreatedAt
}

func (v *Vault) GetDescription() *string {
	if v == nil {
		return nil
	}
	return v.Description
}

func (v *Vault) GetID() *string {
	if v == nil {
		return nil
	}
	return v.ID
}

func (v *Vault) GetName() string {
	if v == nil {
		return ""
	}
	return v.Name
}

func (v *Vault) GetPrefix() string {
	if v == nil {
		return ""
	}
	return v.Prefix
}

func (v *Vault) GetTags() []string {
	if v == nil {
		return nil
	}
	return v.Tags
}

func (v *Vault) GetUpdatedAt() *int64 {
	if v == nil {
		return nil
	}
	return v.UpdatedAt
}
