// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConsumerType - Type of the consumer.
type ConsumerType string

const (
	ConsumerTypeProxy       ConsumerType = "proxy"
	ConsumerTypeDeveloper   ConsumerType = "developer"
	ConsumerTypeAdmin       ConsumerType = "admin"
	ConsumerTypeApplication ConsumerType = "application"
)

func (e ConsumerType) ToPointer() *ConsumerType {
	return &e
}
func (e *ConsumerType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "proxy":
		fallthrough
	case "developer":
		fallthrough
	case "admin":
		fallthrough
	case "application":
		*e = ConsumerType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConsumerType: %v", v)
	}
}
