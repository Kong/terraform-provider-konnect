// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/kong/terraform-provider-konnect/internal/sdk/internal/utils"
)

type Algorithm string

const (
	AlgorithmHs256 Algorithm = "HS256"
	AlgorithmHs384 Algorithm = "HS384"
	AlgorithmHs512 Algorithm = "HS512"
	AlgorithmRs256 Algorithm = "RS256"
	AlgorithmRs384 Algorithm = "RS384"
	AlgorithmRs512 Algorithm = "RS512"
	AlgorithmEs256 Algorithm = "ES256"
	AlgorithmEs384 Algorithm = "ES384"
)

func (e Algorithm) ToPointer() *Algorithm {
	return &e
}

func (e *Algorithm) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HS256":
		fallthrough
	case "HS384":
		fallthrough
	case "HS512":
		fallthrough
	case "RS256":
		fallthrough
	case "RS384":
		fallthrough
	case "RS512":
		fallthrough
	case "ES256":
		fallthrough
	case "ES384":
		*e = Algorithm(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Algorithm: %v", v)
	}
}

type CreateJWTWithoutParents struct {
	Algorithm    *Algorithm `default:"HS256" json:"algorithm"`
	Key          *string    `json:"key,omitempty"`
	RsaPublicKey *string    `json:"rsa_public_key,omitempty"`
	Secret       *string    `json:"secret,omitempty"`
	Tags         []string   `json:"tags,omitempty"`
}

func (c CreateJWTWithoutParents) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateJWTWithoutParents) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateJWTWithoutParents) GetAlgorithm() *Algorithm {
	if o == nil {
		return nil
	}
	return o.Algorithm
}

func (o *CreateJWTWithoutParents) GetKey() *string {
	if o == nil {
		return nil
	}
	return o.Key
}

func (o *CreateJWTWithoutParents) GetRsaPublicKey() *string {
	if o == nil {
		return nil
	}
	return o.RsaPublicKey
}

func (o *CreateJWTWithoutParents) GetSecret() *string {
	if o == nil {
		return nil
	}
	return o.Secret
}

func (o *CreateJWTWithoutParents) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}
