// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/kong/terraform-provider-konnect/internal/sdk/internal/utils"
)

// PublishStatus - The publish status of the API product version.
type PublishStatus string

const (
	PublishStatusUnpublished PublishStatus = "unpublished"
	PublishStatusPublished   PublishStatus = "published"
)

func (e PublishStatus) ToPointer() *PublishStatus {
	return &e
}

func (e *PublishStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unpublished":
		fallthrough
	case "published":
		*e = PublishStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PublishStatus: %v", v)
	}
}

// CreateAPIProductVersionDTO - The request schema to create a version of an API product.
type CreateAPIProductVersionDTO struct {
	// The version name of the API product version.
	Name string `json:"name"`
	// The publish status of the API product version.
	PublishStatus *PublishStatus `default:"unpublished" json:"publish_status"`
	// Indicates if the version of the API product is deprecated.
	Deprecated     *bool                  `default:"false" json:"deprecated"`
	GatewayService *GatewayServicePayload `json:"gateway_service,omitempty"`
}

func (c CreateAPIProductVersionDTO) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateAPIProductVersionDTO) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateAPIProductVersionDTO) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateAPIProductVersionDTO) GetPublishStatus() *PublishStatus {
	if o == nil {
		return nil
	}
	return o.PublishStatus
}

func (o *CreateAPIProductVersionDTO) GetDeprecated() *bool {
	if o == nil {
		return nil
	}
	return o.Deprecated
}

func (o *CreateAPIProductVersionDTO) GetGatewayService() *GatewayServicePayload {
	if o == nil {
		return nil
	}
	return o.GatewayService
}
