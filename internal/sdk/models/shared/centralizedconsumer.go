// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
	"time"
)

// CentralizedConsumer - The Consumer object represents a consumer - or a user - of a Service. You can either rely on Kong as the primary datastore, or you can map the consumer list with your database to keep consistency between Kong and your existing primary datastore.
type CentralizedConsumer struct {
	// The Consumer ID.
	ID string `json:"id"`
	// The unique username of the Consumer. You must send either this field or `custom_id` with the request.
	Username string `json:"username"`
	// Field for storing an existing unique ID for the Consumer - useful for mapping Kong with users in your existing database. You must send either this field or `username` with the request.
	CustomID *string `default:"null" json:"custom_id"`
	// Type of the consumer.
	//
	Type *ConsumerType `default:"proxy" json:"type"`
	Tags []string      `json:"tags"`
	// A list of consumer groups that the Consumer is in.
	// If `consumer_groups` are provided on the Consumer object _and_ on the Realm, the Consumer will be placed in all defined consumer groups.
	//
	ConsumerGroups []string `json:"consumer_groups"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (c CentralizedConsumer) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CentralizedConsumer) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"id", "username", "tags", "consumer_groups", "created_at", "updated_at"}); err != nil {
		return err
	}
	return nil
}

func (c *CentralizedConsumer) GetID() string {
	if c == nil {
		return ""
	}
	return c.ID
}

func (c *CentralizedConsumer) GetUsername() string {
	if c == nil {
		return ""
	}
	return c.Username
}

func (c *CentralizedConsumer) GetCustomID() *string {
	if c == nil {
		return nil
	}
	return c.CustomID
}

func (c *CentralizedConsumer) GetType() *ConsumerType {
	if c == nil {
		return nil
	}
	return c.Type
}

func (c *CentralizedConsumer) GetTags() []string {
	if c == nil {
		return []string{}
	}
	return c.Tags
}

func (c *CentralizedConsumer) GetConsumerGroups() []string {
	if c == nil {
		return []string{}
	}
	return c.ConsumerGroups
}

func (c *CentralizedConsumer) GetCreatedAt() time.Time {
	if c == nil {
		return time.Time{}
	}
	return c.CreatedAt
}

func (c *CentralizedConsumer) GetUpdatedAt() time.Time {
	if c == nil {
		return time.Time{}
	}
	return c.UpdatedAt
}
