// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
	"time"
)

// APIImplementationResponseServiceReference - A gateway service that implements an API
type APIImplementationResponseServiceReference struct {
	// Contains a unique identifier used for this resource.
	ID string `json:"id"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
	// A Gateway service that implements an API
	Service *APIImplementationService `json:"service,omitempty"`
}

func (a APIImplementationResponseServiceReference) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *APIImplementationResponseServiceReference) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"id", "created_at", "updated_at"}); err != nil {
		return err
	}
	return nil
}

func (a *APIImplementationResponseServiceReference) GetID() string {
	if a == nil {
		return ""
	}
	return a.ID
}

func (a *APIImplementationResponseServiceReference) GetCreatedAt() time.Time {
	if a == nil {
		return time.Time{}
	}
	return a.CreatedAt
}

func (a *APIImplementationResponseServiceReference) GetUpdatedAt() time.Time {
	if a == nil {
		return time.Time{}
	}
	return a.UpdatedAt
}

func (a *APIImplementationResponseServiceReference) GetService() *APIImplementationService {
	if a == nil {
		return nil
	}
	return a.Service
}

type APIImplementationResponseType string

const (
	APIImplementationResponseTypeAPIImplementationResponseServiceReference APIImplementationResponseType = "ApiImplementationResponse_Service Reference"
)

// APIImplementationResponse - An entity that implements an API
type APIImplementationResponse struct {
	APIImplementationResponseServiceReference *APIImplementationResponseServiceReference `queryParam:"inline,name=ApiImplementationResponse"`

	Type APIImplementationResponseType
}

func CreateAPIImplementationResponseAPIImplementationResponseServiceReference(apiImplementationResponseServiceReference APIImplementationResponseServiceReference) APIImplementationResponse {
	typ := APIImplementationResponseTypeAPIImplementationResponseServiceReference

	return APIImplementationResponse{
		APIImplementationResponseServiceReference: &apiImplementationResponseServiceReference,
		Type: typ,
	}
}

func (u *APIImplementationResponse) UnmarshalJSON(data []byte) error {

	var apiImplementationResponseServiceReference APIImplementationResponseServiceReference = APIImplementationResponseServiceReference{}
	if err := utils.UnmarshalJSON(data, &apiImplementationResponseServiceReference, "", true, nil); err == nil {
		u.APIImplementationResponseServiceReference = &apiImplementationResponseServiceReference
		u.Type = APIImplementationResponseTypeAPIImplementationResponseServiceReference
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for APIImplementationResponse", string(data))
}

func (u APIImplementationResponse) MarshalJSON() ([]byte, error) {
	if u.APIImplementationResponseServiceReference != nil {
		return utils.MarshalJSON(u.APIImplementationResponseServiceReference, "", true)
	}

	return nil, errors.New("could not marshal union type APIImplementationResponse: all fields are null")
}
