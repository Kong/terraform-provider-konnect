// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/models/shared"
	"net/http"
)

type PutCmekRequest struct {
	// Customer Managed Encryption Key identifier. This ID is selected from a predefined, Konnect-specific list of allowed values and uniquely identifies a CMEK configuration within a given organization and Konnect region. While not global in function, these IDs behave like scoped namespaces with enforced uniqueness and enumeration constraints.
	ID shared.CmekID `default:"default" pathParam:"style=simple,explode=false,name=cmekId"`
	// CMEK to be replaced
	ReplaceCMEK shared.ReplaceCMEK `request:"mediaType=application/json"`
}

func (p PutCmekRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PutCmekRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PutCmekRequest) GetID() shared.CmekID {
	if o == nil {
		return shared.CmekID("")
	}
	return o.ID
}

func (o *PutCmekRequest) GetReplaceCMEK() shared.ReplaceCMEK {
	if o == nil {
		return shared.ReplaceCMEK{}
	}
	return o.ReplaceCMEK
}

type PutCmekResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// A CMEK
	Cmek *shared.Cmek
	// Bad Request
	BadRequestError *shared.BadRequestError
	// Unauthorized
	UnauthorizedError *shared.UnauthorizedError
	// Forbidden
	ForbiddenError *shared.ForbiddenError
}

func (o *PutCmekResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PutCmekResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PutCmekResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PutCmekResponse) GetCmek() *shared.Cmek {
	if o == nil {
		return nil
	}
	return o.Cmek
}

func (o *PutCmekResponse) GetBadRequestError() *shared.BadRequestError {
	if o == nil {
		return nil
	}
	return o.BadRequestError
}

func (o *PutCmekResponse) GetUnauthorizedError() *shared.UnauthorizedError {
	if o == nil {
		return nil
	}
	return o.UnauthorizedError
}

func (o *PutCmekResponse) GetForbiddenError() *shared.ForbiddenError {
	if o == nil {
		return nil
	}
	return o.ForbiddenError
}
