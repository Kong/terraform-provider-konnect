// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/models/shared"
	"net/http"
)

type CreateConsumerInRealmRequest struct {
	// ID of the realm
	RealmID               string                       `pathParam:"style=simple,explode=false,name=realmId"`
	ConsumerCreateRequest shared.ConsumerCreateRequest `request:"mediaType=application/json"`
}

func (c *CreateConsumerInRealmRequest) GetRealmID() string {
	if c == nil {
		return ""
	}
	return c.RealmID
}

func (c *CreateConsumerInRealmRequest) GetConsumerCreateRequest() shared.ConsumerCreateRequest {
	if c == nil {
		return shared.ConsumerCreateRequest{}
	}
	return c.ConsumerCreateRequest
}

type CreateConsumerInRealmResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// success
	CentralizedConsumer *shared.CentralizedConsumer
	// Bad Request
	BadRequestError *shared.BadRequestError
	// Not Found
	NotFoundError *shared.NotFoundError
}

func (c *CreateConsumerInRealmResponse) GetContentType() string {
	if c == nil {
		return ""
	}
	return c.ContentType
}

func (c *CreateConsumerInRealmResponse) GetStatusCode() int {
	if c == nil {
		return 0
	}
	return c.StatusCode
}

func (c *CreateConsumerInRealmResponse) GetRawResponse() *http.Response {
	if c == nil {
		return nil
	}
	return c.RawResponse
}

func (c *CreateConsumerInRealmResponse) GetCentralizedConsumer() *shared.CentralizedConsumer {
	if c == nil {
		return nil
	}
	return c.CentralizedConsumer
}

func (c *CreateConsumerInRealmResponse) GetBadRequestError() *shared.BadRequestError {
	if c == nil {
		return nil
	}
	return c.BadRequestError
}

func (c *CreateConsumerInRealmResponse) GetNotFoundError() *shared.NotFoundError {
	if c == nil {
		return nil
	}
	return c.NotFoundError
}
