// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/models/shared"
	"net/http"
)

type UpdateDcrProviderRequest struct {
	// DCR provider identifier
	DcrProviderID            string                          `pathParam:"style=simple,explode=false,name=dcrProviderId"`
	UpdateDcrProviderRequest shared.UpdateDcrProviderRequest `request:"mediaType=application/json"`
}

func (o *UpdateDcrProviderRequest) GetDcrProviderID() string {
	if o == nil {
		return ""
	}
	return o.DcrProviderID
}

func (o *UpdateDcrProviderRequest) GetUpdateDcrProviderRequest() shared.UpdateDcrProviderRequest {
	if o == nil {
		return shared.UpdateDcrProviderRequest{}
	}
	return o.UpdateDcrProviderRequest
}

type UpdateDcrProviderResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// A response containing a single DCR provider object. Sensitive fields will be removed from the response.
	DcrProviderResponse *shared.DcrProviderResponse
	// Bad Request
	BadRequestError *shared.BadRequestError
	// Unauthorized
	UnauthorizedError *shared.UnauthorizedError
	// Forbidden
	ForbiddenError *shared.ForbiddenError
	// Not Found
	NotFoundError *shared.NotFoundError
}

func (o *UpdateDcrProviderResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateDcrProviderResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateDcrProviderResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateDcrProviderResponse) GetDcrProviderResponse() *shared.DcrProviderResponse {
	if o == nil {
		return nil
	}
	return o.DcrProviderResponse
}

func (o *UpdateDcrProviderResponse) GetDcrProviderResponseAuth0() *shared.DCRProviderAuth0DCRProviderAuth0 {
	if v := o.GetDcrProviderResponse(); v != nil {
		return v.DCRProviderAuth0DCRProviderAuth0
	}
	return nil
}

func (o *UpdateDcrProviderResponse) GetDcrProviderResponseAzureAd() *shared.DCRProviderAzureADDCRProviderAzureAD {
	if v := o.GetDcrProviderResponse(); v != nil {
		return v.DCRProviderAzureADDCRProviderAzureAD
	}
	return nil
}

func (o *UpdateDcrProviderResponse) GetDcrProviderResponseCurity() *shared.DCRProviderCurityDCRProviderCurity {
	if v := o.GetDcrProviderResponse(); v != nil {
		return v.DCRProviderCurityDCRProviderCurity
	}
	return nil
}

func (o *UpdateDcrProviderResponse) GetDcrProviderResponseOkta() *shared.DCRProviderOKTADCRProviderOKTA {
	if v := o.GetDcrProviderResponse(); v != nil {
		return v.DCRProviderOKTADCRProviderOKTA
	}
	return nil
}

func (o *UpdateDcrProviderResponse) GetDcrProviderResponseHTTP() *shared.DCRProviderHTTPDCRProviderHTTP {
	if v := o.GetDcrProviderResponse(); v != nil {
		return v.DCRProviderHTTPDCRProviderHTTP
	}
	return nil
}

func (o *UpdateDcrProviderResponse) GetBadRequestError() *shared.BadRequestError {
	if o == nil {
		return nil
	}
	return o.BadRequestError
}

func (o *UpdateDcrProviderResponse) GetUnauthorizedError() *shared.UnauthorizedError {
	if o == nil {
		return nil
	}
	return o.UnauthorizedError
}

func (o *UpdateDcrProviderResponse) GetForbiddenError() *shared.ForbiddenError {
	if o == nil {
		return nil
	}
	return o.ForbiddenError
}

func (o *UpdateDcrProviderResponse) GetNotFoundError() *shared.NotFoundError {
	if o == nil {
		return nil
	}
	return o.NotFoundError
}
