// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/models/shared"
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/types"
	"net/http"
)

// DeleteAuditLogWebhookRequestBody - The request schema to disable an audit log webhook.
type DeleteAuditLogWebhookRequestBody struct {
	// Indicates that the data should not be sent to the webhook.
	enabled *bool `const:"false" json:"enabled,omitempty"`
}

func (d DeleteAuditLogWebhookRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DeleteAuditLogWebhookRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (d *DeleteAuditLogWebhookRequestBody) GetEnabled() *bool {
	return types.Pointer(false)
}

type DeleteAuditLogWebhookResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Get response for audit log webhook
	AuditLogWebhook *shared.AuditLogWebhook
	// Bad Request
	BadRequestError *shared.BadRequestError
	// Unauthorized
	UnauthorizedError *shared.UnauthorizedError
	// Forbidden
	ForbiddenError *shared.ForbiddenError
}

func (d *DeleteAuditLogWebhookResponse) GetContentType() string {
	if d == nil {
		return ""
	}
	return d.ContentType
}

func (d *DeleteAuditLogWebhookResponse) GetStatusCode() int {
	if d == nil {
		return 0
	}
	return d.StatusCode
}

func (d *DeleteAuditLogWebhookResponse) GetRawResponse() *http.Response {
	if d == nil {
		return nil
	}
	return d.RawResponse
}

func (d *DeleteAuditLogWebhookResponse) GetAuditLogWebhook() *shared.AuditLogWebhook {
	if d == nil {
		return nil
	}
	return d.AuditLogWebhook
}

func (d *DeleteAuditLogWebhookResponse) GetBadRequestError() *shared.BadRequestError {
	if d == nil {
		return nil
	}
	return d.BadRequestError
}

func (d *DeleteAuditLogWebhookResponse) GetUnauthorizedError() *shared.UnauthorizedError {
	if d == nil {
		return nil
	}
	return d.UnauthorizedError
}

func (d *DeleteAuditLogWebhookResponse) GetForbiddenError() *shared.ForbiddenError {
	if d == nil {
		return nil
	}
	return d.ForbiddenError
}
