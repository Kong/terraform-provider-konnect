// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/models/shared"
	"net/http"
)

type UpsertConsumerRequest struct {
	// ID of the Consumer to lookup
	ConsumerID string `pathParam:"style=simple,explode=false,name=ConsumerId"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneID string `pathParam:"style=simple,explode=false,name=controlPlaneId"`
	// Description of the Consumer
	Consumer shared.Consumer `request:"mediaType=application/json"`
}

func (u *UpsertConsumerRequest) GetConsumerID() string {
	if u == nil {
		return ""
	}
	return u.ConsumerID
}

func (u *UpsertConsumerRequest) GetControlPlaneID() string {
	if u == nil {
		return ""
	}
	return u.ControlPlaneID
}

func (u *UpsertConsumerRequest) GetConsumer() shared.Consumer {
	if u == nil {
		return shared.Consumer{}
	}
	return u.Consumer
}

type UpsertConsumerResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Successfully upserted Consumer
	Consumer *shared.Consumer
	// Unauthorized
	GatewayUnauthorizedError *shared.GatewayUnauthorizedError
}

func (u *UpsertConsumerResponse) GetContentType() string {
	if u == nil {
		return ""
	}
	return u.ContentType
}

func (u *UpsertConsumerResponse) GetStatusCode() int {
	if u == nil {
		return 0
	}
	return u.StatusCode
}

func (u *UpsertConsumerResponse) GetRawResponse() *http.Response {
	if u == nil {
		return nil
	}
	return u.RawResponse
}

func (u *UpsertConsumerResponse) GetConsumer() *shared.Consumer {
	if u == nil {
		return nil
	}
	return u.Consumer
}

func (u *UpsertConsumerResponse) GetGatewayUnauthorizedError() *shared.GatewayUnauthorizedError {
	if u == nil {
		return nil
	}
	return u.GatewayUnauthorizedError
}
