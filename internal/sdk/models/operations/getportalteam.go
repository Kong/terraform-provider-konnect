// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/models/shared"
	"net/http"
)

type GetPortalTeamRequest struct {
	// ID of the team.
	TeamID string `pathParam:"style=simple,explode=false,name=teamId"`
	// The Portal identifier
	PortalID string `pathParam:"style=simple,explode=false,name=portalId"`
}

func (g *GetPortalTeamRequest) GetTeamID() string {
	if g == nil {
		return ""
	}
	return g.TeamID
}

func (g *GetPortalTeamRequest) GetPortalID() string {
	if g == nil {
		return ""
	}
	return g.PortalID
}

type GetPortalTeamResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Details about a team of developers in a portal.
	PortalTeamResponse *shared.PortalTeamResponse
	// Unauthorized
	UnauthorizedError *shared.UnauthorizedError
	// Forbidden
	ForbiddenError *shared.ForbiddenError
	// Not Found
	NotFoundError *shared.NotFoundError
}

func (g *GetPortalTeamResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetPortalTeamResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetPortalTeamResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetPortalTeamResponse) GetPortalTeamResponse() *shared.PortalTeamResponse {
	if g == nil {
		return nil
	}
	return g.PortalTeamResponse
}

func (g *GetPortalTeamResponse) GetUnauthorizedError() *shared.UnauthorizedError {
	if g == nil {
		return nil
	}
	return g.UnauthorizedError
}

func (g *GetPortalTeamResponse) GetForbiddenError() *shared.ForbiddenError {
	if g == nil {
		return nil
	}
	return g.ForbiddenError
}

func (g *GetPortalTeamResponse) GetNotFoundError() *shared.NotFoundError {
	if g == nil {
		return nil
	}
	return g.NotFoundError
}
