// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/models/shared"
	"net/http"
)

type GetCmekRequest struct {
	// Customer Managed Encryption Key identifier. This ID is selected from a predefined, Konnect-specific list of allowed values and uniquely identifies a CMEK configuration within a given organization and Konnect region. While not global in function, these IDs behave like scoped namespaces with enforced uniqueness and enumeration constraints.
	ID shared.CmekID `default:"default" pathParam:"style=simple,explode=false,name=cmekId"`
}

func (g GetCmekRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetCmekRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"cmekId"}); err != nil {
		return err
	}
	return nil
}

func (g *GetCmekRequest) GetID() shared.CmekID {
	if g == nil {
		return shared.CmekID("")
	}
	return g.ID
}

type GetCmekResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// A CMEK
	Cmek *shared.Cmek
	// Unauthorized
	UnauthorizedError *shared.UnauthorizedError
	// Forbidden
	ForbiddenError *shared.ForbiddenError
	// Not Found
	NotFoundError *shared.NotFoundError
}

func (g *GetCmekResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetCmekResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetCmekResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetCmekResponse) GetCmek() *shared.Cmek {
	if g == nil {
		return nil
	}
	return g.Cmek
}

func (g *GetCmekResponse) GetUnauthorizedError() *shared.UnauthorizedError {
	if g == nil {
		return nil
	}
	return g.UnauthorizedError
}

func (g *GetCmekResponse) GetForbiddenError() *shared.ForbiddenError {
	if g == nil {
		return nil
	}
	return g.ForbiddenError
}

func (g *GetCmekResponse) GetNotFoundError() *shared.NotFoundError {
	if g == nil {
		return nil
	}
	return g.NotFoundError
}
