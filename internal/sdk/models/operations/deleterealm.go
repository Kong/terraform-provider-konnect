// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/models/shared"
	"net/http"
)

// Force - If set to "true", the realm and all consumers and credentials will be deleted when running `terraform destroy`.
// If set to "false", the realm will not be deleted until all child entities are manually removed.
// This will IRREVERSIBLY DELETE ALL REGISTERED CONSUMERS AND THEIR CREDENTIALS. Only set to "true" if you want this behavior.
type Force string

const (
	ForceTrue  Force = "true"
	ForceFalse Force = "false"
)

func (e Force) ToPointer() *Force {
	return &e
}
func (e *Force) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "true":
		fallthrough
	case "false":
		*e = Force(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Force: %v", v)
	}
}

type DeleteRealmRequest struct {
	// ID of the realm
	RealmID string `pathParam:"style=simple,explode=false,name=realmId"`
	// If set to "true", the realm and all consumers and credentials will be deleted when running `terraform destroy`.
	// If set to "false", the realm will not be deleted until all child entities are manually removed.
	// This will IRREVERSIBLY DELETE ALL REGISTERED CONSUMERS AND THEIR CREDENTIALS. Only set to "true" if you want this behavior.
	//
	ForceDestroy *Force `default:"false" queryParam:"style=form,explode=true,name=force"`
}

func (d DeleteRealmRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DeleteRealmRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, []string{"realmId"}); err != nil {
		return err
	}
	return nil
}

func (d *DeleteRealmRequest) GetRealmID() string {
	if d == nil {
		return ""
	}
	return d.RealmID
}

func (d *DeleteRealmRequest) GetForceDestroy() *Force {
	if d == nil {
		return nil
	}
	return d.ForceDestroy
}

type DeleteRealmResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Bad Request
	BadRequestError *shared.BadRequestError
	// Not Found
	NotFoundError *shared.NotFoundError
}

func (d *DeleteRealmResponse) GetContentType() string {
	if d == nil {
		return ""
	}
	return d.ContentType
}

func (d *DeleteRealmResponse) GetStatusCode() int {
	if d == nil {
		return 0
	}
	return d.StatusCode
}

func (d *DeleteRealmResponse) GetRawResponse() *http.Response {
	if d == nil {
		return nil
	}
	return d.RawResponse
}

func (d *DeleteRealmResponse) GetBadRequestError() *shared.BadRequestError {
	if d == nil {
		return nil
	}
	return d.BadRequestError
}

func (d *DeleteRealmResponse) GetNotFoundError() *shared.NotFoundError {
	if d == nil {
		return nil
	}
	return d.NotFoundError
}
