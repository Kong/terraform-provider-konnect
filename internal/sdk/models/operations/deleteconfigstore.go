// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/models/shared"
	"net/http"
)

type DeleteConfigStoreRequest struct {
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneID string `pathParam:"style=simple,explode=false,name=controlPlaneId"`
	// Config Store identifier
	ConfigStoreID string `pathParam:"style=simple,explode=false,name=configStoreId"`
	// [Overlay change] Always cascade delete when being managed with declarative configuation
	force string `const:"true" queryParam:"style=form,explode=true,name=force"`
}

func (d DeleteConfigStoreRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DeleteConfigStoreRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, []string{"controlPlaneId", "configStoreId", "force"}); err != nil {
		return err
	}
	return nil
}

func (d *DeleteConfigStoreRequest) GetControlPlaneID() string {
	if d == nil {
		return ""
	}
	return d.ControlPlaneID
}

func (d *DeleteConfigStoreRequest) GetConfigStoreID() string {
	if d == nil {
		return ""
	}
	return d.ConfigStoreID
}

func (d *DeleteConfigStoreRequest) GetForce() string {
	return "true"
}

type DeleteConfigStoreResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Bad Request
	BadRequestError *shared.BadRequestError
	// Unauthorized
	UnauthorizedError *shared.UnauthorizedError
	// Forbidden
	ForbiddenError *shared.ForbiddenError
}

func (d *DeleteConfigStoreResponse) GetContentType() string {
	if d == nil {
		return ""
	}
	return d.ContentType
}

func (d *DeleteConfigStoreResponse) GetStatusCode() int {
	if d == nil {
		return 0
	}
	return d.StatusCode
}

func (d *DeleteConfigStoreResponse) GetRawResponse() *http.Response {
	if d == nil {
		return nil
	}
	return d.RawResponse
}

func (d *DeleteConfigStoreResponse) GetBadRequestError() *shared.BadRequestError {
	if d == nil {
		return nil
	}
	return d.BadRequestError
}

func (d *DeleteConfigStoreResponse) GetUnauthorizedError() *shared.UnauthorizedError {
	if d == nil {
		return nil
	}
	return d.UnauthorizedError
}

func (d *DeleteConfigStoreResponse) GetForbiddenError() *shared.ForbiddenError {
	if d == nil {
		return nil
	}
	return d.ForbiddenError
}
