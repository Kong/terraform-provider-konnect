// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-konnect/internal/sdk/models/shared"
	"net/http"
)

type CreateLdapauthadvancedPluginRequest struct {
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneID               string                               `pathParam:"style=simple,explode=false,name=controlPlaneId"`
	CreateLdapAuthAdvancedPlugin *shared.CreateLdapAuthAdvancedPlugin `request:"mediaType=application/json"`
}

func (o *CreateLdapauthadvancedPluginRequest) GetControlPlaneID() string {
	if o == nil {
		return ""
	}
	return o.ControlPlaneID
}

func (o *CreateLdapauthadvancedPluginRequest) GetCreateLdapAuthAdvancedPlugin() *shared.CreateLdapAuthAdvancedPlugin {
	if o == nil {
		return nil
	}
	return o.CreateLdapAuthAdvancedPlugin
}

type CreateLdapauthadvancedPluginResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Created LdapAuthAdvanced plugin
	LdapAuthAdvancedPlugin *shared.LdapAuthAdvancedPlugin
	// Unauthorized
	GatewayUnauthorizedError *shared.GatewayUnauthorizedError
}

func (o *CreateLdapauthadvancedPluginResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateLdapauthadvancedPluginResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateLdapauthadvancedPluginResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreateLdapauthadvancedPluginResponse) GetLdapAuthAdvancedPlugin() *shared.LdapAuthAdvancedPlugin {
	if o == nil {
		return nil
	}
	return o.LdapAuthAdvancedPlugin
}

func (o *CreateLdapauthadvancedPluginResponse) GetGatewayUnauthorizedError() *shared.GatewayUnauthorizedError {
	if o == nil {
		return nil
	}
	return o.GatewayUnauthorizedError
}
