// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/models/shared"
	"net/http"
)

var GetPrivateDNSServerList = []string{
	"https://global.api.konghq.com/",
}

type GetPrivateDNSRequest struct {
	// The network to operate on.
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
	// The ID of the Private DNS to operate on.
	PrivateDNSID string `pathParam:"style=simple,explode=false,name=privateDnsId"`
}

func (g *GetPrivateDNSRequest) GetNetworkID() string {
	if g == nil {
		return ""
	}
	return g.NetworkID
}

func (g *GetPrivateDNSRequest) GetPrivateDNSID() string {
	if g == nil {
		return ""
	}
	return g.PrivateDNSID
}

type GetPrivateDNSResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Response format for retrieving a Private DNS.
	PrivateDNSResponse *shared.PrivateDNSResponse
	// Unauthorized
	UnauthorizedError *shared.UnauthorizedError
	// Forbidden
	ForbiddenError *shared.ForbiddenError
	// Not Found
	NotFoundError *shared.NotFoundError
}

func (g *GetPrivateDNSResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetPrivateDNSResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetPrivateDNSResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetPrivateDNSResponse) GetPrivateDNSResponse() *shared.PrivateDNSResponse {
	if g == nil {
		return nil
	}
	return g.PrivateDNSResponse
}

func (g *GetPrivateDNSResponse) GetUnauthorizedError() *shared.UnauthorizedError {
	if g == nil {
		return nil
	}
	return g.UnauthorizedError
}

func (g *GetPrivateDNSResponse) GetForbiddenError() *shared.ForbiddenError {
	if g == nil {
		return nil
	}
	return g.ForbiddenError
}

func (g *GetPrivateDNSResponse) GetNotFoundError() *shared.NotFoundError {
	if g == nil {
		return nil
	}
	return g.NotFoundError
}
