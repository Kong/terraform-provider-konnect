// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-konnect/v2/internal/sdk/models/shared"
	"net/http"
)

var CreateIdentityProviderServerList = []string{
	"https://global.api.konghq.com/",
}

type CreateIdentityProviderResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// An identity provider configuration. This response represents the configuration of a specific identity provider, which can be either OIDC or SAML.
	//
	IdentityProvider *shared.IdentityProvider
	// Bad Request
	BadRequestError *shared.BadRequestError
	// Unauthenticated
	UnauthorizedError *shared.UnauthorizedError
	// Permission denied
	ForbiddenError *shared.ForbiddenError
	// Conflict
	ConflictError *shared.ConflictError
}

func (o *CreateIdentityProviderResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateIdentityProviderResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateIdentityProviderResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreateIdentityProviderResponse) GetIdentityProvider() *shared.IdentityProvider {
	if o == nil {
		return nil
	}
	return o.IdentityProvider
}

func (o *CreateIdentityProviderResponse) GetBadRequestError() *shared.BadRequestError {
	if o == nil {
		return nil
	}
	return o.BadRequestError
}

func (o *CreateIdentityProviderResponse) GetUnauthorizedError() *shared.UnauthorizedError {
	if o == nil {
		return nil
	}
	return o.UnauthorizedError
}

func (o *CreateIdentityProviderResponse) GetForbiddenError() *shared.ForbiddenError {
	if o == nil {
		return nil
	}
	return o.ForbiddenError
}

func (o *CreateIdentityProviderResponse) GetConflictError() *shared.ConflictError {
	if o == nil {
		return nil
	}
	return o.ConflictError
}
