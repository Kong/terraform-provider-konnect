// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/internal/utils"
	"net/http"
)

type AddConsumerToGroupRequestBody struct {
	ConsumerID *string `default:"null" json:"consumer"`
}

func (a AddConsumerToGroupRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AddConsumerToGroupRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (a *AddConsumerToGroupRequestBody) GetConsumerID() *string {
	if a == nil {
		return nil
	}
	return a.ConsumerID
}

type AddConsumerToGroupRequest struct {
	// The UUID or name of the consumer group
	ConsumerGroupID string `pathParam:"style=simple,explode=false,name=ConsumerGroupId"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneID string                         `pathParam:"style=simple,explode=false,name=controlPlaneId"`
	RequestBody    *AddConsumerToGroupRequestBody `request:"mediaType=application/json"`
}

func (a *AddConsumerToGroupRequest) GetConsumerGroupID() string {
	if a == nil {
		return ""
	}
	return a.ConsumerGroupID
}

func (a *AddConsumerToGroupRequest) GetControlPlaneID() string {
	if a == nil {
		return ""
	}
	return a.ControlPlaneID
}

func (a *AddConsumerToGroupRequest) GetRequestBody() *AddConsumerToGroupRequestBody {
	if a == nil {
		return nil
	}
	return a.RequestBody
}

type AddConsumerToGroupResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (a *AddConsumerToGroupResponse) GetContentType() string {
	if a == nil {
		return ""
	}
	return a.ContentType
}

func (a *AddConsumerToGroupResponse) GetStatusCode() int {
	if a == nil {
		return 0
	}
	return a.StatusCode
}

func (a *AddConsumerToGroupResponse) GetRawResponse() *http.Response {
	if a == nil {
		return nil
	}
	return a.RawResponse
}
