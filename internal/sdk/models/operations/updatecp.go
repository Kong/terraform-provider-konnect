// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/kong/terraform-provider-konnect/v3/internal/sdk/models/shared"
	"net/http"
)

type UpdateCpRequest struct {
	// Id of the Konnect resource
	CpID                       string                            `pathParam:"style=simple,explode=false,name=cpId"`
	PutMeshControlPlaneRequest shared.PutMeshControlPlaneRequest `request:"mediaType=application/json"`
}

func (o *UpdateCpRequest) GetCpID() string {
	if o == nil {
		return ""
	}
	return o.CpID
}

func (o *UpdateCpRequest) GetPutMeshControlPlaneRequest() shared.PutMeshControlPlaneRequest {
	if o == nil {
		return shared.PutMeshControlPlaneRequest{}
	}
	return o.PutMeshControlPlaneRequest
}

type UpdateCpResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// A response to updating a control plane.
	MeshControlPlane *shared.MeshControlPlane
	// Validation Error
	BadRequestError *shared.BadRequestError
	// Unauthorized Error
	UnauthorizedError *shared.UnauthorizedError
	// Permission denied
	ForbiddenError *shared.ForbiddenError
	// Not found
	NotFoundError *shared.NotFoundError
}

func (o *UpdateCpResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateCpResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateCpResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateCpResponse) GetMeshControlPlane() *shared.MeshControlPlane {
	if o == nil {
		return nil
	}
	return o.MeshControlPlane
}

func (o *UpdateCpResponse) GetBadRequestError() *shared.BadRequestError {
	if o == nil {
		return nil
	}
	return o.BadRequestError
}

func (o *UpdateCpResponse) GetUnauthorizedError() *shared.UnauthorizedError {
	if o == nil {
		return nil
	}
	return o.UnauthorizedError
}

func (o *UpdateCpResponse) GetForbiddenError() *shared.ForbiddenError {
	if o == nil {
		return nil
	}
	return o.ForbiddenError
}

func (o *UpdateCpResponse) GetNotFoundError() *shared.NotFoundError {
	if o == nil {
		return nil
	}
	return o.NotFoundError
}
