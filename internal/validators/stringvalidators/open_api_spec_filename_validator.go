// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package stringvalidators

import (
	"context"
	"regexp"

	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
)

var _ validator.String = StringOpenAPISpecFilenameValidatorValidator{}

type StringOpenAPISpecFilenameValidatorValidator struct{}

// Description describes the validation in plain text formatting.
func (v StringOpenAPISpecFilenameValidatorValidator) Description(_ context.Context) string {
	return "The name of the OpenAPI specification to upload"
}

// MarkdownDescription describes the validation in Markdown formatting.
func (v StringOpenAPISpecFilenameValidatorValidator) MarkdownDescription(ctx context.Context) string {
	return v.Description(ctx)
}

// Validate performs the validation.
func (v StringOpenAPISpecFilenameValidatorValidator) ValidateString(ctx context.Context, req validator.StringRequest, resp *validator.StringResponse) {
	re := "^.+(?:\\.yaml|\\.yml|\\.json)$"
	r, _ := regexp.Compile(re)
	if ! r.MatchString(req.ConfigValue.ValueString()) {
	resp.Diagnostics.AddAttributeError(
		req.Path,
		"must match the pattern " + re,
		req.Path.String()+": "+v.Description(ctx),
	)
}
}

func OpenAPISpecFilenameValidator() validator.String {
	return StringOpenAPISpecFilenameValidatorValidator{}
}
