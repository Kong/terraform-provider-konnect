openapi: 3.1.0
info:
  title: Konnect API
  version: 2.0.0
  description: The Konnect platform API
  contact:
    name: Kong
    url: https://cloud.konghq.com
    email: support@konghq.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://global.api.konghq.com
  - url: https://us.api.konghq.com
  - url: https://eu.api.konghq.com
  - url: https://au.api.konghq.com
externalDocs:
  description: Documentation for Kong Gateway and its APIs
  url: https://docs.konghq.com
paths:
  /v1/mesh/control-planes:
    post:
      x-speakeasy-entity-operation: MeshControlPlane#create
      summary: Create a new control plane
      description: Create a new control plane
      operationId: create-cp
      tags:
        - Mesh
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMeshControlPlaneRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateMeshControlPlaneResponse'
        '400':
          $ref: '#/components/responses/CreateMeshControlPlaneValidationError'
        '401':
          $ref: '#/components/responses/MeshControlPlaneUnauthorizedError'
        '403':
          $ref: '#/components/responses/MeshControlPlaneForbiddenError'
  /v1/mesh/control-planes/{cpId}:
    parameters:
      - name: cpId
        in: path
        required: true
        description: Id of the Konnect resource
        example: bf138ba2-c9b1-4229-b268-04d9d8a6410b
        schema:
          type: string
          format: uuid
        x-speakeasy-match: id
    get:
      x-speakeasy-entity-operation: MeshControlPlane#read
      summary: Get the control plane
      description: Get the control plane
      operationId: get-mesh-control-plane
      tags:
        - Mesh
      responses:
        '200':
          $ref: '#/components/responses/RetrieveMeshControlPlaneResponse'
        '401':
          $ref: '#/components/responses/MeshControlPlaneUnauthorizedError'
        '403':
          $ref: '#/components/responses/MeshControlPlaneForbiddenError'
        '404':
          $ref: '#/components/responses/MeshControlPlaneNotFoundError'
    delete:
      x-speakeasy-entity-operation: MeshControlPlane#delete
      summary: Delete the control plane
      description: Delete the control plane
      operationId: delete-mesh-control-plane
      tags:
        - Mesh
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/MeshControlPlaneUnauthorizedError'
        '403':
          $ref: '#/components/responses/MeshControlPlaneForbiddenError'
        '404':
          $ref: '#/components/responses/MeshControlPlaneNotFoundError'
    patch:
      x-speakeasy-entity-operation: MeshControlPlane#update
      summary: Update control plane
      operationId: update-mesh-control-plane
      tags:
        - Mesh
      responses:
        '200':
          $ref: '#/components/responses/UpdateMeshControlPlaneResponse'
        '400':
          $ref: '#/components/responses/UpdateMeshControlPlaneValidationError'
        '401':
          $ref: '#/components/responses/MeshControlPlaneUnauthorizedError'
        '403':
          $ref: '#/components/responses/MeshControlPlaneForbiddenError'
        '404':
          $ref: '#/components/responses/MeshControlPlaneNotFoundError'
      description: Update an individual control plane.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeshControlPlaneRequest'
  /v2/api-products:
    post:
      x-speakeasy-entity-operation: ApiProduct#create
      summary: Create API Product
      description: >
        An API Product packages together associated APIs and their operations,
        backed by thorough documentation,

        with the objective of making API consumption straightforward for
        developers.
      operationId: create-api-product
      responses:
        '201':
          $ref: '#/components/responses/APIProductResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Products
      requestBody:
        $ref: '#/components/requestBodies/CreateAPIProductRequest'
  /v2/api-products/{apiProductId}/product-versions:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: apiProductId
        description: The API Product ID
        in: path
        required: true
    post:
      x-speakeasy-entity-operation: ApiProductVersion#create
      summary: Create API Product Version
      description: Creates a version of an API product.
      operationId: create-api-product-version
      responses:
        '201':
          $ref: '#/components/responses/APIProductVersionResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Product Versions
      requestBody:
        $ref: '#/components/requestBodies/CreateAPIProductVersionRequest'
  /v2/api-products/{apiProductId}/product-versions/{id}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: apiProductId
        description: The API product identifier
        in: path
        required: true
      - schema:
          type: string
          format: uuid
          example: 9f5061ce-78f6-4452-9108-ad7c02821fd5
        name: id
        description: The API product version identifier
        in: path
        required: true
    get:
      x-speakeasy-entity-operation: ApiProductVersion#read
      summary: Fetch API Product Version
      description: Returns a version of an API product.
      operationId: get-api-product-version
      responses:
        '200':
          $ref: '#/components/responses/APIProductVersionResponse'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Versions
    patch:
      x-speakeasy-entity-operation: ApiProductVersion#update
      summary: Update an API Product Version
      description: Updates an API product version.
      operationId: update-api-product-version
      responses:
        '200':
          $ref: '#/components/responses/APIProductVersionResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Product Versions
      requestBody:
        $ref: '#/components/requestBodies/UpdateAPIProductVersionRequest'
    delete:
      x-speakeasy-entity-operation: ApiProductVersion#delete
      summary: Delete API Product Version
      description: Removes an API product version.
      operationId: delete-api-product-version
      responses:
        '204':
          description: API product version was deleted successfully.
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Versions
  /v2/api-products/{id}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: id
        in: path
        required: true
        description: API product identifier
    get:
      x-speakeasy-entity-operation: ApiProduct#read
      summary: Fetch API product
      description: Returns an API product.
      operationId: get-api-product
      responses:
        '200':
          $ref: '#/components/responses/APIProductResponse'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Products
    patch:
      x-speakeasy-entity-operation: ApiProduct#update
      summary: Update an individual API product
      description: Updates an API product.
      operationId: update-api-product
      responses:
        '200':
          $ref: '#/components/responses/APIProductResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Products
      requestBody:
        $ref: '#/components/requestBodies/UpdateAPIProductRequest'
    delete:
      x-speakeasy-entity-operation: ApiProduct#delete
      summary: Delete API Product
      description: Removes an individual API product.
      operationId: delete-api-product
      responses:
        '204':
          description: API product was deleted successfully.
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Products
  /v2/application-auth-strategies:
    post:
      x-speakeasy-entity-operation: ApplicationAuthStrategy#create
      summary: Create App Auth Strategy
      operationId: create-app-auth-strategy
      description: Creates an application auth strategy.
      requestBody:
        $ref: '#/components/requestBodies/CreateAppAuthStrategy'
      responses:
        '201':
          $ref: '#/components/responses/CreateAppAuthStrategy'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - App Auth Strategies
  /v2/application-auth-strategies/{authStrategyId}:
    parameters:
      - $ref: '#/components/parameters/AuthStrategyId'
    get:
      x-speakeasy-entity-operation: ApplicationAuthStrategy#read
      summary: Get App Auth Strategy
      description: Returns an application auth strategy.
      operationId: get-app-auth-strategy
      responses:
        '200':
          $ref: '#/components/responses/GetAppAuthStrategy'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - App Auth Strategies
    patch:
      x-speakeasy-entity-operation: ApplicationAuthStrategy#update
      summary: Update App Auth Strategy
      operationId: update-app-auth-strategy
      description: Updates an application auth strategy.
      requestBody:
        $ref: '#/components/requestBodies/UpdateAppAuthStrategy'
      responses:
        '200':
          $ref: '#/components/responses/UpdateAppAuthStrategy'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - App Auth Strategies
    delete:
      x-speakeasy-entity-operation: ApplicationAuthStrategy#delete
      summary: Delete App Auth Strategy
      description: >-
        Deletes an application auth strategy. An application auth strategy can
        be deleted ONLY if it's not used by any product version within any
        portal regardless of their publication statuses. If an application auth
        strategy is still in use the request will result in an HTTP 409
        CONFLICT.
      operationId: delete-app-auth-strategy
      responses:
        '204':
          description: No Content.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
      tags:
        - App Auth Strategies
  /v2/control-planes:
    parameters: []
    post:
      x-speakeasy-entity-operation: GatewayControlPlane#create
      summary: Create Control Plane
      operationId: create-control-plane
      responses:
        '201':
          $ref: '#/components/responses/CreateControlPlaneResponse'
        '400':
          $ref: '#/components/responses/ControlPlanesBadRequest'
        '401':
          $ref: '#/components/responses/ControlPlaneUnauthenticated'
        '403':
          $ref: '#/components/responses/ControlPlanePermissionDenied'
        '409':
          $ref: '#/components/responses/ControlPlaneConflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      tags:
        - Control Planes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlPlaneRequest'
      description: Create a control plane in the Konnect Organization.
  /v2/control-planes/{controlPlaneId}/core-entities/ca_certificates:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new CA Certificate
      operationId: create-ca_certificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCACertificate'
        description: Description of the new CA Certificate for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CACertificate'
          description: Successfully created CA Certificate
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new CA Certificate
      tags:
        - CA Certificates
      x-speakeasy-entity-operation: GatewayCACertificate#create
  /v2/control-planes/{controlPlaneId}/core-entities/ca_certificates/{CACertificateId}:
    delete:
      description: Delete a CA Certificate
      operationId: delete-ca_certificate
      parameters:
        - $ref: '#/components/parameters/CACertificateId'
      responses:
        '204':
          description: Successfully deleted CA Certificate or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a CA Certificate
      tags:
        - CA Certificates
      x-speakeasy-entity-operation: GatewayCACertificate#delete
    get:
      description: Get a CA Certificate using ID.
      operationId: get-ca_certificate
      parameters:
        - $ref: '#/components/parameters/CACertificateId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CACertificate'
          description: Successfully fetched CA Certificate
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a CA Certificate
      tags:
        - CA Certificates
      x-speakeasy-entity-operation: GatewayCACertificate#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/certificates:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Certificate
      operationId: create-certificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCertificate'
        description: Description of the new Certificate for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: Successfully created Certificate
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Certificate
      tags:
        - Certificates
      x-speakeasy-entity-operation: GatewayCertificate#create
  /v2/control-planes/{controlPlaneId}/core-entities/certificates/{CertificateId}:
    delete:
      description: Delete a Certificate
      operationId: delete-certificate
      parameters:
        - $ref: '#/components/parameters/CertificateId'
      responses:
        '204':
          description: Successfully deleted Certificate or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Certificate
      tags:
        - Certificates
      x-speakeasy-entity-operation: GatewayCertificate#delete
    get:
      description: Get a Certificate using ID.
      operationId: get-certificate
      parameters:
        - $ref: '#/components/parameters/CertificateId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: Successfully fetched Certificate
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Certificate
      tags:
        - Certificates
      x-speakeasy-entity-operation: GatewayCertificate#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/consumer_groups:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Consumer Group
      operationId: create-consumer_group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConsumerGroup'
        description: Description of the new Consumer Group for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerGroup'
          description: Successfully created Consumer Group
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Consumer Group
      tags:
        - Consumer Groups
      x-speakeasy-entity-operation: GatewayConsumerGroup#create
  /v2/control-planes/{controlPlaneId}/core-entities/consumer_groups/{ConsumerGroupId}:
    delete:
      description: Delete a Consumer Group
      operationId: delete-consumer_group
      parameters:
        - $ref: '#/components/parameters/ConsumerGroupId'
      responses:
        '204':
          description: Successfully deleted Consumer Group or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Consumer Group
      tags:
        - Consumer Groups
      x-speakeasy-entity-operation: GatewayConsumerGroup#delete
    get:
      description: Get a Consumer Group using ID.
      operationId: get-consumer_group
      parameters:
        - $ref: '#/components/parameters/ConsumerGroupId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerGroup'
          description: Successfully fetched Consumer Group
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Consumer Group
      tags:
        - Consumer Groups
      x-speakeasy-entity-operation: GatewayConsumerGroup#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/consumers:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Consumer
      operationId: create-consumer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConsumer'
        description: Description of the new Consumer for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumer'
          description: Successfully created Consumer
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Consumer
      tags:
        - Consumers
      x-speakeasy-entity-operation: GatewayConsumer#create
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerId}:
    delete:
      description: Delete a Consumer
      operationId: delete-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerId'
      responses:
        '204':
          description: Successfully deleted Consumer or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Consumer
      tags:
        - Consumers
      x-speakeasy-entity-operation: GatewayConsumer#delete
    get:
      description: Get a Consumer using ID or username.
      operationId: get-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumer'
          description: Successfully fetched Consumer
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Consumer
      tags:
        - Consumers
      x-speakeasy-entity-operation: GatewayConsumer#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/acls:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new ACL associated with a Consumer
      operationId: create-acl-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateACLWithoutParents'
        description: Description of new ACL for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACL'
          description: Successfully created ACL
      summary: Create a new ACL associated with a Consumer
      tags:
        - ACLs
      x-speakeasy-entity-operation: GatewayACL#create
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/acls/{ACLId}:
    delete:
      description: Delete a an ACL associated with a a Consumer using ID.
      operationId: delete-acl-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/ACLId'
      responses:
        '204':
          description: Successfully deleted ACL or the resource didn't exist
      summary: Delete a an ACL associated with a a Consumer
      tags:
        - ACLs
      x-speakeasy-entity-operation: GatewayACL#delete
    get:
      description: Get an ACL associated with a Consumer using ID.
      operationId: get-acl-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/ACLId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACL'
          description: Successfully fetched ACL
        '404':
          description: Resource does not exist
      summary: Fetch an ACL associated with a Consumer
      tags:
        - ACLs
      x-speakeasy-entity-operation: GatewayACL#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/basic-auth:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Basic-auth credential associated with a Consumer
      operationId: create-basic-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBasicAuthWithoutParents'
        description: Description of new Basic-auth credential for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicAuth'
          description: Successfully created Basic-auth credential
      summary: Create a new Basic-auth credential associated with a Consumer
      tags:
        - Basic-auth credentials
      x-speakeasy-entity-operation: GatewayBasicAuth#create
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/basic-auth/{BasicAuthId}:
    delete:
      description: Delete a a Basic-auth credential associated with a a Consumer using ID.
      operationId: delete-basic-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/BasicAuthId'
      responses:
        '204':
          description: >-
            Successfully deleted Basic-auth credential or the resource didn't
            exist
      summary: Delete a a Basic-auth credential associated with a a Consumer
      tags:
        - Basic-auth credentials
      x-speakeasy-entity-operation: GatewayBasicAuth#delete
    get:
      description: Get a Basic-auth credential associated with a Consumer using ID.
      operationId: get-basic-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/BasicAuthId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicAuth'
          description: Successfully fetched Basic-auth credential
        '404':
          description: Resource does not exist
      summary: Fetch a Basic-auth credential associated with a Consumer
      tags:
        - Basic-auth credentials
      x-speakeasy-entity-operation: GatewayBasicAuth#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/hmac-auth:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new HMAC-auth credential associated with a Consumer
      operationId: create-hmac-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHMACAuthWithoutParents'
        description: Description of new HMAC-auth credential for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HMACAuth'
          description: Successfully created HMAC-auth credential
      summary: Create a new HMAC-auth credential associated with a Consumer
      tags:
        - HMAC-auth credentials
      x-speakeasy-entity-operation: GatewayHMACAuth#create
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/hmac-auth/{HMACAuthId}:
    delete:
      description: Delete a a HMAC-auth credential associated with a a Consumer using ID.
      operationId: delete-hmac-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/HMACAuthId'
      responses:
        '204':
          description: >-
            Successfully deleted HMAC-auth credential or the resource didn't
            exist
      summary: Delete a a HMAC-auth credential associated with a a Consumer
      tags:
        - HMAC-auth credentials
      x-speakeasy-entity-operation: GatewayHMACAuth#delete
    get:
      description: Get a HMAC-auth credential associated with a Consumer using ID.
      operationId: get-hmac-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/HMACAuthId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HMACAuth'
          description: Successfully fetched HMAC-auth credential
        '404':
          description: Resource does not exist
      summary: Fetch a HMAC-auth credential associated with a Consumer
      tags:
        - HMAC-auth credentials
      x-speakeasy-entity-operation: GatewayHMACAuth#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/jwt:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new JWT associated with a Consumer
      operationId: create-jwt-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJWTWithoutParents'
        description: Description of new JWT for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: Successfully created JWT
      summary: Create a new JWT associated with a Consumer
      tags:
        - JWTs
      x-speakeasy-entity-operation: GatewayJWT#create
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/jwt/{JWTId}:
    delete:
      description: Delete a a JWT associated with a a Consumer using ID.
      operationId: delete-jwt-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/JWTId'
      responses:
        '204':
          description: Successfully deleted JWT or the resource didn't exist
      summary: Delete a a JWT associated with a a Consumer
      tags:
        - JWTs
      x-speakeasy-entity-operation: GatewayJWT#delete
    get:
      description: Get a JWT associated with a Consumer using ID.
      operationId: get-jwt-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/JWTId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: Successfully fetched JWT
        '404':
          description: Resource does not exist
      summary: Fetch a JWT associated with a Consumer
      tags:
        - JWTs
      x-speakeasy-entity-operation: GatewayJWT#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/key-auth:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new API-key associated with a Consumer
      operationId: create-key-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKeyAuthWithoutParents'
        description: Description of new API-key for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyAuth'
          description: Successfully created API-key
      summary: Create a new API-key associated with a Consumer
      tags:
        - API-keys
      x-speakeasy-entity-operation: GatewayKeyAuth#create
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/key-auth/{KeyAuthId}:
    delete:
      description: Delete a an API-key associated with a a Consumer using ID.
      operationId: delete-key-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/KeyAuthId'
      responses:
        '204':
          description: Successfully deleted API-key or the resource didn't exist
      summary: Delete a an API-key associated with a a Consumer
      tags:
        - API-keys
      x-speakeasy-entity-operation: GatewayKeyAuth#delete
    get:
      description: Get an API-key associated with a Consumer using ID.
      operationId: get-key-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/KeyAuthId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyAuth'
          description: Successfully fetched API-key
        '404':
          description: Resource does not exist
      summary: Fetch an API-key associated with a Consumer
      tags:
        - API-keys
      x-speakeasy-entity-operation: GatewayKeyAuth#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/key-sets:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new KeySet
      operationId: create-key-set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKeySet'
        description: Description of the new KeySet for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeySet'
          description: Successfully created KeySet
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new KeySet
      tags:
        - KeySets
      x-speakeasy-entity-operation: GatewayKeySet#create
  /v2/control-planes/{controlPlaneId}/core-entities/key-sets/{KeySetId}:
    delete:
      description: Delete a KeySet
      operationId: delete-key-set
      parameters:
        - $ref: '#/components/parameters/KeySetId'
      responses:
        '204':
          description: Successfully deleted KeySet or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a KeySet
      tags:
        - KeySets
      x-speakeasy-entity-operation: GatewayKeySet#delete
    get:
      description: Get a KeySet using ID or name.
      operationId: get-key-set
      parameters:
        - $ref: '#/components/parameters/KeySetId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeySet'
          description: Successfully fetched KeySet
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a KeySet
      tags:
        - KeySets
      x-speakeasy-entity-operation: GatewayKeySet#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/keys:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Key
      operationId: create-key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKey'
        description: Description of the new Key for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
          description: Successfully created Key
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Key
      tags:
        - Keys
      x-speakeasy-entity-operation: GatewayKey#create
  /v2/control-planes/{controlPlaneId}/core-entities/keys/{KeyId}:
    delete:
      description: Delete a Key
      operationId: delete-key
      parameters:
        - $ref: '#/components/parameters/KeyId'
      responses:
        '204':
          description: Successfully deleted Key or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Key
      tags:
        - Keys
      x-speakeasy-entity-operation: GatewayKey#delete
    get:
      description: Get a Key using ID or name.
      operationId: get-key
      parameters:
        - $ref: '#/components/parameters/KeyId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
          description: Successfully fetched Key
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Key
      tags:
        - Keys
      x-speakeasy-entity-operation: GatewayKey#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Plugin
      operationId: create-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlugin'
        description: Description of the new Plugin for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPlugin#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}:
    delete:
      description: Delete a Plugin
      operationId: delete-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPlugin#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPlugin#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/routes:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Route
      operationId: create-route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoute'
        description: Description of the new Route for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: Successfully created Route
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Route
      tags:
        - Routes
      x-speakeasy-entity-operation: GatewayRoute#create
  /v2/control-planes/{controlPlaneId}/core-entities/routes/{RouteId}:
    delete:
      description: Delete a Route
      operationId: delete-route
      parameters:
        - $ref: '#/components/parameters/RouteId'
      responses:
        '204':
          description: Successfully deleted Route or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Route
      tags:
        - Routes
      x-speakeasy-entity-operation: GatewayRoute#delete
    get:
      description: Get a Route using ID or name.
      operationId: get-route
      parameters:
        - $ref: '#/components/parameters/RouteId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: Successfully fetched Route
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Route
      tags:
        - Routes
      x-speakeasy-entity-operation: GatewayRoute#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/services:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Service
      operationId: create-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateService'
        description: Description of the new Service for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Successfully created Service
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Service
      tags:
        - Services
      x-speakeasy-entity-operation: GatewayService#create
  /v2/control-planes/{controlPlaneId}/core-entities/services/{ServiceId}:
    delete:
      description: Delete a Service
      operationId: delete-service
      parameters:
        - $ref: '#/components/parameters/ServiceId'
      responses:
        '204':
          description: Successfully deleted Service or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Service
      tags:
        - Services
      x-speakeasy-entity-operation: GatewayService#delete
    get:
      description: Get a Service using ID or name.
      operationId: get-service
      parameters:
        - $ref: '#/components/parameters/ServiceId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Successfully fetched Service
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Service
      tags:
        - Services
      x-speakeasy-entity-operation: GatewayService#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/snis:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new SNI
      operationId: create-sni
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSNI'
        description: Description of the new SNI for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNI'
          description: Successfully created SNI
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new SNI
      tags:
        - SNIs
      x-speakeasy-entity-operation: GatewaySNI#create
  /v2/control-planes/{controlPlaneId}/core-entities/snis/{SNIId}:
    delete:
      description: Delete an SNI
      operationId: delete-sni
      parameters:
        - $ref: '#/components/parameters/SNIId'
      responses:
        '204':
          description: Successfully deleted SNI or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete an SNI
      tags:
        - SNIs
      x-speakeasy-entity-operation: GatewaySNI#delete
    get:
      description: Get an SNI using ID or name.
      operationId: get-sni
      parameters:
        - $ref: '#/components/parameters/SNIId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNI'
          description: Successfully fetched SNI
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch an SNI
      tags:
        - SNIs
      x-speakeasy-entity-operation: GatewaySNI#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/upstreams:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Upstream
      operationId: create-upstream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpstream'
        description: Description of the new Upstream for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upstream'
          description: Successfully created Upstream
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Upstream
      tags:
        - Upstreams
      x-speakeasy-entity-operation: GatewayUpstream#create
  /v2/control-planes/{controlPlaneId}/core-entities/upstreams/{UpstreamId}:
    delete:
      description: Delete an Upstream
      operationId: delete-upstream
      parameters:
        - $ref: '#/components/parameters/UpstreamId'
      responses:
        '204':
          description: Successfully deleted Upstream or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete an Upstream
      tags:
        - Upstreams
      x-speakeasy-entity-operation: GatewayUpstream#delete
    get:
      description: Get an Upstream using ID or name.
      operationId: get-upstream
      parameters:
        - $ref: '#/components/parameters/UpstreamId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upstream'
          description: Successfully fetched Upstream
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch an Upstream
      tags:
        - Upstreams
      x-speakeasy-entity-operation: GatewayUpstream#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/upstreams/{UpstreamIdForTarget}/targets:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Target associated with an Upstream
      operationId: create-target-with-upstream
      parameters:
        - $ref: '#/components/parameters/UpstreamIdForTarget'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTargetWithoutParents'
        description: Description of new Target for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: Successfully created Target
      summary: Create a new Target associated with an Upstream
      tags:
        - Targets
      x-speakeasy-entity-operation: GatewayTarget#create
  /v2/control-planes/{controlPlaneId}/core-entities/upstreams/{UpstreamIdForTarget}/targets/{TargetId}:
    delete:
      description: Delete a a Target associated with a an Upstream using ID or target.
      operationId: delete-target-with-upstream
      parameters:
        - $ref: '#/components/parameters/UpstreamIdForTarget'
        - $ref: '#/components/parameters/TargetId'
      responses:
        '204':
          description: Successfully deleted Target or the resource didn't exist
      summary: Delete a a Target associated with a an Upstream
      tags:
        - Targets
      x-speakeasy-entity-operation: GatewayTarget#delete
    get:
      description: Get a Target associated with an Upstream using ID or target.
      operationId: get-target-with-upstream
      parameters:
        - $ref: '#/components/parameters/UpstreamIdForTarget'
        - $ref: '#/components/parameters/TargetId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: Successfully fetched Target
        '404':
          description: Resource does not exist
      summary: Fetch a Target associated with an Upstream
      tags:
        - Targets
      x-speakeasy-entity-operation: GatewayTarget#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/vaults:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Vault
      operationId: create-vault
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVault'
        description: Description of the new Vault for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
          description: Successfully created Vault
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Vault
      tags:
        - Vaults
      x-speakeasy-entity-operation: GatewayVault#create
  /v2/control-planes/{controlPlaneId}/core-entities/vaults/{VaultId}:
    delete:
      description: Delete a Vault
      operationId: delete-vault
      parameters:
        - $ref: '#/components/parameters/VaultId'
      responses:
        '204':
          description: Successfully deleted Vault or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Vault
      tags:
        - Vaults
      x-speakeasy-entity-operation: GatewayVault#delete
    get:
      description: Get a Vault using ID or prefix.
      operationId: get-vault
      parameters:
        - $ref: '#/components/parameters/VaultId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
          description: Successfully fetched Vault
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Vault
      tags:
        - Vaults
      x-speakeasy-entity-operation: GatewayVault#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{id}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: id
        in: path
        required: true
        description: The control plane ID
    get:
      x-speakeasy-entity-operation: GatewayControlPlane#read
      summary: Fetch Control Plane
      responses:
        '200':
          $ref: '#/components/responses/RetrieveControlPlaneResponse'
        '400':
          $ref: '#/components/responses/ControlPlanesBadRequest'
        '401':
          $ref: '#/components/responses/ControlPlaneUnauthenticated'
        '403':
          $ref: '#/components/responses/ControlPlanePermissionDenied'
        '404':
          $ref: '#/components/responses/ControlPlaneNotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      operationId: get-control-plane
      description: Returns information about a team from a given team ID.
      tags:
        - Control Planes
    patch:
      x-speakeasy-entity-operation: GatewayControlPlane#update
      summary: Update Control Plane
      operationId: update-control-plane
      responses:
        '200':
          $ref: '#/components/responses/UpdateControlPlaneResponse'
        '400':
          $ref: '#/components/responses/ControlPlanesBadRequest'
        '401':
          $ref: '#/components/responses/ControlPlaneUnauthenticated'
        '403':
          $ref: '#/components/responses/ControlPlanePermissionDenied'
        '404':
          $ref: '#/components/responses/ControlPlaneNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      description: Update an individual control plane.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateControlPlaneRequest'
      tags:
        - Control Planes
    delete:
      x-speakeasy-entity-operation: GatewayControlPlane#delete
      summary: Delete Control Plane
      operationId: delete-control-plane
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/ControlPlanesBadRequest'
        '401':
          $ref: '#/components/responses/ControlPlaneUnauthenticated'
        '403':
          $ref: '#/components/responses/ControlPlanePermissionDenied'
        '404':
          $ref: '#/components/responses/ControlPlaneNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      description: Delete an individual control plane.
      tags:
        - Control Planes
  /v2/control-planes/{id}/group-memberships/add:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of a control plane group
    post:
      x-speakeasy-entity-operation: GatewayControlPlaneMembership#create
      summary: Add Control Plane Group Members
      operationId: post-control-planes-id-group-memberships-add
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      requestBody:
        $ref: '#/components/requestBodies/GroupMemebershipAdd'
      tags:
        - Control Plane Groups
      description: Adds one or more control planes as a member of a control plane group.
  /v2/control-planes/{id}/group-memberships/remove:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of a control plane group
    post:
      x-speakeasy-entity-operation: GatewayControlPlaneMembership#delete
      summary: Remove Control Plane Group Members
      operationId: post-control-planes-id-group-memberships-remove
      requestBody:
        $ref: '#/components/requestBodies/GroupMembershipRemove'
      tags:
        - Control Plane Groups
      description: >-
        Removes one or more control planes from the members of a control plane
        group.
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /v2/portals:
    get:
      x-speakeasy-entity-operation: PortalList#read
      summary: List Portals
      description: >-
        Lists developer portals defined in this region for this organization.
        Each developer portal is available at a unique address and has isolated
        appearance, configuration, developers, and applications.
      operationId: list-portals
      tags:
        - Portals
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/SortPortals'
      responses:
        '200':
          $ref: '#/components/responses/ListPortals'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v2/portals/{portalId}:
    x-speakeasy-entity-operation: Portal#read
    parameters:
      - $ref: '#/components/parameters/parameters-PortalId'
    patch:
      x-speakeasy-entity-operation: Portal#create,update
      summary: Update Portal
      description: >-
        Updates the configuration for a single portal including the visibility,
        access, and custom domain settings.
      operationId: update-portal
      requestBody:
        $ref: '#/components/requestBodies/UpdatePortal'
      tags:
        - Portals
      responses:
        '200':
          $ref: '#/components/responses/UpdatePortal'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
  /v2/portals/{portalId}/authentication-settings:
    parameters:
      - $ref: '#/components/parameters/parameters-PortalId'
    get:
      x-speakeasy-entity-operation: PortalAuth#read
      summary: Get Auth Settings
      description: >-
        Returns the developer authentication configuration for a portal, which
        determines how developers can log in and how they are assigned to teams.
      operationId: get-portal-authentication-settings
      tags:
        - Portal Auth Settings
      responses:
        '200':
          $ref: '#/components/responses/PortalAuthenticationSettings'
        '401':
          $ref: '#/components/responses/Unauthorized'
    patch:
      x-speakeasy-entity-operation: PortalAuth#create,update
      summary: Update Auth Settings
      description: >-
        Updates the developer authentication configuration for a portal.
        Developers can be allowed to login using basic auth (email & password)
        or use Single-Sign-On (SSO) through an OIDC Identity Provider (IdP).
        Developers can be automatically assigned to teams by mapping claims from
        thier IdP account.
      operationId: update-portal-authentication-settings
      requestBody:
        $ref: '#/components/requestBodies/UpdatePortalAuthenticationSettings'
      tags:
        - Portal Auth Settings
      responses:
        '200':
          $ref: '#/components/responses/PortalAuthenticationSettings'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v2/portals/{portalId}/product-versions/{productVersionId}:
    parameters:
      - $ref: '#/components/parameters/ProductVersionId'
      - $ref: '#/components/parameters/PortalId'
    get:
      x-speakeasy-entity-operation: PortalProductVersion#read
      summary: Get a portal product version
      operationId: get-portal-product-version
      description: Get a portal product version
      responses:
        '200':
          $ref: '#/components/responses/PortalProductVersion'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Portal Product Versions
    patch:
      x-speakeasy-entity-operation: PortalProductVersion#create,update
      summary: Update a portal product version
      operationId: update-portal-product-version
      description: Update a portal product version
      requestBody:
        $ref: '#/components/requestBodies/UpdatePortalProductVersion'
      responses:
        '200':
          $ref: '#/components/responses/PortalProductVersion'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Portal Product Versions
    delete:
      x-speakeasy-entity-operation: PortalProductVersion#delete
      summary: Delete a portal product version
      operationId: delete-portal-product-version
      description: Delete a portal product version
      responses:
        '204':
          description: No Content.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Portal Product Versions
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#KeyAuth:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginKeyAuth#create
      description: Create a new KeyAuth Plugin
      summary: Create a new KeyAuth Plugin
      tags:
        - Plugins
      operationId: create-keyauth-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKeyAuthPlugin'
        description: Create a new KeyAuth plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyAuthPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#KeyAuth:
    delete:
      description: Delete a Plugin
      operationId: delete-keyauth-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginKeyAuth#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-keyauth-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyAuthPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginKeyAuth#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-keyauth-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKeyAuthPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyAuthPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginKeyAuth#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#CORS:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginCORS#create
      description: Create a new CORS Plugin
      summary: Create a new CORS Plugin
      tags:
        - Plugins
      operationId: create-cors-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCORSPlugin'
        description: Create a new CORS plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CORSPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#CORS:
    delete:
      description: Delete a Plugin
      operationId: delete-cors-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginCORS#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-cors-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CORSPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginCORS#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-cors-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCORSPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CORSPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginCORS#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#RateLimiting:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginRateLimiting#create
      description: Create a new RateLimiting Plugin
      summary: Create a new RateLimiting Plugin
      tags:
        - Plugins
      operationId: create-ratelimiting-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRateLimitingPlugin'
        description: Create a new RateLimiting plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitingPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#RateLimiting:
    delete:
      description: Delete a Plugin
      operationId: delete-ratelimiting-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRateLimiting#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-ratelimiting-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitingPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRateLimiting#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-ratelimiting-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRateLimitingPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitingPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRateLimiting#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#BasicAuth:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginBasicAuth#create
      description: Create a new BasicAuth Plugin
      summary: Create a new BasicAuth Plugin
      tags:
        - Plugins
      operationId: create-basicauth-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBasicAuthPlugin'
        description: Create a new BasicAuth plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicAuthPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#BasicAuth:
    delete:
      description: Delete a Plugin
      operationId: delete-basicauth-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginBasicAuth#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-basicauth-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicAuthPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginBasicAuth#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-basicauth-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBasicAuthPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicAuthPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginBasicAuth#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#RateLimitingAdvanced:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginRateLimitingAdvanced#create
      description: Create a new RateLimitingAdvanced Plugin
      summary: Create a new RateLimitingAdvanced Plugin
      tags:
        - Plugins
      operationId: create-ratelimitingadvanced-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRateLimitingAdvancedPlugin'
        description: Create a new RateLimitingAdvanced plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitingAdvancedPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#RateLimitingAdvanced:
    delete:
      description: Delete a Plugin
      operationId: delete-ratelimitingadvanced-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRateLimitingAdvanced#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-ratelimitingadvanced-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitingAdvancedPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRateLimitingAdvanced#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-ratelimitingadvanced-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRateLimitingAdvancedPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitingAdvancedPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRateLimitingAdvanced#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#OpenidConnect:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginOpenidConnect#create
      description: Create a new OpenidConnect Plugin
      summary: Create a new OpenidConnect Plugin
      tags:
        - Plugins
      operationId: create-openidconnect-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpenidConnectPlugin'
        description: Create a new OpenidConnect plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenidConnectPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#OpenidConnect:
    delete:
      description: Delete a Plugin
      operationId: delete-openidconnect-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOpenidConnect#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-openidconnect-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenidConnectPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOpenidConnect#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-openidconnect-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpenidConnectPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenidConnectPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOpenidConnect#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#JWT:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginJWT#create
      description: Create a new JWT Plugin
      summary: Create a new JWT Plugin
      tags:
        - Plugins
      operationId: create-jwt-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJWTPlugin'
        description: Create a new JWT plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#JWT:
    delete:
      description: Delete a Plugin
      operationId: delete-jwt-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJWT#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-jwt-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJWT#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-jwt-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJWTPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJWT#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#Prometheus:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginPrometheus#create
      description: Create a new Prometheus Plugin
      summary: Create a new Prometheus Plugin
      tags:
        - Plugins
      operationId: create-prometheus-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePrometheusPlugin'
        description: Create a new Prometheus plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrometheusPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#Prometheus:
    delete:
      description: Delete a Plugin
      operationId: delete-prometheus-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginPrometheus#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-prometheus-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrometheusPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginPrometheus#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-prometheus-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePrometheusPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrometheusPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginPrometheus#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#ACL:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginACL#create
      description: Create a new ACL Plugin
      summary: Create a new ACL Plugin
      tags:
        - Plugins
      operationId: create-acl-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateACLPlugin'
        description: Create a new ACL plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#ACL:
    delete:
      description: Delete a Plugin
      operationId: delete-acl-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginACL#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-acl-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginACL#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-acl-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateACLPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginACL#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#RequestTermination:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginRequestTermination#create
      description: Create a new RequestTermination Plugin
      summary: Create a new RequestTermination Plugin
      tags:
        - Plugins
      operationId: create-requesttermination-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestTerminationPlugin'
        description: Create a new RequestTermination plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTerminationPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#RequestTermination:
    delete:
      description: Delete a Plugin
      operationId: delete-requesttermination-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTermination#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-requesttermination-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTerminationPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTermination#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-requesttermination-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestTerminationPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTerminationPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTermination#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#FileLog:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginFileLog#create
      description: Create a new FileLog Plugin
      summary: Create a new FileLog Plugin
      tags:
        - Plugins
      operationId: create-filelog-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFileLogPlugin'
        description: Create a new FileLog plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileLogPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#FileLog:
    delete:
      description: Delete a Plugin
      operationId: delete-filelog-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginFileLog#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-filelog-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileLogPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginFileLog#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-filelog-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFileLogPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileLogPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginFileLog#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#RequestTransformer:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginRequestTransformer#create
      description: Create a new RequestTransformer Plugin
      summary: Create a new RequestTransformer Plugin
      tags:
        - Plugins
      operationId: create-requesttransformer-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestTransformerPlugin'
        description: Create a new RequestTransformer plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTransformerPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#RequestTransformer:
    delete:
      description: Delete a Plugin
      operationId: delete-requesttransformer-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTransformer#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-requesttransformer-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTransformerPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTransformer#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-requesttransformer-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestTransformerPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTransformerPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTransformer#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#CorrelationId:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginCorrelationId#create
      description: Create a new CorrelationId Plugin
      summary: Create a new CorrelationId Plugin
      tags:
        - Plugins
      operationId: create-correlationid-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCorrelationIdPlugin'
        description: Create a new CorrelationId plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrelationIdPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#CorrelationId:
    delete:
      description: Delete a Plugin
      operationId: delete-correlationid-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginCorrelationId#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-correlationid-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrelationIdPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginCorrelationId#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-correlationid-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCorrelationIdPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrelationIdPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginCorrelationId#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#ProxyCache:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginProxyCache#create
      description: Create a new ProxyCache Plugin
      summary: Create a new ProxyCache Plugin
      tags:
        - Plugins
      operationId: create-proxycache-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProxyCachePlugin'
        description: Create a new ProxyCache plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyCachePlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#ProxyCache:
    delete:
      description: Delete a Plugin
      operationId: delete-proxycache-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginProxyCache#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-proxycache-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyCachePlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginProxyCache#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-proxycache-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProxyCachePlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyCachePlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginProxyCache#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#RequestTransformerAdvanced:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginRequestTransformerAdvanced#create
      description: Create a new RequestTransformerAdvanced Plugin
      summary: Create a new RequestTransformerAdvanced Plugin
      tags:
        - Plugins
      operationId: create-requesttransformeradvanced-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestTransformerAdvancedPlugin'
        description: Create a new RequestTransformerAdvanced plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTransformerAdvancedPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#RequestTransformerAdvanced:
    delete:
      description: Delete a Plugin
      operationId: delete-requesttransformeradvanced-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTransformerAdvanced#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-requesttransformeradvanced-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTransformerAdvancedPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTransformerAdvanced#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-requesttransformeradvanced-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestTransformerAdvancedPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTransformerAdvancedPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTransformerAdvanced#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#ResponseTransformer:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginResponseTransformer#create
      description: Create a new ResponseTransformer Plugin
      summary: Create a new ResponseTransformer Plugin
      tags:
        - Plugins
      operationId: create-responsetransformer-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResponseTransformerPlugin'
        description: Create a new ResponseTransformer plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransformerPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#ResponseTransformer:
    delete:
      description: Delete a Plugin
      operationId: delete-responsetransformer-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginResponseTransformer#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-responsetransformer-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransformerPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginResponseTransformer#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-responsetransformer-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResponseTransformerPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransformerPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginResponseTransformer#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#ResponseTransformerAdvanced:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginResponseTransformerAdvanced#create
      description: Create a new ResponseTransformerAdvanced Plugin
      summary: Create a new ResponseTransformerAdvanced Plugin
      tags:
        - Plugins
      operationId: create-responsetransformeradvanced-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResponseTransformerAdvancedPlugin'
        description: Create a new ResponseTransformerAdvanced plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransformerAdvancedPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#ResponseTransformerAdvanced:
    delete:
      description: Delete a Plugin
      operationId: delete-responsetransformeradvanced-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginResponseTransformerAdvanced#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-responsetransformeradvanced-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransformerAdvancedPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginResponseTransformerAdvanced#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-responsetransformeradvanced-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResponseTransformerAdvancedPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransformerAdvancedPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginResponseTransformerAdvanced#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#IpRestriction:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginIpRestriction#create
      description: Create a new IpRestriction Plugin
      summary: Create a new IpRestriction Plugin
      tags:
        - Plugins
      operationId: create-iprestriction-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIpRestrictionPlugin'
        description: Create a new IpRestriction plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRestrictionPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#IpRestriction:
    delete:
      description: Delete a Plugin
      operationId: delete-iprestriction-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginIpRestriction#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-iprestriction-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRestrictionPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginIpRestriction#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-iprestriction-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIpRestrictionPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRestrictionPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginIpRestriction#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#PreFunction:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginPreFunction#create
      description: Create a new PreFunction Plugin
      summary: Create a new PreFunction Plugin
      tags:
        - Plugins
      operationId: create-prefunction-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePreFunctionPlugin'
        description: Create a new PreFunction plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreFunctionPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#PreFunction:
    delete:
      description: Delete a Plugin
      operationId: delete-prefunction-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginPreFunction#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-prefunction-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreFunctionPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginPreFunction#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-prefunction-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePreFunctionPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreFunctionPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginPreFunction#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#Oauth2:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginOauth2#create
      description: Create a new Oauth2 Plugin
      summary: Create a new Oauth2 Plugin
      tags:
        - Plugins
      operationId: create-oauth2-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOauth2Plugin'
        description: Create a new Oauth2 plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oauth2Plugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#Oauth2:
    delete:
      description: Delete a Plugin
      operationId: delete-oauth2-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOauth2#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-oauth2-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oauth2Plugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOauth2#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-oauth2-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOauth2Plugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oauth2Plugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOauth2#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#Opentelemetry:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginOpentelemetry#create
      description: Create a new Opentelemetry Plugin
      summary: Create a new Opentelemetry Plugin
      tags:
        - Plugins
      operationId: create-opentelemetry-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpentelemetryPlugin'
        description: Create a new Opentelemetry plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpentelemetryPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#Opentelemetry:
    delete:
      description: Delete a Plugin
      operationId: delete-opentelemetry-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOpentelemetry#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-opentelemetry-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpentelemetryPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOpentelemetry#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-opentelemetry-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpentelemetryPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpentelemetryPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOpentelemetry#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#AIProxy:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginAIProxy#create
      description: Create a new AIProxy Plugin
      summary: Create a new AIProxy Plugin
      tags:
        - Plugins
      operationId: create-aiproxy-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIProxyPlugin'
        description: Create a new AIProxy plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIProxyPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#AIProxy:
    delete:
      description: Delete a Plugin
      operationId: delete-aiproxy-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIProxy#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-aiproxy-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIProxyPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIProxy#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-aiproxy-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIProxyPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIProxyPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIProxy#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#AIPromptGuard:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginAIPromptGuard#create
      description: Create a new AIPromptGuard Plugin
      summary: Create a new AIPromptGuard Plugin
      tags:
        - Plugins
      operationId: create-aipromptguard-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIPromptGuardPlugin'
        description: Create a new AIPromptGuard plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptGuardPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#AIPromptGuard:
    delete:
      description: Delete a Plugin
      operationId: delete-aipromptguard-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptGuard#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-aipromptguard-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptGuardPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptGuard#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-aipromptguard-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIPromptGuardPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptGuardPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptGuard#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#AIPromptTemplate:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginAIPromptTemplate#create
      description: Create a new AIPromptTemplate Plugin
      summary: Create a new AIPromptTemplate Plugin
      tags:
        - Plugins
      operationId: create-aiprompttemplate-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIPromptTemplatePlugin'
        description: Create a new AIPromptTemplate plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptTemplatePlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#AIPromptTemplate:
    delete:
      description: Delete a Plugin
      operationId: delete-aiprompttemplate-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptTemplate#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-aiprompttemplate-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptTemplatePlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptTemplate#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-aiprompttemplate-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIPromptTemplatePlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptTemplatePlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptTemplate#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#AIPromptDecorator:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginAIPromptDecorator#create
      description: Create a new AIPromptDecorator Plugin
      summary: Create a new AIPromptDecorator Plugin
      tags:
        - Plugins
      operationId: create-aipromptdecorator-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIPromptDecoratorPlugin'
        description: Create a new AIPromptDecorator plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptDecoratorPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#AIPromptDecorator:
    delete:
      description: Delete a Plugin
      operationId: delete-aipromptdecorator-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptDecorator#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-aipromptdecorator-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptDecoratorPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptDecorator#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-aipromptdecorator-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIPromptDecoratorPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptDecoratorPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptDecorator#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#AWSLambda:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginAWSLambda#create
      description: Create a new AWSLambda Plugin
      summary: Create a new AWSLambda Plugin
      tags:
        - Plugins
      operationId: create-awslambda-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAWSLambdaPlugin'
        description: Create a new AWSLambda plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSLambdaPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#AWSLambda:
    delete:
      description: Delete a Plugin
      operationId: delete-awslambda-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAWSLambda#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-awslambda-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSLambdaPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAWSLambda#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-awslambda-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAWSLambdaPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSLambdaPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAWSLambda#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#JQ:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginJQ#create
      description: Create a new JQ Plugin
      summary: Create a new JQ Plugin
      tags:
        - Plugins
      operationId: create-jq-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJQPlugin'
        description: Create a new JQ plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JQPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#JQ:
    delete:
      description: Delete a Plugin
      operationId: delete-jq-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJQ#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-jq-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JQPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJQ#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-jq-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJQPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JQPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJQ#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#JWTSigner:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginJWTSigner#create
      description: Create a new JWTSigner Plugin
      summary: Create a new JWTSigner Plugin
      tags:
        - Plugins
      operationId: create-jwtsigner-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJWTSignerPlugin'
        description: Create a new JWTSigner plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTSignerPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#JWTSigner:
    delete:
      description: Delete a Plugin
      operationId: delete-jwtsigner-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJWTSigner#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-jwtsigner-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTSignerPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJWTSigner#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-jwtsigner-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJWTSignerPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTSignerPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJWTSigner#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#Saml:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayPluginSaml#create
      description: Create a new Saml Plugin
      summary: Create a new Saml Plugin
      tags:
        - Plugins
      operationId: create-saml-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSamlPlugin'
        description: Create a new Saml plugin
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlPlugin'
          description: Successfully created Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#Saml:
    delete:
      description: Delete a Plugin
      operationId: delete-saml-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginSaml#delete
    get:
      description: Get a Plugin using ID.
      operationId: get-saml-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlPlugin'
          description: Successfully fetched Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginSaml#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Create or Update Plugin using ID.
      operationId: update-saml-plugin
      parameters:
        - $ref: '#/components/parameters/PluginId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSamlPlugin'
        description: Description of the Plugin
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlPlugin'
          description: Successfully upserted Plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Upsert a Plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginSaml#update
components:
  parameters:
    PageSize:
      name: page[size]
      description: >-
        The maximum number of items to include per page. The last page of a
        collection may include fewer items.
      required: false
      in: query
      allowEmptyValue: true
      schema:
        type: integer
        example: 10
    PageNumber:
      name: page[number]
      description: Determines which page of the entities to retrieve.
      required: false
      in: query
      allowEmptyValue: true
      schema:
        type: integer
        example: 1
    ACLId:
      description: ID of the ACL to lookup
      example: f28acbfa-c866-4587-b688-0208ac24df21
      in: path
      name: ACLId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    BasicAuthId:
      description: ID of the Basic-auth credential to lookup
      example: 80db1b58-ca7c-4d21-b92a-64eb07725872
      in: path
      name: BasicAuthId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    CACertificateId:
      description: ID of the CA Certificate to lookup
      example: 3c31f18a-f27a-4f9b-8cd4-bf841554612f
      in: path
      name: CACertificateId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    CertificateId:
      description: ID of the Certificate to lookup
      example: ddf3cdaa-3329-4961-822a-ce6dbd38eff7
      in: path
      name: CertificateId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    ConsumerGroupId:
      description: ID of the Consumer Group to lookup
      example: ''
      in: path
      name: ConsumerGroupId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    ConsumerId:
      description: ID of the Consumer to lookup
      example: c1059869-6fa7-4329-a5f5-5946d14ca2c5
      in: path
      name: ConsumerId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    ConsumerIdForNestedEntities:
      description: Consumer ID for nested entities
      example: f28acbfa-c866-4587-b688-0208ac24df21
      in: path
      name: ConsumerIdForNestedEntities
      required: true
      schema:
        type: string
      x-speakeasy-match: consumer_id
    ControlPlaneId:
      description: >-
        The UUID of your control plane. This variable is available in the
        Konnect manager.
      example: 9524ec7d-36d9-465d-a8c5-83a3c9390458
      in: path
      name: controlPlaneId
      required: true
      schema:
        format: uuid
        type: string
    HMACAuthId:
      description: ID of the HMAC-auth credential to lookup
      example: 70e7b00b-72f2-471b-a5ce-9c4171775360
      in: path
      name: HMACAuthId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    JWTId:
      description: ID of the JWT to lookup
      example: 4a7f5faa-8c96-46d6-8214-c87573ef2ac4
      in: path
      name: JWTId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    KeyAuthId:
      description: ID of the API-key to lookup
      example: ''
      in: path
      name: KeyAuthId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    KeyId:
      description: ID of the Key to lookup
      example: bba22c06-a632-42be-a018-1b9ff357b5b9
      in: path
      name: KeyId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    KeySetId:
      description: ID of the KeySet to lookup
      example: 6cc34248-50b4-4a81-9201-3bdf7a83f712
      in: path
      name: KeySetId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    PluginId:
      description: ID of the Plugin to lookup
      example: 3473c251-5b6c-4f45-b1ff-7ede735a366d
      in: path
      name: PluginId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    RouteId:
      description: ID of the Route to lookup
      example: a4326a41-aa12-44e3-93e4-6b6e58bfb9d7
      in: path
      name: RouteId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    SNIId:
      description: ID of the SNI to lookup
      example: 64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f
      in: path
      name: SNIId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    ServiceId:
      description: ID of the Service to lookup
      example: 7fca84d6-7d37-4a74-a7b0-93e576089a41
      in: path
      name: ServiceId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    TargetId:
      description: ID of the Target to lookup
      example: 5a078780-5d4c-4aae-984a-bdc6f52113d8
      in: path
      name: TargetId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    UpstreamId:
      description: ID of the Upstream to lookup
      example: 426d620c-7058-4ae6-aacc-f85a3204a2c5
      in: path
      name: UpstreamId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    UpstreamIdForTarget:
      description: ID or target of the Target to lookup
      example: 5a078780-5d4c-4aae-984a-bdc6f52113d8
      in: path
      name: UpstreamIdForTarget
      required: true
      schema:
        type: string
      x-speakeasy-match: upstream_id
    VaultId:
      description: ID of the Vault to lookup
      example: 9d4d6d19-77c6-428e-a965-9bc9647633e9
      in: path
      name: VaultId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    PortalId:
      name: portalId
      description: portal identifier
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/schemas-UUID'
    ProductVersionId:
      name: productVersionId
      description: API product version identifier
      in: path
      required: true
      x-speakeasy-match: product_version_id
      schema:
        $ref: '#/components/schemas/schemas-UUID'
    SortPortals:
      name: sort
      description: |
        Sorts a collection of portals. Supported sort attributes are:
          - name
          - description
          - is_public
          - rbac_enabled
          - auto_approve_applications
          - auto_approve_developers
          - default_domain
          - custom_domain
          - custom_client_domain
          - created_at
          - updated_at
      in: query
      required: false
      schema:
        type: string
    parameters-PortalId:
      schema:
        type: string
        format: uuid
      name: portalId
      in: path
      required: true
      description: ID of the portal.
    AuthStrategyId:
      name: authStrategyId
      description: Application auth strategy identifier
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
      x-speakeasy-match: id
  responses:
    RetrieveControlPlaneResponse:
      description: A response to retrieving a single control plane.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlPlane'
    CreateControlPlaneResponse:
      description: A response to creating a control plane.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlPlane'
    UpdateControlPlaneResponse:
      description: A response to updating a control plane.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlPlane'
    ControlPlanesBadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
    ControlPlanePermissionDenied:
      description: Permission denied
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    ControlPlaneUnauthenticated:
      description: Unauthenticated
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    ControlPlaneNotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    ControlPlaneConflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            title: InternalServerError
            type: object
            description: The error response object.
            properties:
              status:
                type: integer
                description: The HTTP status code.
                example: 500
                enum:
                  - 500
              title:
                type: string
                description: The error response code.
                example: Internal Server Error
              instance:
                type: string
                example: konnect:trace:2287285207635123011
                description: The Konnect traceback code
              detail:
                type: string
                example: >-
                  Could not propagate control plane changes to control plane
                  cluster service.
                description: Details about the error.
            required:
              - status
              - title
              - instance
    ServiceUnavailable:
      description: Service Unavailable
      content:
        application/problem+json:
          schema:
            title: ServiceUnavailableError
            type: object
            description: Error response for temporary service unavailability.
            properties:
              status:
                type: integer
                description: The HTTP status code.
                example: 503
                enum:
                  - 503
              title:
                type: string
                description: The error response code.
                example: Service Unavailable
              instance:
                type: string
                example: konnect:trace:2287285207635123011
                description: The Konnect traceback code
              detail:
                type: string
                example: >-
                  Could not retrieve permissions to check resource
                  accessibility.
                description: Details about the error.
            required:
              - status
              - title
              - instance
    BadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    Forbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    NotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    HTTP401Error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
      description: Unauthorized
    RetrieveMeshControlPlaneResponse:
      description: A response to creating a control plane.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MeshControlPlane'
    CreateMeshControlPlaneResponse:
      description: A response to creating a control plane.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MeshControlPlane'
    CreateMeshControlPlaneValidationError:
      description: Validation Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
    UpdateMeshControlPlaneValidationError:
      description: Validation Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
    MeshControlPlaneForbiddenError:
      description: Permission denied
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    MeshControlPlaneUnauthorizedError:
      description: Unauthorized Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    MeshControlPlaneNotFoundError:
      description: Not found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    UpdateMeshControlPlaneResponse:
      description: A response to updating a control plane.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MeshControlPlane'
    ApiProductUnauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    ApiProductNotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    APIProductResponse:
      description: API product
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIProduct'
    APIProductVersionResponse:
      description: API product
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIProductVersion'
    UnsupportedMediaType:
      description: Unsupported Media Type
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnsupportedMediaTypeError'
    PortalAuthenticationSettings:
      description: Details about a portal's authentication settings.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalAuthenticationSettingsResponse'
    ListPortals:
      description: A paginated list of portals in the current region of an organization.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListPortalsResponse'
    PortalProductVersion:
      description: A response containing a portal product version
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalProductVersion'
    UpdatePortal:
      description: Details about the portal being updated.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePortalResponse'
    Conflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    CreateAppAuthStrategy:
      description: >-
        A response containing the newly created application auth strategy
        object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAppAuthStrategyResponse'
    GetAppAuthStrategy:
      description: A response containing a single application auth strategy object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetAppAuthStrategyResponse'
    UpdateAppAuthStrategy:
      description: A response containing a single updated application auth strategy object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAppAuthStrategyResponse'
  schemas:
    GroupMembership:
      x-speakeasy-entity: GatewayControlPlaneMembership
      type: object
      properties:
        members:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
    CreateControlPlaneRequest:
      x-speakeasy-entity: GatewayControlPlane
      title: CreateControlPlaneRequest
      description: The request schema for the create control plane request.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          example: Test Control Plane
          description: The name of the control plane.
        description:
          type: string
          example: A test control plane for exploration.
          description: The description of the control plane in Konnect.
        cluster_type:
          type: string
          description: >-
            The ClusterType value of the cluster associated with the Control
            Plane.
          example: CLUSTER_TYPE_CONTROL_PLANE
          enum:
            - CLUSTER_TYPE_CONTROL_PLANE
            - CLUSTER_TYPE_HYBRID
            - CLUSTER_TYPE_K8S_INGRESS_CONTROLLER
            - CLUSTER_TYPE_CONTROL_PLANE_GROUP
        auth_type:
          type: string
          description: >-
            The auth type value of the cluster associated with the Runtime
            Group.
          example: pinned_client_certs
          enum:
            - pinned_client_certs
            - pki_client_certs
        cloud_gateway:
          type: boolean
          description: Whether this control-plane can be used for cloud-gateways.
          example: false
        proxy_urls:
          $ref: '#/components/schemas/ProxyURLs'
        labels:
          $ref: '#/components/schemas/Labels'
      required:
        - name
    UpdateControlPlaneRequest:
      title: UpdateControlPlaneRequest
      description: The request schema for the update control plane request.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          example: Test Control Plane
          description: The name of the control plane.
        description:
          type: string
          example: A test control plane for exploration.
          description: The description of the control plane in Konnect.
        auth_type:
          type: string
          description: >-
            The auth type value of the cluster associated with the Runtime
            Group.
          example: pinned_client_certs
          enum:
            - pinned_client_certs
            - pki_client_certs
        proxy_urls:
          $ref: '#/components/schemas/ProxyURLs'
        labels:
          $ref: '#/components/schemas/Labels'
    ControlPlane:
      x-speakeasy-entity: GatewayControlPlane
      allOf:
        - $ref: '#/components/schemas/ControlPlaneSummary'
        - type: object
          properties:
            labels:
              $ref: '#/components/schemas/Labels'
            config:
              x-speakeasy-param-suppress-computed-diff: true
              type: object
              description: CP configuration object for related access endpoints.
              properties:
                control_plane_endpoint:
                  type: string
                  format: url
                  example: https://acfe5f253f.cp0.konghq.com
                  description: Control Plane Endpoint.
                  readOnly: true
                telemetry_endpoint:
                  type: string
                  format: url
                  example: https://acfe5f253f.tp0.konghq.com
                  description: Telemetry Endpoint.
                  readOnly: true
            created_at:
              x-speakeasy-terraform-ignore: true
              type: string
              format: date-time
              example: '2022-11-04T20:10:06.927Z'
              description: >-
                An ISO-8604 timestamp representation of control plane creation
                date.
              readOnly: true
            updated_at:
              x-speakeasy-terraform-ignore: true
              type: string
              format: date-time
              example: '2022-11-04T20:10:06.927Z'
              description: >-
                An ISO-8604 timestamp representation of control plane update
                date.
              readOnly: true
    ControlPlaneSummary:
      title: ControlPlaneSummary
      type: object
      description: >-
        The control plane object contains information about a Kong control
        plane.
      additionalProperties: false
      properties:
        id:
          x-speakeasy-param-suppress-computed-diff: true
          type: string
          format: uuid
          example: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          description: The control plane ID.
          readOnly: true
        name:
          type: string
          example: Test Control Plane
          description: The name of the control plane.
        description:
          type: string
          example: A test control plane for exploration.
          description: The description of the control plane in Konnect.
        labels:
          $ref: '#/components/schemas/Labels'
        config:
          type: object
          description: CP configuration object for related access endpoints.
          additionalProperties: false
          properties:
            control_plane_endpoint:
              type: string
              format: url
              example: https://acfe5f253f.cp0.konghq.com
              description: Control Plane Endpoint.
              readOnly: true
            telemetry_endpoint:
              type: string
              format: url
              example: https://acfe5f253f.tp0.konghq.com
              description: Telemetry Endpoint.
              readOnly: true
            cluster_type:
              type: string
              description: >-
                The ClusterType value of the cluster associated with the Control
                Plane.
              example: CLUSTER_TYPE_CONTROL_PLANE
              enum:
                - CLUSTER_TYPE_CONTROL_PLANE
                - CLUSTER_TYPE_HYBRID
                - CLUSTER_TYPE_K8S_INGRESS_CONTROLLER
                - CLUSTER_TYPE_CONTROL_PLANE_GROUP
              readOnly: true
            auth_type:
              type: string
              description: >-
                The auth type value of the cluster associated with the Runtime
                Group.
              example: pinned_client_certs
              enum:
                - pinned_client_certs
                - pki_client_certs
              readOnly: true
            cloud_gateway:
              type: boolean
              description: Whether the Control Plane can be used for cloud-gateways.
              readOnly: true
            proxy_urls:
              $ref: '#/components/schemas/ProxyURLs'
          required:
            - control_plane_endpoint
            - telemetry_endpoint
            - cluster_type
            - auth_type
            - cloud_gateway
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Labels:
      title: Labels
      type: object
      example:
        env: test
      description: >
        Labels store metadata of an entity that can be used for filtering an
        entity list or for searching across entity types. 


        Keys must be of length 1-63 characters, and cannot start with "kong",
        "konnect", "mesh", "kic", or "_".
      additionalProperties:
        type: string
        pattern: ^[a-z0-9A-Z]{1}([a-z0-9A-Z-._]*[a-z0-9A-Z]+)?$
        minLength: 1
        maxLength: 63
      maxProperties: 50
    ProxyURL:
      title: ProxyURL
      description: >-
        Proxy URL associated with reaching the data-planes connected to a
        control-plane.
      type: object
      additionalProperties: false
      properties:
        host:
          type: string
          description: Hostname of the proxy URL.
        port:
          type: integer
          description: Port of the proxy URL.
        protocol:
          type: string
          description: Protocol of the proxy URL.
      required:
        - host
        - port
        - protocol
      example:
        host: example.com
        port: 443
        protocol: https
    ProxyURLs:
      title: ProxyURLs
      description: >-
        Array of proxy URLs associated with reaching the data-planes connected
        to a control-plane.
      type: array
      items:
        $ref: '#/components/schemas/ProxyURL'
      example:
        - host: example.com
          port: 443
          protocol: https
    PageMeta:
      type: object
      description: >-
        Contains pagination query parameters and the total number of objects
        returned.
      required:
        - number
        - size
        - total
      properties:
        number:
          type: number
          example: 1
        size:
          type: number
          example: 10
        total:
          type: number
          example: 100
    PaginatedMeta:
      type: object
      title: PaginatedMeta
      description: returns the pagination information
      properties:
        page:
          $ref: '#/components/schemas/PageMeta'
      required:
        - page
    BaseError:
      type: object
      title: Error
      description: standard error
      required:
        - status
        - title
        - instance
        - detail
      properties:
        status:
          type: integer
          description: >
            The HTTP status code of the error. Useful when passing the response

            body to child properties in a frontend UI. Must be returned as an
            integer.
          readOnly: true
        title:
          type: string
          description: |
            A short, human-readable summary of the problem. It should not
            change between occurences of a problem, except for localization.
            Should be provided as "Sentence case" for direct use in the UI.
          readOnly: true
        type:
          type: string
          description: The error type.
          readOnly: true
        instance:
          type: string
          description: |
            Used to return the correlation ID back to the user, in the format
            kong:trace:<correlation_id>. This helps us find the relevant logs
            when a customer reports an issue.
          readOnly: true
        detail:
          type: string
          description: >
            A human readable explanation specific to this occurence of the
            problem.

            This field may contain request/entity data to help the user
            understand

            what went wrong. Enclose variable values in square brackets. Should
            be

            provided as "Sentence case" for direct use in the UI.
          readOnly: true
    InvalidRules:
      description: invalid parameters rules
      type: string
      readOnly: true
      nullable: true
      enum:
        - required
        - enum
        - min_length
        - max_length
        - min_digits
        - min_lowercase
        - min_uppercase
        - min_symbols
        - is_array
        - is_base64
        - is_boolean
        - is_date_time
        - is_integer
        - is_null
        - is_number
        - is_object
        - is_string
        - is_uuid
        - unknown_property
        - is_label
        - matches_regex
    InvalidParameterChoiceItem:
      type: object
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          $ref: '#/components/schemas/InvalidRules'
        reason:
          type: string
          example: is a required field
          readOnly: true
        choices:
          type: array
          uniqueItems: true
          nullable: true
          items: {}
          readOnly: true
      required:
        - field
        - reason
    InvalidParameterDependentItem:
      type: object
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          description: invalid parameters rules
          type: string
          readOnly: true
          nullable: true
          enum:
            - dependent_fields
        reason:
          type: string
          example: is a required field
          readOnly: true
        dependents:
          type: array
          uniqueItems: true
          nullable: true
          items: {}
          readOnly: true
      required:
        - field
        - rule
        - reason
        - dependents
    InvalidParameters:
      type: array
      nullable: false
      uniqueItems: true
      minItems: 1
      description: invalid parameters
      items:
        oneOf:
          - $ref: '#/components/schemas/InvalidParameterChoiceItem'
          - $ref: '#/components/schemas/InvalidParameterDependentItem'
    BadRequestError:
      type: object
      required:
        - invalid_parameters
      properties:
        status:
          example: 400
        title:
          example: Bad Request
        type:
          example: https://httpstatuses.com/400
        instance:
          example: kong:trace:1234567890
        detail:
          example: Invalid request body
        invalid_parameters:
          $ref: '#/components/schemas/InvalidParameters'
      allOf:
        - $ref: '#/components/schemas/BaseError'
    UnauthorizedError:
      type: object
      properties:
        status:
          example: 401
          type: integer
        title:
          example: Unauthorized
        type:
          example: https://httpstatuses.com/401
        instance:
          example: kong:trace:1234567890
        detail:
          example: Invalid credentials
        message:
          type: string
      allOf:
        - $ref: '#/components/schemas/BaseError'
      required:
        - message
        - status
    ForbiddenError:
      type: object
      properties:
        status:
          example: 403
        title:
          example: Forbidden
        type:
          example: https://httpstatuses.com/403
        instance:
          example: kong:trace:1234567890
        detail:
          example: Forbidden
      allOf:
        - $ref: '#/components/schemas/BaseError'
    ConflictError:
      type: object
      properties:
        status:
          example: 409
        title:
          example: Conflict
        type:
          example: https://httpstatuses.com/409
        instance:
          example: kong:trace:1234567890
        detail:
          example: Conflict
      allOf:
        - $ref: '#/components/schemas/BaseError'
    NotFoundError:
      type: object
      properties:
        status:
          example: 404
        title:
          example: Not Found
        type:
          example: https://httpstatuses.com/404
        instance:
          example: kong:trace:1234567890
        detail:
          example: Not found
      allOf:
        - $ref: '#/components/schemas/BaseError'
    ACL:
      allOf:
        - example:
            consumer:
              id: 84a73fb8-50fc-44a7-a4d5-aa17728ee83f
            group: foo
            id: b1f34145-0343-41a4-9602-4c69dec2f269
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
          type: object
          x-speakeasy-entity: GatewayACL
        - $ref: '#/components/schemas/CreateACL'
    BaseService:
      description: >-
        Service entities, as the name implies, are abstractions of each of your
        own upstream services. Examples of Services would be a data
        transformation microservice, a billing API, etc. The main attribute of a
        Service is its URL (where Kong should proxy traffic to), which can be
        set as a single string or by specifying its `protocol`, `host`, `port`
        and `path` individually. Services are associated to Routes (a Service
        can have many Routes associated with it). Routes are entry-points in
        Kong and define rules to match client requests. Once a Route is matched,
        Kong proxies the request to its associated Service. See the [Proxy
        Reference][proxy-reference] for a detailed explanation of how Kong
        proxies traffic.
      required:
        - protocol
        - host
        - port
      type: object
    BasicAuth:
      allOf:
        - example:
            consumer:
              id: 84a73fb8-50fc-44a7-a4d5-aa17728ee83f
            id: b2f34145-0343-41a4-9602-4c69dec2f269
            password: hashedsoopersecretvalue
            username: darius
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
          type: object
          x-speakeasy-entity: GatewayBasicAuth
        - $ref: '#/components/schemas/CreateBasicAuth'
    CACertificate:
      allOf:
        - example:
            cert: |-
              -----BEGIN CERTIFICATE-----
              certificate-content
              -----END CERTIFICATE-----
            id: b2f34145-0343-41a4-9602-4c69dec2f260
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
          type: object
          x-speakeasy-entity: GatewayCACertificate
        - $ref: '#/components/schemas/CreateCACertificate'
    Certificate:
      allOf:
        - example:
            cert: |-
              -----BEGIN CERTIFICATE-----
              certificate-content
              -----END CERTIFICATE-----
            id: b2f34145-0343-41a4-9602-4c69dec2f269
            key: |-
              -----BEGIN PRIVATE KEY-----
              private-key-content
              -----END PRIVATE KEY-----
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
          type: object
          x-speakeasy-entity: GatewayCertificate
        - $ref: '#/components/schemas/CreateCertificate'
    Consumer:
      allOf:
        - example:
            custom_id: '4200'
            id: 8a388226-80e8-4027-a486-25e4f7db5d21
            tags:
              - silver-tier
            username: bob-the-builder
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
          type: object
          x-speakeasy-entity: GatewayConsumer
        - $ref: '#/components/schemas/CreateConsumer'
    ConsumerGroup:
      allOf:
        - properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
          type: object
          x-speakeasy-entity: GatewayConsumerGroup
        - $ref: '#/components/schemas/CreateConsumerGroup'
    CreateACL:
      allOf:
        - $ref: '#/components/schemas/CreateACLWithoutParents'
        - properties:
            consumer:
              additionalProperties: false
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          type: object
    CreateACLWithoutParents:
      properties:
        group:
          type: string
        tags:
          items:
            type: string
          type: array
      type: object
      x-speakeasy-entity: GatewayACL
    CreateBasicAuth:
      allOf:
        - $ref: '#/components/schemas/CreateBasicAuthWithoutParents'
        - properties:
            consumer:
              additionalProperties: false
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          type: object
    CreateBasicAuthWithoutParents:
      properties:
        password:
          type: string
          writeOnly: true
          x-speakeasy-param-sensitive: true
        tags:
          items:
            type: string
          type: array
        username:
          type: string
      type: object
      x-speakeasy-entity: GatewayBasicAuth
    CreateCACertificate:
      allOf:
        - $ref: '#/components/schemas/CreateCACertificateWithoutParents'
        - description: >-
            A CA certificate object represents a trusted CA. These objects are
            used by Kong to verify the validity of a client or server
            certificate.
          required:
            - cert
          type: object
    CreateCACertificateWithoutParents:
      properties:
        cert:
          description: PEM-encoded public certificate of the CA.
          type: string
        cert_digest:
          description: >-
            SHA256 hex digest of the public certificate. This field is read-only
            and it cannot be set by the caller, the value is automatically
            computed.
          type: string
        tags:
          description: >-
            An optional set of strings associated with the Certificate for
            grouping and filtering.
          items:
            type: string
          type: array
      type: object
      x-speakeasy-entity: GatewayCACertificate
    CreateCertificate:
      allOf:
        - $ref: '#/components/schemas/CreateCertificateWithoutParents'
        - description: >-
            A certificate object represents a public certificate, and can be
            optionally paired with the corresponding private key. These objects
            are used by Kong to handle SSL/TLS termination for encrypted
            requests, or for use as a trusted CA store when validating peer
            certificate of client/service. Certificates are optionally
            associated with SNI objects to tie a cert/key pair to one or more
            hostnames. If intermediate certificates are required in addition to
            the main certificate, they should be concatenated together into one
            string according to the following order: main certificate on the
            top, followed by any intermediates.
          required:
            - cert
            - key
          type: object
    CreateCertificateWithoutParents:
      properties:
        cert:
          description: >-
            PEM-encoded public certificate chain of the SSL key pair. This field
            is _referenceable_, which means it can be securely stored as a
            [secret](/gateway/latest/plan-and-deploy/security/secrets-management/getting-started)
            in a vault. References must follow a [specific
            format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).
          type: string
        cert_alt:
          description: >-
            PEM-encoded public certificate chain of the alternate SSL key pair.
            This should only be set if you have both RSA and ECDSA types of
            certificate available and would like Kong to prefer serving using
            ECDSA certs when client advertises support for it. This field is
            _referenceable_, which means it can be securely stored as a
            [secret](/gateway/latest/plan-and-deploy/security/secrets-management/getting-started)
            in a vault. References must follow a [specific
            format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).
          type: string
        key:
          description: >-
            PEM-encoded private key of the SSL key pair. This field is
            _referenceable_, which means it can be securely stored as a
            [secret](/gateway/latest/plan-and-deploy/security/secrets-management/getting-started)
            in a vault. References must follow a [specific
            format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).
          type: string
        key_alt:
          description: >-
            PEM-encoded private key of the alternate SSL key pair. This should
            only be set if you have both RSA and ECDSA types of certificate
            available and would like Kong to prefer serving using ECDSA certs
            when client advertises support for it. This field is
            _referenceable_, which means it can be securely stored as a
            [secret](/gateway/latest/plan-and-deploy/security/secrets-management/getting-started)
            in a vault. References must follow a [specific
            format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).
          type: string
        tags:
          description: >-
            An optional set of strings associated with the Certificate for
            grouping and filtering.
          items:
            type: string
          type: array
      type: object
      x-speakeasy-entity: GatewayCertificate
    CreateConsumer:
      allOf:
        - $ref: '#/components/schemas/CreateConsumerWithoutParents'
        - description: >-
            The Consumer object represents a consumer - or a user - of a
            Service. You can either rely on Kong as the primary datastore, or
            you can map the consumer list with your database to keep consistency
            between Kong and your existing primary datastore.
          type: object
    CreateConsumerGroup:
      allOf:
        - $ref: '#/components/schemas/CreateConsumerGroupWithoutParents'
        - required:
            - name
          type: object
    CreateConsumerGroupWithoutParents:
      properties:
        name:
          type: string
        tags:
          items:
            type: string
          type: array
      type: object
      x-speakeasy-entity: GatewayConsumerGroup
    CreateConsumerWithoutParents:
      properties:
        custom_id:
          description: >-
            Field for storing an existing unique ID for the Consumer - useful
            for mapping Kong with users in your existing database. You must send
            either this field or `username` with the request.
          type: string
        tags:
          description: >-
            An optional set of strings associated with the Consumer for grouping
            and filtering.
          items:
            type: string
          type: array
        username:
          description: >-
            The unique username of the Consumer. You must send either this field
            or `custom_id` with the request.
          type: string
      type: object
      x-speakeasy-entity: GatewayConsumer
    CreateHMACAuth:
      allOf:
        - $ref: '#/components/schemas/CreateHMACAuthWithoutParents'
        - properties:
            consumer:
              additionalProperties: false
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          type: object
    CreateHMACAuthWithoutParents:
      properties:
        secret:
          type: string
        tags:
          items:
            type: string
          type: array
        username:
          type: string
      type: object
      x-speakeasy-entity: GatewayHMACAuth
    CreateJWT:
      allOf:
        - $ref: '#/components/schemas/CreateJWTWithoutParents'
        - properties:
            consumer:
              additionalProperties: false
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          type: object
    CreateJWTWithoutParents:
      properties:
        algorithm:
          default: HS256
          enum:
            - HS256
            - HS384
            - HS512
            - RS256
            - RS384
            - RS512
            - ES256
            - ES384
          type: string
        key:
          type: string
        rsa_public_key:
          type: string
        secret:
          type: string
        tags:
          items:
            type: string
          type: array
      type: object
      x-speakeasy-entity: GatewayJWT
    CreateKey:
      allOf:
        - $ref: '#/components/schemas/CreateKeyWithoutParents'
        - description: >-
            A Key object holds a representation of asymmetric keys in various
            formats. When Kong or a Kong plugin requires a specific public or
            private key to perform certain operations, it can use this entity.
          required:
            - kid
          type: object
    CreateKeyAuth:
      allOf:
        - $ref: '#/components/schemas/CreateKeyAuthWithoutParents'
        - properties:
            consumer:
              additionalProperties: false
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          type: object
    CreateKeyAuthWithoutParents:
      properties:
        key:
          type: string
        tags:
          items:
            type: string
          type: array
      type: object
      x-speakeasy-entity: GatewayKeyAuth
    CreateKeySet:
      allOf:
        - $ref: '#/components/schemas/CreateKeySetWithoutParents'
        - type: object
    CreateKeySetWithoutParents:
      properties:
        name:
          type: string
        tags:
          items:
            type: string
          type: array
      type: object
      x-speakeasy-entity: GatewayKeySet
    CreateKeyWithoutParents:
      properties:
        jwk:
          description: A JSON Web Key represented as a string.
          type: string
        kid:
          description: A unique identifier for a key.
          type: string
        name:
          description: The name to associate with the given keys.
          type: string
        pem:
          description: A keypair in PEM format.
          properties:
            private_key:
              type: string
            public_key:
              type: string
          type: object
        set:
          additionalProperties: false
          description: The id (an UUID) of the key-set with which to associate the key.
          properties:
            id:
              type: string
          type: object
          x-foreign: true
        tags:
          description: >-
            An optional set of strings associated with the Key for grouping and
            filtering.
          items:
            type: string
          type: array
      type: object
      x-speakeasy-entity: GatewayKey
    CreatePlugin:
      allOf:
        - $ref: '#/components/schemas/CreatePluginWithoutParents'
        - description: >-
            A Plugin entity represents a plugin configuration that will be
            executed during the HTTP request/response lifecycle. It is how you
            can add functionalities to Services that run behind Kong, like
            Authentication or Rate Limiting for example. You can find more
            information about how to install and what values each plugin takes
            by visiting the [Kong Hub](https://docs.konghq.com/hub/). When
            adding a Plugin Configuration to a Service, every request made by a
            client to that Service will run said Plugin. If a Plugin needs to be
            tuned to different values for some specific Consumers, you can do so
            by creating a separate plugin instance that specifies both the
            Service and the Consumer, through the `service` and `consumer`
            fields.
          properties:
            consumer:
              additionalProperties: false
              description: >-
                If set, the plugin will activate only for requests where the
                specified has been authenticated. (Note that some plugins can
                not be restricted to consumers this way.). Leave unset for the
                plugin to activate regardless of the authenticated Consumer.
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
            route:
              additionalProperties: false
              description: >-
                If set, the plugin will only activate when receiving requests
                via the specified route. Leave unset for the plugin to activate
                regardless of the Route being used.
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
            service:
              additionalProperties: false
              description: >-
                If set, the plugin will only activate when receiving requests
                via one of the routes belonging to the specified Service. Leave
                unset for the plugin to activate regardless of the Service being
                matched.
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          required:
            - name
            - config
          type: object
    CreatePluginWithoutParents:
      properties:
        enabled:
          default: true
          description: Whether the plugin is applied.
          type: boolean
        name:
          description: >-
            The name of the Plugin that's going to be added. Currently, the
            Plugin must be installed in every Kong instance separately.
          type: string
        protocols:
          default:
            - grpc
            - grpcs
            - http
            - https
          description: >-
            A list of the request protocols that will trigger this plugin. The
            default value, as well as the possible values allowed on this field,
            may change depending on the plugin type. For example, plugins that
            only work in stream mode will only support `"tcp"` and `"tls"`.
          items:
            enum:
              - grpc
              - grpcs
              - http
              - https
              - tcp
              - tls
              - tls_passthrough
              - udp
              - ws
              - wss
            type: string
          type: array
        tags:
          description: >-
            An optional set of strings associated with the Plugin for grouping
            and filtering.
          items:
            type: string
          type: array
      type: object
      x-speakeasy-entity: GatewayPlugin
    CreateRoute:
      allOf:
        - $ref: '#/components/schemas/CreateRouteWithoutParents'
        - description: >-
            Route entities define rules to match client requests. Each Route is
            associated with a Service, and a Service may have multiple Routes
            associated to it. Every request matching a given Route will be
            proxied to its associated Service. The combination of Routes and
            Services (and the separation of concerns between them) offers a
            powerful routing mechanism with which it is possible to define
            fine-grained entry-points in Kong leading to different upstream
            services of your infrastructure. You need at least one matching rule
            that applies to the protocol being matched by the Route.
          properties:
            service:
              additionalProperties: false
              description: >-
                The Service this Route is associated to. This is where the Route
                proxies traffic to.
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          type: object
    CreateRouteWithoutParents:
      properties:
        destinations:
          description: >-
            A list of IP destinations of incoming connections that match this
            Route when using stream routing. Each entry is an object with fields
            "ip" (optionally in CIDR range notation) and/or "port".
          items:
            properties:
              ip:
                type: string
              port:
                type: integer
            type: object
          type: array
        headers:
          additionalProperties: true
          description: >-
            One or more lists of values indexed by header name that will cause
            this Route to match if present in the request. The `Host` header
            cannot be used with this attribute: hosts should be specified using
            the `hosts` attribute. When `headers` contains only one value and
            that value starts with the special prefix `~*`, the value is
            interpreted as a regular expression.
          type: object
        hosts:
          description: >-
            A list of domain names that match this Route. Note that the hosts
            value is case sensitive.
          items:
            type: string
          type: array
        https_redirect_status_code:
          default: 426
          description: >-
            The status code Kong responds with when all properties of a Route
            match except the protocol i.e. if the protocol of the request is
            `HTTP` instead of `HTTPS`. `Location` header is injected by Kong if
            the field is set to 301, 302, 307 or 308. Note: This config applies
            only if the Route is configured to only accept the `https` protocol.
          enum:
            - 426
            - 301
            - 302
            - 307
            - 308
          type: integer
        methods:
          description: A list of HTTP methods that match this Route.
          type: array
          items:
            type: string
        name:
          description: >-
            The name of the Route. Route names must be unique, and they are case
            sensitive. For example, there can be two different Routes named
            "test" and "Test".
          type: string
        path_handling:
          default: v0
          description: >-
            Controls how the Service path, Route path and requested path are
            combined when sending a request to the upstream. See above for a
            detailed description of each behavior.
          enum:
            - v0
            - v1
          type: string
        paths:
          description: A list of paths that match this Route.
          items:
            type: string
          type: array
        preserve_host:
          default: false
          description: >-
            When matching a Route via one of the `hosts` domain names, use the
            request `Host` header in the upstream request headers. If set to
            `false`, the upstream `Host` header will be that of the Service's
            `host`.
          type: boolean
        protocols:
          default:
            - http
            - https
          description: >-
            An array of the protocols this Route should allow. See the [Route
            Object](#route-object) section for a list of accepted protocols.
            When set to only `"https"`, HTTP requests are answered with an
            upgrade error. When set to only `"http"`, HTTPS requests are
            answered with an error.
          items:
            enum:
              - grpc
              - grpcs
              - http
              - https
              - tcp
              - tls
              - tls_passthrough
              - udp
              - ws
              - wss
            type: string
          type: array
        regex_priority:
          default: 0
          description: >-
            A number used to choose which route resolves a given request when
            several routes match it using regexes simultaneously. When two
            routes match the path and have the same `regex_priority`, the older
            one (lowest `created_at`) is used. Note that the priority for
            non-regex routes is different (longer non-regex routes are matched
            before shorter ones).
          type: integer
        request_buffering:
          default: true
          description: >-
            Whether to enable request body buffering or not. With HTTP 1.1, it
            may make sense to turn this off on services that receive data with
            chunked transfer encoding.
          type: boolean
        response_buffering:
          default: true
          description: >-
            Whether to enable response body buffering or not. With HTTP 1.1, it
            may make sense to turn this off on services that send data with
            chunked transfer encoding.
          type: boolean
        snis:
          description: A list of SNIs that match this Route when using stream routing.
          type: array
        sources:
          description: >-
            A list of IP sources of incoming connections that match this Route
            when using stream routing. Each entry is an object with fields "ip"
            (optionally in CIDR range notation) and/or "port".
          items:
            properties:
              ip:
                type: string
              port:
                type: integer
            type: object
          type: array
        strip_path:
          default: true
          description: >-
            When matching a Route via one of the `paths`, strip the matching
            prefix from the upstream request URL.
          type: boolean
        tags:
          description: >-
            An optional set of strings associated with the Route for grouping
            and filtering.
          items:
            type: string
          type: array
      type: object
      x-speakeasy-entity: GatewayRoute
    CreateSNI:
      allOf:
        - $ref: '#/components/schemas/CreateSNIWithoutParents'
        - description: >-
            An SNI object represents a many-to-one mapping of hostnames to a
            certificate. That is, a certificate object can have many hostnames
            associated with it; when Kong receives an SSL request, it uses the
            SNI field in the Client Hello to lookup the certificate object based
            on the SNI associated with the certificate.
          properties:
            certificate:
              additionalProperties: false
              description: >-
                The id (a UUID) of the certificate with which to associate the
                SNI hostname. The Certificate must have a valid private key
                associated with it to be used by the SNI object.
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          required:
            - name
            - certificate
          type: object
    CreateSNIWithoutParents:
      properties:
        name:
          description: The SNI name to associate with the given certificate.
          type: string
        tags:
          description: >-
            An optional set of strings associated with the SNIs for grouping and
            filtering.
          items:
            type: string
          type: array
      type: object
      x-speakeasy-entity: GatewaySNI
    CreateService:
      allOf:
        - properties:
            url:
              description: >-
                Helper field to set `protocol`, `host`, `port` and `path` using
                a URL. This field is write-only and is not returned in
                responses.
              type: string
          type: object
          x-speakeasy-entity: GatewayService
        - $ref: '#/components/schemas/CreateServiceWithoutParents'
    CreateServiceWithoutParents:
      properties:
        ca_certificates:
          description: >-
            Array of `CA Certificate` object UUIDs that are used to build the
            trust store while verifying upstream server's TLS certificate. If
            set to `null` when Nginx default is respected. If default CA list in
            Nginx are not specified and TLS verification is enabled, then
            handshake with upstream server will always fail (because no CA are
            trusted).
          items:
            type: string
          type: array
        client_certificate:
          additionalProperties: false
          description: >-
            Certificate to be used as client certificate while TLS handshaking
            to the upstream server.
          properties:
            id:
              type: string
          type: object
          x-foreign: true
        connect_timeout:
          default: 60000
          description: >-
            The timeout in milliseconds for establishing a connection to the
            upstream server.
          type: integer
        enabled:
          default: true
          description: >-
            Whether the Service is active. If set to `false`, the proxy behavior
            will be as if any routes attached to it do not exist (404). Default:
            `true`.
          type: boolean
        host:
          description: >-
            The host of the upstream server. Note that the host value is case
            sensitive.
          type: string
        name:
          description: The Service name.
          type: string
        path:
          description: The path to be used in requests to the upstream server.
          type: string
        port:
          default: 80
          description: The upstream server port.
          type: integer
        protocol:
          default: http
          description: The protocol used to communicate with the upstream.
          enum:
            - grpc
            - grpcs
            - http
            - https
            - tcp
            - tls
            - tls_passthrough
            - udp
            - ws
            - wss
          type: string
        read_timeout:
          default: 60000
          description: >-
            The timeout in milliseconds between two successive read operations
            for transmitting a request to the upstream server.
          type: integer
        retries:
          default: 5
          description: The number of retries to execute upon failure to proxy.
          type: integer
        tags:
          description: >-
            An optional set of strings associated with the Service for grouping
            and filtering.
          items:
            type: string
          type: array
        tls_verify:
          description: >-
            Whether to enable verification of upstream server TLS certificate.
            If set to `null`, then the Nginx default is respected.
          type: boolean
        tls_verify_depth:
          description: >-
            Maximum depth of chain while verifying Upstream server's TLS
            certificate. If set to `null`, then the Nginx default is respected.
          type: integer
        write_timeout:
          default: 60000
          description: >-
            The timeout in milliseconds between two successive write operations
            for transmitting a request to the upstream server.
          type: integer
      type: object
      x-speakeasy-entity: GatewayService
    CreateTarget:
      allOf:
        - $ref: '#/components/schemas/CreateTargetWithoutParents'
        - description: >-
            A target is an ip address/hostname with a port that identifies an
            instance of a backend service. Every upstream can have many targets,
            and the targets can be dynamically added, modified, or deleted.
            Changes take effect on the fly. To disable a target, post a new one
            with `weight=0`; alternatively, use the `DELETE` convenience method
            to accomplish the same. The current target object definition is the
            one with the latest `created_at`.
          properties:
            upstream:
              additionalProperties: false
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          type: object
    CreateTargetWithoutParents:
      properties:
        tags:
          description: >-
            An optional set of strings associated with the Target for grouping
            and filtering.
          items:
            type: string
          type: array
        target:
          description: >-
            The target address (ip or hostname) and port. If the hostname
            resolves to an SRV record, the `port` value will be overridden by
            the value from the DNS record.
          type: string
        weight:
          default: 100
          description: >-
            The weight this target gets within the upstream loadbalancer
            (`0`-`65535`). If the hostname resolves to an SRV record, the
            `weight` value will be overridden by the value from the DNS record.
          type: integer
      type: object
      x-speakeasy-entity: GatewayTarget
    CreateUpstream:
      allOf:
        - $ref: '#/components/schemas/CreateUpstreamWithoutParents'
        - description: >-
            The upstream object represents a virtual hostname and can be used to
            loadbalance incoming requests over multiple services (targets). So
            for example an upstream named `service.v1.xyz` for a Service object
            whose `host` is `service.v1.xyz`. Requests for this Service would be
            proxied to the targets defined within the upstream. An upstream also
            includes a [health checker][healthchecks], which is able to enable
            and disable targets based on their ability or inability to serve
            requests. The configuration for the health checker is stored in the
            upstream object, and applies to all of its targets.
          required:
            - name
          type: object
    CreateUpstreamWithoutParents:
      properties:
        algorithm:
          default: round-robin
          description: Which load balancing algorithm to use.
          enum:
            - consistent-hashing
            - least-connections
            - round-robin
          type: string
        client_certificate:
          additionalProperties: false
          description: >-
            If set, the certificate to be used as client certificate while TLS
            handshaking to the upstream server.
          properties:
            id:
              type: string
          type: object
          x-foreign: true
        hash_fallback:
          default: none
          description: >-
            What to use as hashing input if the primary `hash_on` does not
            return a hash (eg. header is missing, or no Consumer identified).
            Not available if `hash_on` is set to `cookie`.
          enum:
            - none
            - consumer
            - ip
            - header
            - cookie
            - path
            - query_arg
            - uri_capture
          type: string
        hash_fallback_header:
          description: >-
            The header name to take the value from as hash input. Only required
            when `hash_fallback` is set to `header`.
          type: string
        hash_fallback_query_arg:
          description: >-
            The name of the query string argument to take the value from as hash
            input. Only required when `hash_fallback` is set to `query_arg`.
          type: string
        hash_fallback_uri_capture:
          description: >-
            The name of the route URI capture to take the value from as hash
            input. Only required when `hash_fallback` is set to `uri_capture`.
          type: string
        hash_on:
          default: none
          description: >-
            What to use as hashing input. Using `none` results in a
            weighted-round-robin scheme with no hashing.
          enum:
            - none
            - consumer
            - ip
            - header
            - cookie
            - path
            - query_arg
            - uri_capture
          type: string
        hash_on_cookie:
          description: >-
            The cookie name to take the value from as hash input. Only required
            when `hash_on` or `hash_fallback` is set to `cookie`. If the
            specified cookie is not in the request, Kong will generate a value
            and set the cookie in the response.
          type: string
        hash_on_cookie_path:
          default: /
          description: >-
            The cookie path to set in the response headers. Only required when
            `hash_on` or `hash_fallback` is set to `cookie`.
          type: string
        hash_on_header:
          description: >-
            The header name to take the value from as hash input. Only required
            when `hash_on` is set to `header`.
          type: string
        hash_on_query_arg:
          description: >-
            The name of the query string argument to take the value from as hash
            input. Only required when `hash_on` is set to `query_arg`.
          type: string
        hash_on_uri_capture:
          description: >-
            The name of the route URI capture to take the value from as hash
            input. Only required when `hash_on` is set to `uri_capture`.
          type: string
        healthchecks:
          properties:
            active:
              properties:
                concurrency:
                  default: 10
                  type: integer
                headers:
                  additionalProperties: true
                  type: object
                healthy:
                  properties:
                    http_statuses:
                      default:
                        - 200
                        - 302
                      items:
                        type: integer
                      type: array
                    interval:
                      default: 0
                      type: number
                    successes:
                      default: 0
                      type: integer
                  type: object
                http_path:
                  default: /
                  type: string
                https_sni:
                  type: string
                https_verify_certificate:
                  default: true
                  type: boolean
                timeout:
                  default: 1
                  type: number
                type:
                  default: http
                  enum:
                    - tcp
                    - http
                    - https
                    - grpc
                    - grpcs
                  type: string
                unhealthy:
                  properties:
                    http_failures:
                      default: 0
                      type: integer
                    http_statuses:
                      default:
                        - 429
                        - 404
                        - 500
                        - 501
                        - 502
                        - 503
                        - 504
                        - 505
                      items:
                        type: integer
                      type: array
                    interval:
                      default: 0
                      type: number
                    tcp_failures:
                      default: 0
                      type: integer
                    timeouts:
                      default: 0
                      type: integer
                  type: object
              type: object
            passive:
              properties:
                healthy:
                  properties:
                    http_statuses:
                      default:
                        - 200
                        - 201
                        - 202
                        - 203
                        - 204
                        - 205
                        - 206
                        - 207
                        - 208
                        - 226
                        - 300
                        - 301
                        - 302
                        - 303
                        - 304
                        - 305
                        - 306
                        - 307
                        - 308
                      items:
                        type: integer
                      type: array
                    successes:
                      default: 0
                      type: integer
                  type: object
                type:
                  default: http
                  enum:
                    - tcp
                    - http
                    - https
                    - grpc
                    - grpcs
                  type: string
                unhealthy:
                  properties:
                    http_failures:
                      default: 0
                      type: integer
                    http_statuses:
                      default:
                        - 429
                        - 500
                        - 503
                      items:
                        type: integer
                      type: array
                    tcp_failures:
                      default: 0
                      type: integer
                    timeouts:
                      default: 0
                      type: integer
                  type: object
              type: object
            threshold:
              default: 0
              type: number
          type: object
        host_header:
          description: >-
            The hostname to be used as `Host` header when proxying requests
            through Kong.
          type: string
        name:
          description: This is a hostname, which must be equal to the `host` of a Service.
          type: string
        slots:
          default: 10000
          description: >-
            The number of slots in the load balancer algorithm. If `algorithm`
            is set to `round-robin`, this setting determines the maximum number
            of slots. If `algorithm` is set to `consistent-hashing`, this
            setting determines the actual number of slots in the algorithm.
            Accepts an integer in the range `10`-`65536`.
          type: integer
        tags:
          description: >-
            An optional set of strings associated with the Upstream for grouping
            and filtering.
          items:
            type: string
          type: array
        use_srv_name:
          default: false
          description: >-
            If set, the balancer will use SRV hostname(if DNS Answer has SRV
            record) as the proxy upstream `Host`.
          type: boolean
      type: object
      x-speakeasy-entity: GatewayUpstream
    CreateVault:
      allOf:
        - $ref: '#/components/schemas/CreateVaultWithoutParents'
        - description: >-
            Vault entities are used to configure different Vault connectors.
            Examples of Vaults are Environment Variables, Hashicorp Vault and
            AWS Secrets Manager. Configuring a Vault allows referencing the
            secrets with other entities. For example a certificate entity can
            store a reference to a certificate and key, stored in a vault,
            instead of storing the certificate and key within the entity. This
            allows a proper separation of secrets and configuration and prevents
            secret sprawl.
          type: object
    CreateVaultWithoutParents:
      properties:
        config:
          description: >-
            The configuration properties for the Vault which can be found on the
            vaults' documentation page.
          type: object
          x-speakeasy-type-override: any
        description:
          description: The description of the Vault entity.
          type: string
        name:
          description: >-
            The name of the Vault that's going to be added. Currently, the Vault
            implementation must be installed in every Kong instance.
          type: string
        prefix:
          description: >-
            The unique prefix (or identifier) for this Vault configuration. The
            prefix is used to load the right Vault configuration and
            implementation when referencing secrets with the other entities.
          type: string
        tags:
          description: >-
            An optional set of strings associated with the Vault for grouping
            and filtering.
          items:
            type: string
          type: array
      type: object
      x-speakeasy-entity: GatewayVault
    HMACAuth:
      allOf:
        - example:
            consumer:
              id: 84a73fb8-50fc-44a7-a4d5-aa17728ee83f
            id: 75695322-e8a0-4109-aed4-5416b0308d85
            secret: wQazJ304DW5huJklHgUfjfiSyCyTAEDZ
            username: xerxes
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
          type: object
          x-speakeasy-entity: GatewayHMACAuth
        - $ref: '#/components/schemas/CreateHMACAuth'
    JWT:
      allOf:
        - example:
            algorithm: HS256
            consumer:
              id: 84a73fb8-50fc-44a7-a4d5-aa17728ee83f
            id: 75695322-e8a0-4109-aed4-5416b0308d85
            key: YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz
            secret: C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
          type: object
          x-speakeasy-entity: GatewayJWT
        - $ref: '#/components/schemas/CreateJWT'
    Key:
      allOf:
        - example:
            id: d958f66b-8e99-44d2-b0b4-edd5bbf24658
            jwk: '{"alg":"RSA",  "kid": "42",  ...}'
            kid: '42'
            name: a-key
            pem:
              private_key: '-----BEGIN'
              public_key: '-----BEGIN'
            set:
              id: b86b331c-dcd0-4b3e-97ce-47c5a9543031
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
            updated_at:
              description: Unix epoch when the resource was last updated.
              type: integer
          type: object
          x-speakeasy-entity: GatewayKey
        - $ref: '#/components/schemas/CreateKey'
    KeyAuth:
      allOf:
        - example:
            consumer:
              id: 84a73fb8-50fc-44a7-a4d5-aa17728ee83f
            id: b2f34145-0343-41a4-9602-4c69dec2f269
            key: IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
          type: object
          x-speakeasy-entity: GatewayKeyAuth
        - $ref: '#/components/schemas/CreateKeyAuth'
    KeySet:
      allOf:
        - example:
            id: b58c7d9d-e54f-444c-b24d-cdfc4159f61e
            name: example-key-set
            tags:
              - idp-keys
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
            updated_at:
              description: Unix epoch when the resource was last updated.
              type: integer
          type: object
          x-speakeasy-entity: GatewayKeySet
        - $ref: '#/components/schemas/CreateKeySet'
    Plugin:
      allOf:
        - example:
            config:
              anonymous: null
              hide_credentials: false
              key_in_body: false
              key_in_header: true
              key_in_query: true
              key_names:
                - apikey
              run_on_preflight: true
            enabled: true
            id: 3fd1eea1-885a-4011-b986-289943ff8177
            name: key-auth
            protocols:
              - grpc
              - grpcs
              - http
              - https
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
          required:
            - enabled
            - protocols
          type: object
          x-speakeasy-entity: GatewayPlugin
        - $ref: '#/components/schemas/CreatePlugin'
    Route:
      allOf:
        - example:
            hosts:
              - foo.example.com
              - foo.example.us
            id: 56c4566c-14cc-4132-9011-4139fcbbe50a
            name: example-route
            paths:
              - /v1
              - /v2
            service:
              id: bd380f99-659d-415e-b0e7-72ea05df3218
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
            updated_at:
              description: Unix epoch when the resource was last updated.
              type: integer
          type: object
          x-speakeasy-entity: GatewayRoute
        - $ref: '#/components/schemas/CreateRoute'
    SNI:
      allOf:
        - example:
            certificate:
              id: bd380f99-659d-415e-b0e7-72ea05df3218
            id: 36c4566c-14cc-4132-9011-4139fcbbe50a
            name: some.example.org
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
          type: object
          x-speakeasy-entity: GatewaySNI
        - $ref: '#/components/schemas/CreateSNI'
    Service:
      allOf:
        - example:
            host: example.internal
            id: 49fd316e-c457-481c-9fc7-8079153e4f3c
            name: example-service
            path: /
            port: 80
            protocol: http
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
            updated_at:
              description: Unix epoch when the resource was last updated.
              type: integer
          required:
            - connect_timeout
            - created_at
            - enabled
            - host
            - id
            - name
            - path
            - port
            - protocol
            - read_timeout
            - retries
            - updated_at
            - write_timeout
          type: object
          x-speakeasy-entity: GatewayService
        - $ref: '#/components/schemas/BaseService'
    Target:
      allOf:
        - example:
            id: 089292a7-ba3d-4d88-acf0-97b4b2e2621a
            target: 203.0.113.42
            upstream:
              id: 5f1d7e76-2fed-4806-a6af-869984f025cb
            weight: 100
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: number
            id:
              type: string
          type: object
          x-speakeasy-entity: GatewayTarget
        - $ref: '#/components/schemas/CreateTarget'
    Upstream:
      allOf:
        - example:
            algorithm: round-robin
            hash_fallback: none
            hash_on: none
            hash_on_cookie_path: /
            healthchecks:
              active:
                concurrency: 10
                healthy:
                  http_statuses:
                    - 200
                    - 302
                  interval: 0
                  successes: 0
                http_path: /
                https_verify_certificate: true
                timeout: 1
                type: http
                unhealthy:
                  http_failures: 0
                  http_statuses:
                    - 429
                    - 404
                    - 500
                    - 501
                    - 502
                    - 503
                    - 504
                    - 505
                  interval: 0
                  tcp_failures: 0
                  timeouts: 0
              passive:
                healthy:
                  http_statuses:
                    - 200
                    - 201
                    - 202
                    - 203
                    - 204
                    - 205
                    - 206
                    - 207
                    - 208
                    - 226
                    - 300
                    - 301
                    - 302
                    - 303
                    - 304
                    - 305
                    - 306
                    - 307
                    - 308
                  successes: 0
                type: http
                unhealthy:
                  http_failures: 0
                  http_statuses:
                    - 429
                    - 500
                    - 503
                  tcp_failures: 0
                  timeouts: 0
              threshold: 0
            id: 6eed5e9c-5398-4026-9a4c-d48f18a2431e
            name: api.example.internal
            slots: 10000
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
          type: object
          x-speakeasy-entity: GatewayUpstream
        - $ref: '#/components/schemas/CreateUpstream'
    Vault:
      allOf:
        - example:
            config:
              prefix: ENV_PREFIX
            description: environment variable based vault
            id: 2747d1e5-8246-4f65-a939-b392f1ee17f8
            name: env
            tags:
              - foo
              - bar
          properties:
            created_at:
              description: Unix epoch when the resource was created.
              type: integer
            id:
              type: string
            updated_at:
              description: Unix epoch when the resource was last updated.
              type: integer
          type: object
          x-speakeasy-entity: GatewayVault
        - $ref: '#/components/schemas/CreateVault'
    MeshControlPlaneLabels:
      title: Labels
      type: object
      nullable: true
      example:
        test: 'true'
      description: >-
        Labels to facilitate tagged search on control planes. Keys must be of
        length 1-63 characters.
      maxProperties: 10
      additionalProperties:
        type: string
        pattern: ^[a-z0-9A-Z]{1}([a-z0-9A-Z\-\.\_]*[a-z0-9A-Z]+)?$
        minLength: 1
        maxLength: 63
        nullable: true
    MeshControlPlane:
      type: object
      title: ControlPlane
      description: a control plane
      required:
        - id
        - name
        - updated_at
        - created_at
      properties:
        id:
          type: string
          format: uuid
          description: ID of the control plane.
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
          readOnly: true
        name:
          type: string
          example: Test control plane
          description: The name of the control plane.
          maxLength: 100
        description:
          type: string
          example: A control plane to handle traffic on development environment.
          maxLength: 250
        labels:
          $ref: '#/components/schemas/MeshControlPlaneLabels'
        created_at:
          type: string
          format: date-time
          example: '2023-01-11T02:30:42.227Z'
        updated_at:
          type: string
          format: date-time
          example: '2023-01-11T02:30:42.227Z'
    CreateMeshControlPlaneRequest:
      type: object
      title: CreateMeshControlPlaneRequest
      description: a payload to create a control plane
      required:
        - name
      additionalProperties: false
      properties:
        name:
          type: string
          example: Test control plane
          description: The name of the control plane.
          minLength: 1
          maxLength: 100
        description:
          type: string
          example: A control plane to handle traffic on development environment.
          maxLength: 250
        labels:
          $ref: '#/components/schemas/MeshControlPlaneLabels'
    UpdateMeshControlPlaneRequest:
      type: object
      title: UpdateMeshControlPlaneRequest
      description: a payload to update the control plane
      properties:
        name:
          type: string
          example: Test control plane
          description: The name of the control plane.
          maxLength: 100
        description:
          type: string
          example: A control plane to handle traffic on development environment.
          maxLength: 250
        labels:
          $ref: '#/components/schemas/MeshControlPlaneLabels'
    APIProductLabels:
      title: Labels
      type: object
      description: >
        description: A maximum of 5 user-defined labels are allowed on this
        resource.

        Keys must not start with kong, konnect, insomnia, mesh, kic or _, which
        are reserved for Kong.

        Keys are case-sensitive.
      additionalProperties:
        type: string
        pattern: ^[a-z0-9A-Z]{1}([a-z0-9A-Z\-._]*[a-z0-9A-Z]+)?$
        minLength: 1
        maxLength: 63
      default: {}
    APIProduct:
      x-speakeasy-entity: ApiProduct
      title: API Product
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - description
        - portal_ids
        - created_at
        - updated_at
        - labels
        - version_count
      properties:
        id:
          type: string
          format: uuid
          example: b9e81174-b5bb-4638-a3c3-8afe61a0abf8
          description: The API product ID.
          readOnly: true
        name:
          type: string
          description: The name of the API product
          example: My Name
        description:
          type: string
          nullable: true
          description: The description of the API product
          example: MyDescription
        portal_ids:
          type: array
          nullable: false
          uniqueItems: true
          minItems: 0
          description: >-
            The list of portal identifiers which this API product is published
            to
          items:
            type: string
            format: uuid
            example: 25a2624c-49fc-4764-99e1-224ed819f200
        version_count:
          type: number
          example: 10
          description: The number of product versions attached to this API product
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        labels:
          $ref: '#/components/schemas/APIProductLabels'
    AuthStrategySyncError:
      type: object
      additionalProperties: false
      required:
        - message
      properties:
        plugin_name:
          type: string
        value:
          type: string
          enum:
            - plugin_sync_error_comm
            - plugin_sync_error_unknown
            - plugin_sync_error_fatal
            - plugin_sync_error_updating_plugin_refs
        message:
          type: string
        info:
          type: object
          additionalProperties: true
          properties:
            details:
              type: array
              items:
                type: object
                additionalProperties: true
                properties:
                  type:
                    type: string
                  message:
                    type: array
                    items:
                      type: string
      example:
        plugin_name: konnect-application-auth
        value: plugin_sync_error_comm
        message: Unable to connect to the control plane to update plugin
    AuthStrategySyncErrors:
      x-speakeasy-terraform-ignore: true
      readOnly: true
      type: array
      nullable: true
      description: >-
        The set of errors encountered when trying to sync the auth strategies on
        the version
      items:
        $ref: '#/components/schemas/AuthStrategySyncError'
      example:
        - plugin_name: konnect-application-auth
          value: plugin_sync_error_comm
          message: Unable to connect to the control plane to update plugin
    APIProductVersion:
      x-speakeasy-entity: ApiProductVersion
      title: API Product Version
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - gateway_service
        - publish_status
        - deprecated
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          example: 9f5061ce-78f6-4452-9108-ad7c02821fd5
          description: The API product version identifier.
          readOnly: true
        name:
          type: string
          description: The version of the API product
          example: FirstVersion
        gateway_service:
          type: object
          nullable: true
          additionalProperties: false
          required:
            - id
            - control_plane_id
          properties:
            id:
              type: string
              format: uuid
              nullable: true
              description: >-
                The identifier of a gateway service associated with the version
                of the API product.
              example: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
            runtime_group_id:
              type: string
              format: uuid
              deprecated: true
              description: >-
                This field is deprecated, please use `control_plane_id` instead.
                The identifier of the control plane that the gateway service
                resides in
              example: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
            control_plane_id:
              type: string
              format: uuid
              description: >-
                The identifier of the control plane that the gateway service
                resides in
              example: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
        publish_status:
          x-speakeasy-terraform-ignore: true
          type: string
          description: The publish status of the API product version
          enum:
            - unpublished
            - published
          example: unpublished
        deprecated:
          type: boolean
          description: Indicates if this API product version is deprecated
          example: false
        auth_strategy_sync_errors:
          $ref: '#/components/schemas/AuthStrategySyncErrors'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    CreateAPIProductDTO:
      x-speakeasy-entity: ApiProduct
      title: Create API Product Request
      description: The request schema to create an API product.
      type: object
      additionalProperties: false
      required:
        - name
        - portal_ids
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          example: API Product
          description: The name of the API product.
        description:
          type: string
          nullable: true
          example: Text describing the API product
          description: The description of the API product.
          default: null
        labels:
          $ref: '#/components/schemas/APIProductLabels'
        portal_ids:
          type: array
          nullable: false
          uniqueItems: true
          minItems: 0
          description: >-
            The list of portal identifiers which this API product should be
            published to
          items:
            type: string
            format: uuid
            example: 25a2624c-49fc-4764-99e1-224ed819f200
    UpdateAPIProductDTO:
      x-speakeasy-entity: ApiProduct
      title: Update API Product Request
      description: The request schema for updating an API product.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          example: API Product
          description: The name for the API product.
        description:
          type: string
          nullable: true
          example: Text describing the API product
          description: The description of the API product.
        labels:
          $ref: '#/components/schemas/APIProductLabels'
        portal_ids:
          type: array
          nullable: false
          uniqueItems: true
          minItems: 0
          description: >-
            The list of portal identifiers which this API product should be
            published to
          items:
            type: string
            format: uuid
            example: 25a2624c-49fc-4764-99e1-224ed819f200
      required:
        - portal_ids
    CreateAPIProductVersionDTO:
      title: Create API Product Version Request
      description: The request schema to create a version of an API product.
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        name:
          type: string
          nullable: false
          minLength: 1
          example: v1
          description: The version name of the API product version.
        publish_status:
          type: string
          nullable: false
          description: The publish status of the API product version.
          enum:
            - unpublished
            - published
          example: unpublished
          default: unpublished
        deprecated:
          type: boolean
          nullable: false
          description: Indicates if the version of the API product is deprecated.
          example: false
          default: false
        gateway_service:
          oneOf:
            - $ref: '#/components/schemas/GatewayServicePayload'
            - $ref: '#/components/schemas/LegacyGatewayServicePayload'
          $ref: '#/components/schemas/GatewayServicePayload'
    UpdateAPIProductVersionDTO:
      title: Update API Product Version Request
      description: The request schema for updating a version of an API product.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          minLength: 1
          example: v1
          description: The version name of the API product version.
        publish_status:
          type: string
          description: The publish status of the API product version.
          enum:
            - unpublished
            - published
          example: unpublished
        deprecated:
          type: boolean
          description: Indicates if the version of the API product is deprecated.
          example: false
        notify:
          type: boolean
          description: >
            When set to `true`, and all the following conditions are true:

            - version of the API product deprecation has changed from `false` ->
            `true`

            - version of the API product is published


            then consumers of the now deprecated verion of the API product will
            be notified.
          example: true
        gateway_service:
          anyOf:
            - $ref: '#/components/schemas/GatewayServicePayload'
            - $ref: '#/components/schemas/LegacyGatewayServicePayload'
          $ref: '#/components/schemas/GatewayServicePayload'
    LegacyGatewayServicePayload:
      type: object
      nullable: true
      additionalProperties: false
      required:
        - id
        - runtime_group_id
      properties:
        id:
          type: string
          format: uuid
          description: >-
            The identifier of a gateway service associated with the version of
            the API product.
          example: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
        runtime_group_id:
          type: string
          format: uuid
          deprecated: true
          description: >-
            The identifier of the control plane that the gateway service resides
            in
          example: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
    GatewayServicePayload:
      type: object
      nullable: true
      additionalProperties: false
      required:
        - id
        - control_plane_id
      properties:
        id:
          type: string
          format: uuid
          description: >-
            The identifier of a gateway service associated with the version of
            the API product.
          example: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
        control_plane_id:
          type: string
          format: uuid
          description: >-
            The identifier of the control plane that the gateway service resides
            in
          example: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
    CreatedAt:
      type: string
      format: date-time
      example: '2022-11-04T20:10:06.927Z'
      description: An ISO-8601 timestamp representation of entity creation date.
      readOnly: true
    UpdatedAt:
      type: string
      format: date-time
      example: '2022-11-04T20:10:06.927Z'
      description: An ISO-8601 timestamp representation of entity update date.
      readOnly: true
    UnsupportedMediaTypeError:
      type: object
      properties:
        status:
          example: 415
        title:
          example: UnsupportedMediaType
        type:
          example: https://httpstatuses.com/415
        instance:
          example: kong:trace:1234567890
        detail:
          example: UnsupportedMediaType
      allOf:
        - $ref: '#/components/schemas/BaseError'
    AuthStrategy:
      type: object
      oneOf:
        - $ref: '#/components/schemas/AuthStrategyKeyAuth'
        - $ref: '#/components/schemas/AuthStrategyClientCredentials'
      discriminator:
        propertyName: credential_type
        mapping:
          key_auth: '#/components/schemas/AuthStrategyKeyAuth'
          client_credentials: '#/components/schemas/AuthStrategyClientCredentials'
          self_managed_client_credentials: '#/components/schemas/AuthStrategyClientCredentials'
    PortalClaimMappings:
      title: PortalClaimMappings
      description: Mappings from a portal developer atribute to an Identity Provider claim.
      type: object
      minProperties: 0
      maxProperties: 3
      properties:
        name:
          type: string
          example: name
          default: name
        email:
          type: string
          example: email
          default: email
        groups:
          type: string
          default: groups
          example: custom-group-claim
      example:
        name: name
        email: email
        groups: custom-group-claim
    PortalOIDCConfig:
      title: PortalOIDCConfig
      description: Configuration properties for an OpenID Connect Identity Provider.
      type: object
      properties:
        issuer:
          type: string
          example: https://identity.example.com/v2
        client_id:
          type: string
          example: x7id0o42lklas0blidl2
        scopes:
          type: array
          default:
            - email
            - openid
            - profile
          items:
            type: string
            default: openid
          example:
            - email
            - openid
            - profile
        claim_mappings:
          $ref: '#/components/schemas/PortalClaimMappings'
      required:
        - issuer
        - client_id
      example:
        issuer: https://identity.example.com/v2
        client_id: x7id0o42lklas0blidl2
        scopes:
          - email
          - openid
          - profile
        claim_mappings:
          name: name
          email: email
          groups: custom-group-claim
    PortalAuthenticationSettingsResponse:
      x-speakeasy-entity: PortalAuth
      title: PortalAuthenticationSettingsResponse
      description: The developer authentication settings for a portal.
      type: object
      properties:
        basic_auth_enabled:
          type: boolean
          example: true
          description: The organization has basic auth enabled.
        oidc_auth_enabled:
          type: boolean
          example: false
          description: The organization has OIDC disabled.
        oidc_team_mapping_enabled:
          type: boolean
          example: true
          description: IdP groups determine the Portal Teams a developer has.
        konnect_mapping_enabled:
          type: boolean
          example: false
          description: A Konnect Identity Admin assigns teams to a developer.
        oidc_config:
          $ref: '#/components/schemas/PortalOIDCConfig'
      required:
        - basic_auth_enabled
        - konnect_mapping_enabled
        - oidc_auth_enabled
        - oidc_team_mapping_enabled
      example:
        basic_auth_enabled: true
        oidc_auth_enabled: true
        oidc_team_mapping_enabled: true
        konnect_mapping_enabled: false
        oidc_config:
          issuer: https://identity.example.com/v2
          client_id: x7id0o42lklas0blidl2
          scopes:
            - email
            - openid
            - profile
          claim_mappings:
            name: name
            email: email
            groups: custom-group-claim
    PortalAuthenticationSettingsUpdateRequest:
      x-speakeasy-entity: PortalAuth
      title: PortalAuthenticationSettingsUpdateRequest
      description: Properties to update a portal's developer auth settings.
      type: object
      properties:
        basic_auth_enabled:
          type: boolean
          example: true
          description: The organization has basic auth enabled.
        oidc_auth_enabled:
          type: boolean
          example: false
          description: The organization has OIDC disabled.
        oidc_team_mapping_enabled:
          type: boolean
          example: true
          description: >-
            Whether IdP groups determine the Konnect Portal teams a developer
            has.
        konnect_mapping_enabled:
          type: boolean
          example: false
          description: Whether a Konnect Identity Admin assigns teams to a developer.
        oidc_issuer:
          type: string
        oidc_client_id:
          type: string
        oidc_client_secret:
          type: string
        oidc_scopes:
          type: array
          default:
            - email
            - openid
            - profile
          items:
            type: string
            default: openid
        oidc_claim_mappings:
          $ref: '#/components/schemas/PortalClaimMappings'
      example:
        basic_auth_enabled: true
        oidc_auth_enabled: true
        oidc_team_mapping_enabled: true
        konnect_mapping_enabled: false
        oidc_issuer: https://identity.example.com/v2
        oidc_client_id: x7id0o42lklas0blidl2
        oidc_scopes:
          - email
          - openid
          - profile
        oidc_claim_mappings:
          name: name
          email: email
          groups: custom-group-claim
    ListPortalsResponse:
      x-speakeasy-entity: PortalList
      additionalProperties: false
      description: A paginated list of portals in the current region in the organization.
      type: object
      required:
        - data
        - meta
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Portal'
      example:
        meta:
          page:
            number: 1
            size: 10
            total: 1
        data:
          - id: 8f9fd312-a987-4628-b4c5-bb4f4fddd5f7
            created_at: '2022-02-07T17:46:57.52Z'
            updated_at: '2022-10-08T17:00:00.52Z'
            name: Portal A
            description: The Portal A
            default_domain: 123455678abcd.us.portal.konghq.com
            is_public: false
            rbac_enabled: true
            auto_approve_applications: false
            auto_approve_developers: true
            custom_domain: api.example.com
            custom_client_domain: portal.example.com
            application_count: 0
            developer_count: 0
            published_product_count: 0
    PortalProductVersionPublishStatus:
      type: string
      description: Publication status of the API product version on the portal
      enum:
        - published
        - unpublished
    PortalProductVersionDeprecated:
      type: boolean
      description: Whether the api product version on the portal is deprecated
    ApplicationRegistrationEnabled:
      type: boolean
      description: >-
        Whether the application registration on this portal for the api product
        version is enabled
    AutoApproveRegistration:
      type: boolean
      description: >-
        Whether the application registration auto approval on this portal for
        the api product version is enabled
    AuthStrategies:
      description: A list of authentication strategies
      type: array
      minItems: 0
      maxItems: 1
      items:
        $ref: '#/components/schemas/AuthStrategy'
    AuthStrategyIDs:
      description: A list of authentication strategy IDs
      type: array
      minItems: 0
      maxItems: 1
      items:
        $ref: '#/components/schemas/UUID_RW'
    UpdatePortalProductVersionPayload:
      x-speakeasy-entity: PortalProductVersion
      title: UpdatePortalProductVersionPayload
      type: object
      description: Payload to update a Portal Product Version
      additionalProperties: false
      properties:
        publish_status:
          $ref: '#/components/schemas/PortalProductVersionPublishStatus'
        auth_strategy_ids:
          $ref: '#/components/schemas/AuthStrategyIDs'
        application_registration_enabled:
          $ref: '#/components/schemas/ApplicationRegistrationEnabled'
        auto_approve_registration:
          $ref: '#/components/schemas/AutoApproveRegistration'
        deprecated:
          $ref: '#/components/schemas/PortalProductVersionDeprecated'
    PortalProductVersion:
      x-speakeasy-entity: PortalProductVersion
      title: PortalProductVersion
      type: object
      description: >
        A Portal Product Version holds metadata that describes how a Product
        Version is configured for a specific portal.


        It contains:

        - Lifecyle and deprecation statuses

        - Application registration settings like auto approve or whether
        application registration is enabled

        - The Authentication Strategy (if present) that is enabled for
        Application Registration
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/schemas-UUID'
        publish_status:
          $ref: '#/components/schemas/PortalProductVersionPublishStatus'
        product_version_id:
          $ref: '#/components/schemas/UUID_RW'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        auth_strategies:
          $ref: '#/components/schemas/AuthStrategies'
        application_registration_enabled:
          $ref: '#/components/schemas/ApplicationRegistrationEnabled'
        auto_approve_registration:
          $ref: '#/components/schemas/AutoApproveRegistration'
        deprecated:
          $ref: '#/components/schemas/PortalProductVersionDeprecated'
      required:
        - id
        - publish_status
        - application_registration_enabled
        - auto_approve_registration
        - product_version_id
        - deprecated
        - auth_strategies
        - created_at
        - updated_at
    UpdatePortalResponse:
      $ref: '#/components/schemas/Portal'
    Portal:
      x-speakeasy-entity: Portal
      additionalProperties: false
      type: object
      required:
        - id
        - created_at
        - updated_at
        - name
        - default_domain
        - is_public
        - rbac_enabled
        - auto_approve_applications
        - auto_approve_developers
        - custom_domain
        - custom_client_domain
        - description
        - application_count
        - developer_count
        - published_product_count
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        name:
          $ref: '#/components/schemas/PortalName'
        description:
          $ref: '#/components/schemas/PortalDescription'
        default_domain:
          description: >-
            The domain assigned to the portal by Konnect. This is the default
            place to access the portal and its API if not using a
            `custom_domain``.
          type: string
          format: hostname
          readOnly: true
        is_public:
          description: >-
            Whether the portal catalog can be accessed publicly without any
            developer authentication. Developer accounts and applications cannot
            be created if the portal is public.
          type: boolean
        rbac_enabled:
          description: >-
            Whether the portal resources are protected by Role Based Access
            Control (RBAC). If enabled, developers view or register for products
            until unless assigned to teams with access to view and consume
            specific products.
          type: boolean
        auto_approve_applications:
          description: >-
            Whether the requests from applications to register for products will
            be automatically approved, or if they will be set to pending until
            approved by an admin.
          type: boolean
        auto_approve_developers:
          type: boolean
          description: >-
            Whether the developer account registrations will be automatically
            approved, or if they will be set to pending until approved by an
            admin.
        custom_domain:
          nullable: true
          type: string
          format: hostname
          description: >-
            The custom domain to access the developer portal. A CNAME for the
            portal's default domain must be able to be set for the custom domain
            for it to be valid. After setting a valid CNAME, an SSL/TLS
            certificate will be automatically manged for the custom domain, and
            traffic will be able to use the custom domain to route to the
            portal's web client and API.
        custom_client_domain:
          description: >-
            The custom domain to access a self-hosted customized developer
            portal client. If this is set, the Konnect-hosted portal client will
            no longer be available. `custom_domain` must be also set for this
            value to be set. See https://github.com/Kong/konnect-portal for
            information on how to get started deploying and customizing your own
            Konnect portal.
          nullable: true
          type: string
          format: hostname
        default_application_auth_strategy_id:
          $ref: '#/components/schemas/DefaultApplicationAuthStratID'
        application_count:
          type: number
          description: Number of applications created in the portal.
        developer_count:
          type: number
          description: Number of developers using the portal.
        published_product_count:
          type: number
          description: Number of api products published to the portal
      example:
        id: 9f9fd312-a987-4628-b4c5-bb4f4fddd5f7
        created_at: '2022-02-07T17:46:57.52Z'
        updated_at: '2022-10-08T17:00:00.52Z'
        name: Portal A
        description: The Portal A
        default_domain: 123455678abcd.us.portal.konghq.com
        is_public: false
        rbac_enabled: true
        auto_approve_applications: false
        auto_approve_developers: true
        custom_domain: api.example.com
        custom_client_domain: portal.example.com
        application_count: 0
        developer_count: 0
        published_product_count: 0
    PortalDescription:
      description: The description of the portal.
      type: string
      maxLength: 512
      nullable: true
    DefaultApplicationAuthStratID:
      description: Default strategy ID applied on applications for the portal
      nullable: true
      type: string
      format: uuid
      example: 5f9fd312-a987-4628-b4c5-bb4f4fddd5f7
    PortalName:
      description: >-
        The name of the portal, used to distinguish it from other portals. Name
        must be unique.
      type: string
      maxLength: 255
      minLength: 1
    UpdatePortalRequest:
      additionalProperties: false
      type: object
      properties:
        name:
          $ref: '#/components/schemas/PortalName'
        description:
          $ref: '#/components/schemas/PortalDescription'
        is_public:
          description: >-
            Whether the portal catalog can be accessed publicly without any
            developer authentication. Developer accounts and applications cannot
            be created if the portal is public.
          type: boolean
        rbac_enabled:
          description: >-
            Whether the portal resources are protected by Role Based Access
            Control (RBAC). If enabled, developers view or register for products
            until unless assigned to teams with access to view and consume
            specific products.
          type: boolean
        auto_approve_applications:
          description: >-
            Whether the requests from applications to register for products will
            be automatically approved, or if they will be set to pending until
            approved by an admin.
          type: boolean
        auto_approve_developers:
          description: >-
            Whether the developer account registrations will be automatically
            approved, or if they will be set to pending until approved by an
            admin.
          type: boolean
        custom_domain:
          description: >-
            The custom domain to access the developer portal. A CNAME for the
            portal's default domain must be able to be set for the custom domain
            for it to be valid. After setting a valid CNAME, an SSL/TLS
            certificate will be automatically manged for the custom domain, and
            traffic will be able to use the custom domain to route to the
            portal's web client and API.
          type: string
          format: hostname
          nullable: true
          maxLength: 1024
        custom_client_domain:
          description: >-
            The custom domain to access a self-hosted customized developer
            portal client. If this is set, the Konnect-hosted portal will no
            longer be available.  `custom_domain` must be also set for this
            value to be set. See https://github.com/Kong/konnect-portal for
            information on how to get started deploying and customizing your own
            Konnect portal.
          type: string
          format: hostname
          nullable: true
          maxLength: 1024
        default_application_auth_strategy_id:
          $ref: '#/components/schemas/DefaultApplicationAuthStratID'
      example:
        name: Aperture
        is_public: false
        rbac_enabled: true
        auto_approve_applications: false
        auto_approve_developers: false
        custom_domain: api.example.com
        custom_client_domain: portal.example.com
        default_application_auth_strategy_id: 5f9fd312-a987-4628-b4c5-bb4f4fddd5f7
    UUID:
      type: string
      format: uuid
      example: 5f9fd312-a987-4628-b4c5-bb4f4fddd5f7
      description: Contains a unique identifier used by the API for this resource.
      readOnly: true
    schemas-UUID:
      type: string
      format: uuid
      example: 5f9fd312-a987-4628-b4c5-bb4f4fddd5f7
      description: Contains a unique identifier used by the API for this resource.
      readOnly: true
    UUID_RW:
      type: string
      format: uuid
      example: 5f9fd312-a987-4628-b4c5-bb4f4fddd5f7
      description: Contains a unique identifier used by the API for this resource.
    AuthStrategyKeyAuth:
      description: KeyAuth Auth strategy that the application uses.
      type: object
      required:
        - id
        - name
        - credential_type
      properties:
        id:
          type: string
          format: uuid
          example: b9e81174-b5bb-4638-a3c3-8afe61a0abf8
          description: The Application Auth Strategy ID.
          readOnly: true
        name:
          type: string
          example: name
          default: name
        credential_type:
          type: string
          enum:
            - key_auth
    AuthMethods:
      type: array
      items:
        description: Auth Methods enabled for this strategy
        type: string
      example:
        - bearer
    AuthStrategyClientCredentials:
      description: Client Credential Auth strategy that the application uses.
      type: object
      required:
        - id
        - name
        - credential_type
        - auth_methods
      properties:
        id:
          type: string
          format: uuid
          example: b9e81174-b5bb-4638-a3c3-8afe61a0abf8
          description: The Application Auth Strategy ID.
          readOnly: true
        name:
          type: string
          example: name
          default: name
        credential_type:
          type: string
          enum:
            - client_credentials
            - self_managed_client_credentials
        auth_methods:
          $ref: '#/components/schemas/AuthMethods'
    DcrProviderType:
      title: DcrProviderType
      type: string
      description: >-
        The type of DCR provider. Can be one of the following - auth0, azureAd,
        curity, okta, http
      enum:
        - auth0
        - azureAd
        - curity
        - okta
        - http
    AppAuthStrategyConfigKeyAuth:
      title: AppAuthStrategyConfigKeyAuth
      description: >
        The most basic mode to configure an Application Auth Strategy for an API
        Product Version. 

        Using this mode will allow developers to generate API keys that will
        authenticate their application requests. 

        Once authenticated, an application will be granted access to any Product
        Version it is registered for that is configured for Key Auth.
      type: object
      additionalProperties: false
      properties:
        key_names:
          type: array
          maxItems: 10
          minItems: 1
          items:
            type: string
            maxLength: 256
          description: >-
            The names of the headers containing the API key. You can specify
            multiple header names.
    PartialAppAuthStrategyConfigOpenIDConnect:
      title: PartialAppAuthStrategyConfigOpenIDConnect
      description: >
        A more advanced mode to configure an API Product Version’s Application
        Auth Strategy. 

        Using this mode will allow developers to use API credentials issued from
        an external IdP that will authenticate their application requests. 

        Once authenticated, an application will be granted access to any Product
        Version it is registered for that is configured for the same Auth
        Strategy. 

        An OIDC strategy may be used in conjunction with a DCR provider to
        automatically create the IdP application.
      type: object
      additionalProperties: true
      properties:
        issuer:
          type: string
          format: url
          maxLength: 256
        credential_claim:
          type: array
          maxItems: 10
          items:
            type: string
            maxLength: 128
        scopes:
          type: array
          maxItems: 50
          items:
            type: string
            maxLength: 128
        auth_methods:
          type: array
          maxItems: 10
          items:
            type: string
            maxLength: 64
    AppAuthStrategyConfigOpenIDConnect:
      title: AppAuthStrategyConfigOpenIDConnect
      description: >
        A more advanced mode to configure an API Product Version’s Application
        Auth Strategy. 

        Using this mode will allow developers to use API credentials issued from
        an external IdP that will authenticate their application requests. 

        Once authenticated, an application will be granted access to any Product
        Version it is registered for that is configured for the same Auth
        Strategy. 

        An OIDC strategy may be used in conjunction with a DCR provider to
        automatically create the IdP application.
      type: object
      additionalProperties: true
      required:
        - issuer
        - credential_claim
        - scopes
        - auth_methods
      properties:
        issuer:
          type: string
          format: url
          maxLength: 256
        credential_claim:
          type: array
          maxItems: 10
          items:
            type: string
            maxLength: 128
        scopes:
          type: array
          maxItems: 50
          items:
            type: string
            maxLength: 128
        auth_methods:
          type: array
          maxItems: 10
          items:
            type: string
            maxLength: 64
    AppAuthStrategyKeyAuthRequest:
      title: AppAuthStrategyKeyAuthRequest
      description: Request for creating a Key Auth Application Auth Strategy
      type: object
      additionalProperties: false
      required:
        - name
        - display_name
        - strategy_type
        - configs
      properties:
        name:
          $ref: '#/components/schemas/AuthStrategyName'
        display_name:
          $ref: '#/components/schemas/AuthStrategyDisplayName'
        strategy_type:
          type: string
          enum:
            - key_auth
        configs:
          type: object
          description: JSON-B object containing the configuration for the Key Auth strategy
          additionalProperties: false
          required:
            - key-auth
          properties:
            key-auth:
              $ref: '#/components/schemas/AppAuthStrategyConfigKeyAuth'
    AppAuthStrategyKeyAuthResponse:
      title: AppAuthStrategyKeyAuthResponse
      description: >-
        Response payload from creating or updating a Key Auth Application Auth
        Strategy
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - display_name
        - strategy_type
        - configs
        - active
        - dcr_provider
        - created_at
        - updated_at
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          $ref: '#/components/schemas/AuthStrategyName'
        display_name:
          $ref: '#/components/schemas/AuthStrategyDisplayName'
        strategy_type:
          type: string
          enum:
            - key_auth
        configs:
          type: object
          description: JSON-B object containing the configuration for the Key Auth strategy
          additionalProperties: false
          required:
            - key-auth
          properties:
            key-auth:
              $ref: '#/components/schemas/AppAuthStrategyConfigKeyAuth'
        active:
          type: boolean
          description: At least one published product version is using this auth strategy.
        dcr_provider:
          nullable: true
          type: object
          additionalProperties: false
          required:
            - id
            - name
            - provider_type
          properties:
            id:
              $ref: '#/components/schemas/UUID'
            name:
              type: string
            display_name:
              $ref: '#/components/schemas/DcrProviderDisplayName'
            provider_type:
              $ref: '#/components/schemas/DcrProviderType'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    AppAuthStrategyOpenIDConnectRequest:
      title: AppAuthStrategyOpenIDConnectRequest
      description: Payload for creating an OIDC Application Auth Strategy
      type: object
      additionalProperties: false
      required:
        - name
        - display_name
        - strategy_type
        - configs
      properties:
        name:
          $ref: '#/components/schemas/AuthStrategyName'
        display_name:
          $ref: '#/components/schemas/AuthStrategyDisplayName'
        strategy_type:
          type: string
          enum:
            - openid_connect
        configs:
          type: object
          description: JSON-B object containing the configuration for the OIDC strategy
          additionalProperties: false
          required:
            - openid-connect
          properties:
            openid-connect:
              $ref: '#/components/schemas/AppAuthStrategyConfigOpenIDConnect'
        dcr_provider_id:
          nullable: true
          type: string
          format: uuid
    AppAuthStrategyOpenIDConnectResponse:
      title: AppAuthStrategyOpenIDConnectResponse
      description: Response payload from creating an OIDC Application Auth Strategy
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - display_name
        - strategy_type
        - configs
        - active
        - dcr_provider
        - created_at
        - updated_at
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          $ref: '#/components/schemas/AuthStrategyName'
        display_name:
          $ref: '#/components/schemas/AuthStrategyDisplayName'
        strategy_type:
          type: string
          enum:
            - openid_connect
        configs:
          type: object
          description: JSON-B object containing the configuration for the OIDC strategy
          additionalProperties: false
          required:
            - openid-connect
          properties:
            openid-connect:
              $ref: '#/components/schemas/AppAuthStrategyConfigOpenIDConnect'
        active:
          type: boolean
          description: At least one published product version is using this auth strategy.
        dcr_provider:
          nullable: true
          type: object
          additionalProperties: false
          required:
            - id
            - name
            - provider_type
          properties:
            id:
              $ref: '#/components/schemas/UUID'
            name:
              type: string
            display_name:
              $ref: '#/components/schemas/DcrProviderDisplayName'
            provider_type:
              $ref: '#/components/schemas/DcrProviderType'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    CreateAppAuthStrategyRequest:
      x-speakeasy-entity: ApplicationAuthStrategy
      title: CreateAppAuthStrategyRequest
      description: Request body for creating an Application Auth Strategy
      type: object
      discriminator:
        propertyName: strategy_type
        mapping:
          key_auth: '#/components/schemas/AppAuthStrategyKeyAuthRequest'
          openid_connect: '#/components/schemas/AppAuthStrategyOpenIDConnectRequest'
      required:
        - strategy_type
      oneOf:
        - $ref: '#/components/schemas/AppAuthStrategyKeyAuthRequest'
        - $ref: '#/components/schemas/AppAuthStrategyOpenIDConnectRequest'
    AppAuthStrategy:
      x-speakeasy-entity: ApplicationAuthStrategy
      title: AppAuthStrategy
      description: >-
        A set of plugin configurations that represent how the gateway will
        perform authentication and authorization for a Product Version. Called
        “Auth Strategy” for short in the context of portals/applications. The
        plugins are synced to any Gateway Service that is currently linked or
        becomes linked to the Product Version.
      type: object
      discriminator:
        propertyName: strategy_type
        mapping:
          key_auth: '#/components/schemas/AppAuthStrategyKeyAuthResponse'
          openid_connect: '#/components/schemas/AppAuthStrategyOpenIDConnectResponse'
      required:
        - strategy_type
      oneOf:
        - $ref: '#/components/schemas/AppAuthStrategyKeyAuthResponse'
        - $ref: '#/components/schemas/AppAuthStrategyOpenIDConnectResponse'
    UpdateAppAuthStrategyRequest:
      x-speakeasy-entity: ApplicationAuthStrategy
      title: UpdateAppAuthStrategyRequest
      description: Request body for updating an Application Auth Strategy
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/AuthStrategyName'
        display_name:
          $ref: '#/components/schemas/AuthStrategyDisplayName'
        dcr_provider_id:
          nullable: true
          type: string
          format: uuid
        configs:
          type: object
          description: >-
            JSON-B object containing the configuration for the OIDC strategy
            under the key 'openid-connect' or the configuration for the Key Auth
            strategy under the key 'key-auth'
          oneOf:
            - type: object
              additionalProperties: false
              required:
                - openid-connect
              properties:
                openid-connect:
                  $ref: >-
                    #/components/schemas/PartialAppAuthStrategyConfigOpenIDConnect
            - type: object
              additionalProperties: false
              required:
                - key-auth
              properties:
                key-auth:
                  $ref: '#/components/schemas/AppAuthStrategyConfigKeyAuth'
    CreateAppAuthStrategyResponse:
      $ref: '#/components/schemas/AppAuthStrategy'
    UpdateAppAuthStrategyResponse:
      $ref: '#/components/schemas/AppAuthStrategy'
    GetAppAuthStrategyResponse:
      $ref: '#/components/schemas/AppAuthStrategy'
    DcrProviderDisplayName:
      type: string
      description: >
        The display name of the DCR provider. This is used to identify the DCR
        provider in the Portal UI.
      minLength: 1
      maxLength: 256
    AuthStrategyName:
      type: string
      description: >
        The name of the auth strategy. This is used to identify the auth
        strategy in the Konnect UI.
      minLength: 1
      maxLength: 256
    AuthStrategyDisplayName:
      type: string
      description: >
        The display name of the Auth strategy. This is used to identify the Auth
        strategy in the Portal UI.
      maxLength: 256
    KeyAuthPluginConfig:
      properties:
        config:
          type: object
          properties:
            key_names:
              type: array
              default:
                - apikey
              items:
                type: string
                description: A string representing an HTTP header name.
              description: >-
                Describes an array of parameter names where the plugin will look
                for a key. The key names may only contain [a-z], [A-Z], [0-9],
                [_] underscore, and [-] hyphen.
            hide_credentials:
              type: boolean
              default: false
              description: >-
                An optional boolean value telling the plugin to show or hide the
                credential from the upstream service. If `true`, the plugin
                strips the credential from the request.
            anonymous:
              type: string
              description: >-
                An optional string (consumer UUID or username) value to use as
                an “anonymous” consumer if authentication fails. If empty
                (default null), the request will fail with an authentication
                failure `4xx`.
            key_in_header:
              type: boolean
              default: true
              description: >-
                If enabled (default), the plugin reads the request header and
                tries to find the key in it.
            key_in_query:
              type: boolean
              default: true
              description: >-
                If enabled (default), the plugin reads the query parameter in
                the request and tries to find the key in it.
            key_in_body:
              type: boolean
              default: false
              description: >-
                If enabled, the plugin reads the request body. Supported MIME
                types: `application/www-form-urlencoded`, `application/json`,
                and `multipart/form-data`.
            run_on_preflight:
              type: boolean
              default: true
              description: >-
                A boolean value that indicates whether the plugin should run
                (and try to authenticate) on `OPTIONS` preflight requests. If
                set to `false`, then `OPTIONS` requests are always allowed.
        name:
          type: string
          const: key-auth
      required: []
    KeyAuthPlugin:
      x-speakeasy-entity: GatewayPluginKeyAuth
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/KeyAuthPluginConfig'
    CreateKeyAuthPlugin:
      x-speakeasy-entity: GatewayPluginKeyAuth
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/KeyAuthPluginConfig'
    CORSPluginConfig:
      properties:
        config:
          type: object
          properties:
            origins:
              type: array
              items:
                type: string
              description: >-
                List of allowed domains for the `Access-Control-Allow-Origin`
                header. If you want to allow all origins, add `*` as a single
                value to this configuration field. The accepted values can
                either be flat strings or PCRE regexes.
            headers:
              type: array
              items:
                type: string
              description: Value for the `Access-Control-Allow-Headers` header.
            exposed_headers:
              type: array
              items:
                type: string
              description: >-
                Value for the `Access-Control-Expose-Headers` header. If not
                specified, no custom headers are exposed.
            methods:
              default:
                - GET
                - HEAD
                - PUT
                - PATCH
                - POST
                - DELETE
                - OPTIONS
                - TRACE
                - CONNECT
              type: array
              items:
                type: string
                enum:
                  - GET
                  - HEAD
                  - PUT
                  - PATCH
                  - POST
                  - DELETE
                  - OPTIONS
                  - TRACE
                  - CONNECT
              description: >-
                'Value for the `Access-Control-Allow-Methods` header. Available
                options include `GET`, `HEAD`, `PUT`, `PATCH`, `POST`, `DELETE`,
                `OPTIONS`, `TRACE`, `CONNECT`. By default, all options are
                allowed.'
            max_age:
              type: number
              description: >-
                Indicates how long the results of the preflight request can be
                cached, in `seconds`.
            credentials:
              type: boolean
              default: false
              description: >-
                Flag to determine whether the `Access-Control-Allow-Credentials`
                header should be sent with `true` as the value.
            private_network:
              type: boolean
              default: false
              description: >-
                Flag to determine whether the
                `Access-Control-Allow-Private-Network` header should be sent
                with `true` as the value.
            preflight_continue:
              type: boolean
              default: false
              description: >-
                A boolean value that instructs the plugin to proxy the `OPTIONS`
                preflight request to the Upstream service.
        name:
          type: string
          const: cors
      required: []
    CORSPlugin:
      x-speakeasy-entity: GatewayPluginCORS
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/CORSPluginConfig'
    CreateCORSPlugin:
      x-speakeasy-entity: GatewayPluginCORS
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/CORSPluginConfig'
    RateLimitingPluginConfig:
      properties:
        config:
          type: object
          properties:
            second:
              minimum: 0
              type: number
              description: The number of HTTP requests that can be made per second.
            minute:
              minimum: 0
              type: number
              description: The number of HTTP requests that can be made per minute.
            hour:
              minimum: 0
              type: number
              description: The number of HTTP requests that can be made per hour.
            day:
              minimum: 0
              type: number
              description: The number of HTTP requests that can be made per day.
            month:
              minimum: 0
              type: number
              description: The number of HTTP requests that can be made per month.
            year:
              minimum: 0
              type: number
              description: The number of HTTP requests that can be made per year.
            limit_by:
              default: consumer
              enum:
                - consumer
                - credential
                - ip
                - service
                - header
                - path
                - consumer-group
              type: string
              description: The entity that is used when aggregating the limits.
            header_name:
              type: string
              description: A string representing an HTTP header name.
            path:
              starts_with: /
              match_none:
                pattern: //
                err: must not have empty segments
              type: string
              description: >-
                A string representing a URL path, such as /path/to/resource.
                Must start with a forward slash (/) and must not contain empty
                segments (i.e., two consecutive forward slashes).
            policy:
              type: string
              minLength: 0
              enum:
                - local
                - cluster
                - redis
              default: local
              description: >-
                The rate-limiting policies to use for retrieving and
                incrementing the limits.
            fault_tolerant:
              type: boolean
              default: true
              description: >-
                A boolean value that determines if the requests should be
                proxied even if Kong has troubles connecting a third-party data
                store. If `true`, requests will be proxied anyway, effectively
                disabling the rate-limiting function until the data store is
                working again. If `false`, then the clients will see `500`
                errors.
            redis_host:
              type: string
              description: A string representing a host name, such as example.com.
            redis_port:
              minimum: 0
              maximum: 65535
              default: 6379
              type: integer
              description: >-
                An integer representing a port number between 0 and 65535,
                inclusive.
            redis_password:
              minLength: 0
              referenceable: true
              type: string
              description: >-
                When using the `redis` policy, this property specifies the
                password to connect to the Redis server.
            redis_username:
              referenceable: true
              type: string
              description: >-
                When using the `redis` policy, this property specifies the
                username to connect to the Redis server when ACL authentication
                is desired.
            redis_ssl:
              type: boolean
              default: false
              description: >-
                When using the `redis` policy, this property specifies if SSL is
                used to connect to the Redis server.
            redis_ssl_verify:
              type: boolean
              default: false
              description: >-
                When using the `redis` policy with `redis_ssl` set to `true`,
                this property specifies it server SSL certificate is validated.
                Note that you need to configure the lua_ssl_trusted_certificate
                to specify the CA (or server) certificate used by your Redis
                server. You may also need to configure lua_ssl_verify_depth
                accordingly.
            redis_server_name:
              type: string
              description: >-
                A string representing an SNI (server name indication) value for
                TLS.
            redis_timeout:
              default: 2000
              type: number
              description: >-
                When using the `redis` policy, this property specifies the
                timeout in milliseconds of any command submitted to the Redis
                server.
            redis_database:
              default: 0
              type: integer
              description: >-
                When using the `redis` policy, this property specifies the Redis
                database to use.
            hide_client_headers:
              type: boolean
              default: false
              description: Optionally hide informative response headers.
            error_code:
              default: 429
              minimum: 0
              type: number
              description: >-
                Set a custom error code to return when the rate limit is
                exceeded.
            error_message:
              default: API rate limit exceeded
              type: string
              description: >-
                Set a custom error message to return when the rate limit is
                exceeded.
            sync_rate:
              type: number
              default: -1
              description: >-
                How often to sync counter data to the central data store. A
                value of -1 results in synchronous behavior.
        name:
          type: string
          const: rate-limiting
      required: []
    RateLimitingPlugin:
      x-speakeasy-entity: GatewayPluginRateLimiting
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/RateLimitingPluginConfig'
    CreateRateLimitingPlugin:
      x-speakeasy-entity: GatewayPluginRateLimiting
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/RateLimitingPluginConfig'
    BasicAuthPluginConfig:
      properties:
        config:
          type: object
          properties:
            anonymous:
              type: string
              description: >-
                An optional string (Consumer UUID or username) value to use as
                an “anonymous” consumer if authentication fails. If empty
                (default null), the request will fail with an authentication
                failure `4xx`. Please note that this value must refer to the
                Consumer `id` or `username` attribute, and **not** its
                `custom_id`.
            hide_credentials:
              default: false
              type: boolean
              description: >-
                An optional boolean value telling the plugin to show or hide the
                credential from the upstream service. If `true`, the plugin will
                strip the credential from the request (i.e. the `Authorization`
                header) before proxying it.
        name:
          type: string
          const: basic-auth
      required: []
    BasicAuthPlugin:
      x-speakeasy-entity: GatewayPluginBasicAuth
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/BasicAuthPluginConfig'
    CreateBasicAuthPlugin:
      x-speakeasy-entity: GatewayPluginBasicAuth
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/BasicAuthPluginConfig'
    RateLimitingAdvancedPluginConfig:
      properties:
        config:
          type: object
          properties:
            identifier:
              type: string
              enum:
                - ip
                - credential
                - consumer
                - service
                - header
                - path
                - consumer-group
              default: consumer
              description: >-
                The type of identifier used to generate the rate limit key.
                Defines the scope used to increment the rate limiting counters.
                Can be `ip`, `credential`, `consumer`, `service`, `header`,
                `path` or `consumer-group`.
            window_size:
              type: array
              items:
                type: number
              description: >-
                One or more window sizes to apply a limit to (defined in
                seconds). There must be a matching number of window limits and
                sizes specified.
            window_type:
              default: sliding
              enum:
                - fixed
                - sliding
              type: string
              description: >-
                Sets the time window type to either `sliding` (default) or
                `fixed`. Sliding windows apply the rate limiting logic while
                taking into account previous hit rates (from the window that
                immediately precedes the current) using a dynamic weight. Fixed
                windows consist of buckets that are statically assigned to a
                definitive time range, each request is mapped to only one fixed
                window based on its timestamp and will affect only that window's
                counters.
            limit:
              type: array
              items:
                type: number
              description: >-
                One or more requests-per-window limits to apply. There must be a
                matching number of window limits and sizes specified.
            sync_rate:
              type: number
              description: >-
                How often to sync counter data to the central data store. A
                value of 0 results in synchronous behavior; a value of -1
                ignores sync behavior entirely and only stores counters in node
                memory. A value greater than 0 will sync the counters in the
                specified number of seconds. The minimum allowed interval is
                0.02 seconds (20ms).
            namespace:
              auto: true
              type: string
              description: >-
                The rate limiting library namespace to use for this plugin
                instance. Counter data and sync configuration is isolated in
                each namespace. NOTE: For the plugin instances sharing the same
                namespace, all the configurations that are required for
                synchronizing counters, e.g. `strategy`, `redis`, `sync_rate`,
                `window_size`, `dictionary_name`, need to be the same.
            strategy:
              type: string
              enum:
                - cluster
                - redis
                - local
              default: local
              description: >-
                The rate-limiting strategy to use for retrieving and
                incrementing the limits. Available values are: `local` and
                `cluster`.
            dictionary_name:
              default: kong_rate_limiting_counters
              type: string
              description: >-
                The shared dictionary where counters are stored. When the plugin
                is configured to synchronize counter data externally (that is
                `config.strategy` is `cluster` or `redis` and `config.sync_rate`
                isn't `-1`), this dictionary serves as a buffer to populate
                counters in the data store on each synchronization cycle.
            hide_client_headers:
              default: false
              type: boolean
              description: >-
                Optionally hide informative response headers that would
                otherwise provide information about the current status of limits
                and counters.
            retry_after_jitter_max:
              default: 0
              type: number
              description: >-
                The upper bound of a jitter (random delay) in seconds to be
                added to the `Retry-After` header of denied requests (status =
                `429`) in order to prevent all the clients from coming back at
                the same time. The lower bound of the jitter is `0`; in this
                case, the `Retry-After` header is equal to the `RateLimit-Reset`
                header.
            header_name:
              type: string
              description: A string representing an HTTP header name.
            path:
              starts_with: /
              match_none:
                pattern: //
                err: must not have empty segments
              type: string
              description: >-
                A string representing a URL path, such as /path/to/resource.
                Must start with a forward slash (/) and must not contain empty
                segments (i.e., two consecutive forward slashes).
            redis:
              type: object
              properties:
                host:
                  type: string
                  description: A string representing a host name, such as example.com.
                port:
                  minimum: 0
                  maximum: 65535
                  type: integer
                  description: >-
                    An integer representing a port number between 0 and 65535,
                    inclusive.
                timeout:
                  minimum: 0
                  maximum: 2147483646
                  default: 2000
                  type: integer
                  description: >-
                    An integer representing a timeout in milliseconds. Must be
                    between 0 and 2^31-2.
                connect_timeout:
                  minimum: 0
                  maximum: 2147483646
                  type: integer
                  description: >-
                    An integer representing a timeout in milliseconds. Must be
                    between 0 and 2^31-2.
                send_timeout:
                  minimum: 0
                  maximum: 2147483646
                  type: integer
                  description: >-
                    An integer representing a timeout in milliseconds. Must be
                    between 0 and 2^31-2.
                read_timeout:
                  minimum: 0
                  maximum: 2147483646
                  type: integer
                  description: >-
                    An integer representing a timeout in milliseconds. Must be
                    between 0 and 2^31-2.
                username:
                  referenceable: true
                  type: string
                  description: >-
                    Username to use for Redis connections. If undefined, ACL
                    authentication won't be performed. This requires Redis
                    v6.0.0+. To be compatible with Redis v5.x.y, you can set it
                    to `default`.
                password:
                  encrypted: true
                  referenceable: true
                  type: string
                  description: >-
                    Password to use for Redis connections. If undefined, no AUTH
                    commands are sent to Redis.
                sentinel_username:
                  referenceable: true
                  type: string
                  description: >-
                    Sentinel username to authenticate with a Redis Sentinel
                    instance. If undefined, ACL authentication won't be
                    performed. This requires Redis v6.2.0+.
                sentinel_password:
                  encrypted: true
                  referenceable: true
                  type: string
                  description: >-
                    Sentinel password to authenticate with a Redis Sentinel
                    instance. If undefined, no AUTH commands are sent to Redis
                    Sentinels.
                database:
                  default: 0
                  type: integer
                  description: >-
                    Database to use for the Redis connection when using the
                    `redis` strategy
                keepalive_pool_size:
                  minimum: 1
                  maximum: 2147483646
                  default: 256
                  type: integer
                  description: >-
                    The size limit for every cosocket connection pool associated
                    with every remote server, per worker process. If neither
                    `keepalive_pool_size` nor `keepalive_backlog` is specified,
                    no pool is created. If `keepalive_pool_size` isn't specified
                    but `keepalive_backlog` is specified, then the pool uses the
                    default value. Try to increase (e.g. 512) this value if
                    latency is high or throughput is low.
                keepalive_backlog:
                  minimum: 0
                  maximum: 2147483646
                  type: integer
                  description: >-
                    Limits the total number of opened connections for a pool. If
                    the connection pool is full, connection queues above the
                    limit go into the backlog queue. If the backlog queue is
                    full, subsequent connect operations fail and return `nil`.
                    Queued operations (subject to set timeouts) resume once the
                    number of connections in the pool is less than
                    `keepalive_pool_size`. If latency is high or throughput is
                    low, try increasing this value. Empirically, this value is
                    larger than `keepalive_pool_size`.
                sentinel_master:
                  type: string
                  description: >-
                    Sentinel master to use for Redis connections. Defining this
                    value implies using Redis Sentinel.
                sentinel_role:
                  enum:
                    - master
                    - slave
                    - any
                  type: string
                  description: >-
                    Sentinel role to use for Redis connections when the `redis`
                    strategy is defined. Defining this value implies using Redis
                    Sentinel.
                sentinel_addresses:
                  minLength: 1
                  items:
                    type: string
                  type: array
                  description: >-
                    Sentinel addresses to use for Redis connections when the
                    `redis` strategy is defined. Defining this value implies
                    using Redis Sentinel. Each string element must be a
                    hostname. The minimum length of the array is 1 element.
                cluster_addresses:
                  minLength: 1
                  items:
                    type: string
                  type: array
                  description: >-
                    Cluster addresses to use for Redis connections when the
                    `redis` strategy is defined. Defining this value implies
                    using Redis Cluster. Each string element must be a hostname.
                    The minimum length of the array is 1 element.
                ssl:
                  default: false
                  type: boolean
                  description: If set to true, uses SSL to connect to Redis.
                ssl_verify:
                  default: false
                  type: boolean
                  description: >-
                    If set to true, verifies the validity of the server SSL
                    certificate. If setting this parameter, also configure
                    `lua_ssl_trusted_certificate` in `kong.conf` to specify the
                    CA (or server) certificate used by your Redis server. You
                    may also need to configure `lua_ssl_verify_depth`
                    accordingly.
                server_name:
                  required: false
                  type: string
                  description: >-
                    A string representing an SNI (server name indication) value
                    for TLS.
            enforce_consumer_groups:
              default: false
              type: boolean
              description: >-
                Determines if consumer groups are allowed to override the rate
                limiting settings for the given Route or Service. Flipping
                `enforce_consumer_groups` from `true` to `false` disables the
                group override, but does not clear the list of consumer groups.
                You can then flip `enforce_consumer_groups` to `true` to
                re-enforce the groups.
            consumer_groups:
              type: array
              items:
                type: string
              description: >-
                List of consumer groups allowed to override the rate limiting
                settings for the given Route or Service. Required if
                `enforce_consumer_groups` is set to `true`.
            disable_penalty:
              default: false
              type: boolean
              description: >-
                If set to `true`, this doesn't count denied requests (status =
                `429`). If set to `false`, all requests, including denied ones,
                are counted. This parameter only affects the `sliding`
                window_type.
            error_code:
              default: 429
              minimum: 0
              type: number
              description: >-
                Set a custom error code to return when the rate limit is
                exceeded.
            error_message:
              default: API rate limit exceeded
              type: string
              description: >-
                Set a custom error message to return when the rate limit is
                exceeded.
          required: []
        name:
          type: string
          const: rate-limiting-advanced
      required:
        - config
    RateLimitingAdvancedPlugin:
      x-speakeasy-entity: GatewayPluginRateLimitingAdvanced
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/RateLimitingAdvancedPluginConfig'
    CreateRateLimitingAdvancedPlugin:
      x-speakeasy-entity: GatewayPluginRateLimitingAdvanced
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/RateLimitingAdvancedPluginConfig'
    OpenidConnectPluginConfig:
      properties:
        config:
          shorthand_fields:
            authorization_cookie_lifetime:
              type: number
            authorization_cookie_samesite:
              type: string
            authorization_cookie_httponly:
              type: boolean
            session_cookie_lifetime:
              type: number
            session_cookie_idletime:
              type: number
            session_cookie_samesite:
              type: string
            session_cookie_httponly:
              type: boolean
            session_memcache_prefix:
              type: string
            session_memcache_socket:
              type: string
            session_memcache_host:
              type: string
            session_memcache_port:
              type: integer
            session_redis_cluster_maxredirections:
              type: integer
            session_cookie_renew:
              type: number
            session_cookie_maxsize:
              type: integer
            session_strategy:
              type: string
            session_compressor:
              type: string
          type: object
          properties:
            issuer:
              type: string
              description: >-
                The discovery endpoint (or the issuer identifier). When there is
                no discovery endpoint, please also configure
                `config.using_pseudo_issuer=true`.
            using_pseudo_issuer:
              default: false
              type: boolean
              description: >-
                If the plugin uses a pseudo issuer. When set to true, the plugin
                will not discover the configuration from the issuer URL
                specified with `config.issuer`.
            discovery_headers_names:
              required: false
              type: array
              items:
                type: string
              description: Extra header names passed to the discovery endpoint.
            discovery_headers_values:
              required: false
              type: array
              items:
                type: string
              description: Extra header values passed to the discovery endpoint.
            extra_jwks_uris:
              required: false
              type: array
              items:
                type: string
                description: >-
                  A string representing a URL, such as
                  https://example.com/path/to/resource?q=search.
              description: >-
                JWKS URIs whose public keys are trusted (in addition to the keys
                found with the discovery).
            rediscovery_lifetime:
              default: 30
              type: number
              description: >-
                Specifies how long (in seconds) the plugin waits between
                discovery attempts. Discovery is still triggered on an as-needed
                basis.
            auth_methods:
              type: array
              items:
                type: string
                enum:
                  - password
                  - client_credentials
                  - authorization_code
                  - bearer
                  - introspection
                  - userinfo
                  - kong_oauth2
                  - refresh_token
                  - session
              default:
                - password
                - client_credentials
                - authorization_code
                - bearer
                - introspection
                - userinfo
                - kong_oauth2
                - refresh_token
                - session
              description: Types of credentials/grants to enable.
            client_id:
              type: array
              encrypted: true
              required: false
              items:
                type: string
                referenceable: true
              description: >-
                The client id(s) that the plugin uses when it calls
                authenticated endpoints on the identity provider.
            client_secret:
              type: array
              encrypted: true
              required: false
              items:
                type: string
                referenceable: true
              description: The client secret.
            client_auth:
              required: false
              type: array
              items:
                type: string
                enum:
                  - client_secret_basic
                  - client_secret_post
                  - client_secret_jwt
                  - private_key_jwt
                  - tls_client_auth
                  - self_signed_tls_client_auth
                  - none
              description: >-
                The default OpenID Connect client authentication method is
                'client_secret_basic' (using 'Authorization: Basic' header),
                'client_secret_post' (credentials in body), 'client_secret_jwt'
                (signed client assertion in body), 'private_key_jwt' (private
                key-signed assertion), 'tls_client_auth' (client certificate),
                'self_signed_tls_client_auth' (self-signed client certificate),
                and 'none' (no authentication).
            client_jwk:
              required: false
              type: array
              items:
                type: object
                required: false
                properties:
                  issuer:
                    type: string
                    required: false
                  kty:
                    type: string
                    required: false
                  use:
                    type: string
                    required: false
                  key_ops:
                    required: false
                    items:
                      type: string
                      required: false
                    type: array
                  alg:
                    type: string
                    required: false
                  kid:
                    type: string
                    required: false
                  x5u:
                    type: string
                    required: false
                  x5c:
                    required: false
                    items:
                      type: string
                      required: false
                    type: array
                  x5t:
                    type: string
                    required: false
                  x5t#S256:
                    type: string
                    required: false
                  k:
                    required: false
                    referenceable: true
                    encrypted: true
                    type: string
                  x:
                    type: string
                    required: false
                  'y':
                    type: string
                    required: false
                  crv:
                    type: string
                    required: false
                  'n':
                    type: string
                    required: false
                  e:
                    type: string
                    required: false
                  d:
                    required: false
                    referenceable: true
                    encrypted: true
                    type: string
                  p:
                    required: false
                    referenceable: true
                    encrypted: true
                    type: string
                  q:
                    required: false
                    referenceable: true
                    encrypted: true
                    type: string
                  dp:
                    required: false
                    referenceable: true
                    encrypted: true
                    type: string
                  dq:
                    required: false
                    referenceable: true
                    encrypted: true
                    type: string
                  qi:
                    required: false
                    referenceable: true
                    encrypted: true
                    type: string
                  oth:
                    required: false
                    referenceable: true
                    encrypted: true
                    type: string
                  r:
                    required: false
                    referenceable: true
                    encrypted: true
                    type: string
                  t:
                    required: false
                    referenceable: true
                    encrypted: true
                    type: string
              description: The JWK used for the private_key_jwt authentication.
            client_alg:
              required: false
              type: array
              items:
                type: string
                enum:
                  - HS256
                  - HS384
                  - HS512
                  - RS256
                  - RS384
                  - RS512
                  - ES256
                  - ES384
                  - ES512
                  - PS256
                  - PS384
                  - PS512
                  - EdDSA
              description: >-
                The algorithm to use for client_secret_jwt (only HS***) or
                private_key_jwt authentication.
            client_arg:
              default: client_id
              type: string
              description: >-
                The client to use for this request (the selection is made with a
                request parameter with the same name).
            redirect_uri:
              required: false
              type: array
              items:
                type: string
                description: >-
                  A string representing a URL, such as
                  https://example.com/path/to/resource?q=search.
              description: >-
                The redirect URI passed to the authorization and token
                endpoints.
            login_redirect_uri:
              required: false
              type: array
              items:
                referenceable: true
                type: string
                description: >-
                  A string representing a URL, such as
                  https://example.com/path/to/resource?q=search.
              description: >-
                Where to redirect the client when `login_action` is set to
                `redirect`.
            logout_redirect_uri:
              required: false
              type: array
              items:
                referenceable: true
                type: string
                description: >-
                  A string representing a URL, such as
                  https://example.com/path/to/resource?q=search.
              description: Where to redirect the client after the logout.
            forbidden_redirect_uri:
              required: false
              type: array
              items:
                type: string
                description: >-
                  A string representing a URL, such as
                  https://example.com/path/to/resource?q=search.
              description: Where to redirect the client on forbidden requests.
            forbidden_error_message:
              default: Forbidden
              type: string
              description: >-
                The error message for the forbidden requests (when not using the
                redirection).
            forbidden_destroy_session:
              default: true
              type: boolean
              description: Destroy any active session for the forbidden requests.
            unauthorized_destroy_session:
              default: true
              type: boolean
              description: Destroy any active session for the unauthorized requests.
            unauthorized_redirect_uri:
              required: false
              type: array
              items:
                type: string
                description: >-
                  A string representing a URL, such as
                  https://example.com/path/to/resource?q=search.
              description: Where to redirect the client on unauthorized requests.
            unauthorized_error_message:
              default: Unauthorized
              type: string
              description: >-
                The error message for the unauthorized requests (when not using
                the redirection).
            unexpected_redirect_uri:
              required: false
              type: array
              items:
                type: string
                description: >-
                  A string representing a URL, such as
                  https://example.com/path/to/resource?q=search.
              description: >-
                Where to redirect the client when unexpected errors happen with
                the requests.
            response_mode:
              type: string
              enum:
                - query
                - form_post
                - fragment
              default: query
              description: >-
                The response mode passed to the authorization endpoint: -
                `query`: Instructs the identity provider to pass parameters in
                query string - `form_post`: Instructs the identity provider to
                pass parameters in request body - `fragment`: Instructs the
                identity provider to pass parameters in uri fragment (rarely
                useful as the plugin itself cannot read it).
            response_type:
              type: array
              items:
                type: string
              default:
                - code
              description: The response type passed to the authorization endpoint.
            scopes:
              type: array
              items:
                type: string
                referenceable: true
              default:
                - openid
              description: The scopes passed to the authorization and token endpoints.
            audience:
              required: false
              type: array
              items:
                type: string
              description: The audience passed to the authorization endpoint.
            issuers_allowed:
              required: false
              type: array
              items:
                type: string
              description: The issuers allowed to be present in the tokens (`iss` claim).
            scopes_required:
              required: false
              type: array
              items:
                type: string
              description: >-
                The scopes (`scopes_claim` claim) required to be present in the
                access token (or introspection results) for successful
                authorization. This config parameter works in both **AND** /
                **OR** cases.
            scopes_claim:
              type: array
              items:
                type: string
              default:
                - scope
              description: >-
                The claim that contains the scopes. If multiple values are set,
                it means the claim is inside a nested object of the token
                payload.
            audience_required:
              required: false
              type: array
              items:
                type: string
              description: >-
                The audiences (`audience_claim` claim) required to be present in
                the access token (or introspection results) for successful
                authorization. This config parameter works in both **AND** /
                **OR** cases.
            audience_claim:
              type: array
              items:
                type: string
              default:
                - aud
              description: >-
                The claim that contains the audience. If multiple values are
                set, it means the claim is inside a nested object of the token
                payload.
            groups_required:
              required: false
              type: array
              items:
                type: string
              description: >-
                The groups (`groups_claim` claim) required to be present in the
                access token (or introspection results) for successful
                authorization. This config parameter works in both **AND** /
                **OR** cases.
            groups_claim:
              type: array
              items:
                type: string
              default:
                - groups
              description: >-
                The claim that contains the groups. If multiple values are set,
                it means the claim is inside a nested object of the token
                payload.
            roles_required:
              required: false
              type: array
              items:
                type: string
              description: >-
                The roles (`roles_claim` claim) required to be present in the
                access token (or introspection results) for successful
                authorization. This config parameter works in both **AND** /
                **OR** cases.
            roles_claim:
              type: array
              items:
                type: string
              default:
                - roles
              description: >-
                The claim that contains the roles. If multiple values are set,
                it means the claim is inside a nested object of the token
                payload.
            domains:
              required: false
              type: array
              items:
                type: string
              description: The allowed values for the `hd` claim.
            max_age:
              type: number
              required: false
              description: The maximum age (in seconds) compared to the `auth_time` claim.
            authenticated_groups_claim:
              required: false
              type: array
              items:
                type: string
              description: >-
                The claim that contains authenticated groups. This setting can
                be used together with ACL plugin, but it also enables IdP
                managed groups with other applications and integrations. If
                multiple values are set, it means the claim is inside a nested
                object of the token payload.
            pushed_authorization_request_endpoint:
              required: false
              type: string
              description: >-
                The pushed authorization endpoint. If set it overrides the value
                in `pushed_authorization_request_endpoint` returned by the
                discovery endpoint.
            pushed_authorization_request_endpoint_auth_method:
              type: string
              enum:
                - client_secret_basic
                - client_secret_post
                - client_secret_jwt
                - private_key_jwt
                - tls_client_auth
                - self_signed_tls_client_auth
                - none
              required: false
              description: >-
                The pushed authorization request endpoint authentication method:
                `client_secret_basic`, `client_secret_post`,
                `client_secret_jwt`, `private_key_jwt`, `tls_client_auth`,
                `self_signed_tls_client_auth`, or `none`: do not authenticate
            require_pushed_authorization_requests:
              type: boolean
              required: false
              description: >-
                Forcibly enable or disable the pushed authorization requests.
                When not set the value is determined through the discovery using
                the value of `require_pushed_authorization_requests` (which
                defaults to `false`).
            require_proof_key_for_code_exchange:
              type: boolean
              required: false
              description: >-
                Forcibly enable or disable the proof key for code exchange. When
                not set the value is determined through the discovery using the
                value of `code_challenge_methods_supported`, and enabled
                automatically (in case the `code_challenge_methods_supported` is
                missing, the PKCE will not be enabled).
            authorization_endpoint:
              required: false
              type: string
              description: >-
                The authorization endpoint. If set it overrides the value in
                `authorization_endpoint` returned by the discovery endpoint.
            authorization_query_args_names:
              required: false
              type: array
              items:
                type: string
              description: Extra query argument names passed to the authorization endpoint.
            authorization_query_args_values:
              required: false
              type: array
              items:
                type: string
              description: >-
                Extra query argument values passed to the authorization
                endpoint.
            authorization_query_args_client:
              required: false
              type: array
              items:
                type: string
              description: >-
                Extra query arguments passed from the client to the
                authorization endpoint.
            authorization_rolling_timeout:
              default: 600
              type: number
              description: >-
                Specifies how long the session used for the authorization code
                flow can be used in seconds until it needs to be renewed. 0
                disables the checks and rolling.
            authorization_cookie_name:
              default: authorization
              type: string
              description: The authorization cookie name.
            authorization_cookie_path:
              type: string
              starts_with: /
              match_none:
                pattern: //
                err: must not have empty segments
              default: /
              description: The authorization cookie Path flag.
            authorization_cookie_domain:
              type: string
              required: false
              description: The authorization cookie Domain flag.
            authorization_cookie_same_site:
              type: string
              enum:
                - Strict
                - Lax
                - None
                - Default
              default: Default
              description: >-
                Controls whether a cookie is sent with cross-origin requests,
                providing some protection against cross-site request forgery
                attacks.
            authorization_cookie_http_only:
              default: true
              type: boolean
              description: >-
                Forbids JavaScript from accessing the cookie, for example,
                through the `Document.cookie` property.
            authorization_cookie_secure:
              type: boolean
              required: false
              description: >-
                Cookie is only sent to the server when a request is made with
                the https: scheme (except on localhost), and therefore is more
                resistant to man-in-the-middle attacks.
            preserve_query_args:
              default: false
              type: boolean
              description: >-
                With this parameter, you can preserve request query arguments
                even when doing authorization code flow.
            token_endpoint:
              required: false
              type: string
              description: >-
                The token endpoint. If set it overrides the value in
                `token_endpoint` returned by the discovery endpoint.
            token_endpoint_auth_method:
              type: string
              enum:
                - client_secret_basic
                - client_secret_post
                - client_secret_jwt
                - private_key_jwt
                - tls_client_auth
                - self_signed_tls_client_auth
                - none
              required: false
              description: >-
                The token endpoint authentication method: `client_secret_basic`,
                `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
                `tls_client_auth`, `self_signed_tls_client_auth`, or `none`: do
                not authenticate
            token_headers_names:
              required: false
              type: array
              items:
                type: string
              description: Extra header names passed to the token endpoint.
            token_headers_values:
              required: false
              type: array
              items:
                type: string
              description: Extra header values passed to the token endpoint.
            token_headers_client:
              required: false
              type: array
              items:
                type: string
              description: Extra headers passed from the client to the token endpoint.
            token_headers_replay:
              required: false
              type: array
              items:
                type: string
              description: >-
                The names of token endpoint response headers to forward to the
                downstream client.
            token_headers_prefix:
              type: string
              required: false
              description: >-
                Add a prefix to the token endpoint response headers before
                forwarding them to the downstream client.
            token_headers_grants:
              required: false
              type: array
              items:
                type: string
                enum:
                  - password
                  - client_credentials
                  - authorization_code
                  - refresh_token
              description: >-
                Enable the sending of the token endpoint response headers only
                with certain grants: - `password`: with OAuth password grant -
                `client_credentials`: with OAuth client credentials grant -
                `authorization_code`: with authorization code flow -
                `refresh_token` with refresh token grant.
            token_post_args_names:
              required: false
              type: array
              items:
                type: string
              description: Extra post argument names passed to the token endpoint.
            token_post_args_values:
              required: false
              type: array
              items:
                type: string
              description: Extra post argument values passed to the token endpoint.
            token_post_args_client:
              required: false
              type: array
              items:
                type: string
              description: >-
                Pass extra arguments from the client to the OpenID-Connect
                plugin. If arguments exist, the client can pass them using: -
                Query parameters - Request Body - Reqest Header  This parameter
                can be used with `scope` values, like this: 
                `config.token_post_args_client=scope`  In this case, the token
                would take the `scope` value from the query parameter or from
                the request body or from the header and send it to the token
                endpoint.
            introspection_endpoint:
              required: false
              type: string
              description: >-
                The introspection endpoint. If set it overrides the value in
                `introspection_endpoint` returned by the discovery endpoint.
            introspection_endpoint_auth_method:
              type: string
              enum:
                - client_secret_basic
                - client_secret_post
                - client_secret_jwt
                - private_key_jwt
                - tls_client_auth
                - self_signed_tls_client_auth
                - none
              required: false
              description: >-
                The introspection endpoint authentication method: :
                `client_secret_basic`, `client_secret_post`,
                `client_secret_jwt`, `private_key_jwt`, `tls_client_auth`,
                `self_signed_tls_client_auth`, or `none`: do not authenticate
            introspection_hint:
              default: access_token
              type: string
              description: >-
                Introspection hint parameter value passed to the introspection
                endpoint.
            introspection_check_active:
              default: true
              type: boolean
              description: >-
                Check that the introspection response has an `active` claim with
                a value of `true`.
            introspection_accept:
              type: string
              enum:
                - application/json
                - application/token-introspection+jwt
                - application/jwt
              default: application/json
              description: >-
                The value of `Accept` header for introspection requests: -
                `application/json`: introspection response as JSON -
                `application/token-introspection+jwt`: introspection response as
                JWT (from the current IETF draft document) - `application/jwt`:
                introspection response as JWT (from the obsolete IETF draft
                document).
            introspection_headers_names:
              required: false
              type: array
              items:
                type: string
              description: Extra header names passed to the introspection endpoint.
            introspection_headers_values:
              required: false
              type: array
              items:
                type: string
              description: Extra header values passed to the introspection endpoint.
            introspection_headers_client:
              required: false
              type: array
              items:
                type: string
              description: >-
                Extra headers passed from the client to the introspection
                endpoint.
            introspection_post_args_names:
              required: false
              type: array
              items:
                type: string
              description: Extra post argument names passed to the introspection endpoint.
            introspection_post_args_values:
              required: false
              type: array
              items:
                type: string
              description: Extra post argument values passed to the introspection endpoint.
            introspection_post_args_client:
              required: false
              type: array
              items:
                type: string
              description: >-
                Extra post arguments passed from the client to the introspection
                endpoint.
            introspect_jwt_tokens:
              default: false
              type: boolean
              description: >-
                Specifies whether to introspect the JWT access tokens (can be
                used to check for revocations).
            revocation_endpoint:
              required: false
              type: string
              description: >-
                The revocation endpoint. If set it overrides the value in
                `revocation_endpoint` returned by the discovery endpoint.
            revocation_endpoint_auth_method:
              type: string
              enum:
                - client_secret_basic
                - client_secret_post
                - client_secret_jwt
                - private_key_jwt
                - tls_client_auth
                - self_signed_tls_client_auth
                - none
              required: false
              description: >-
                The revocation endpoint authentication method: :
                `client_secret_basic`, `client_secret_post`,
                `client_secret_jwt`, `private_key_jwt`, `tls_client_auth`,
                `self_signed_tls_client_auth`, or `none`: do not authenticate
            end_session_endpoint:
              required: false
              type: string
              description: >-
                The end session endpoint. If set it overrides the value in
                `end_session_endpoint` returned by the discovery endpoint.
            userinfo_endpoint:
              required: false
              type: string
              description: >-
                The user info endpoint. If set it overrides the value in
                `userinfo_endpoint` returned by the discovery endpoint.
            userinfo_accept:
              type: string
              enum:
                - application/json
                - application/jwt
              default: application/json
              description: >-
                The value of `Accept` header for user info requests: -
                `application/json`: user info response as JSON -
                `application/jwt`: user info response as JWT (from the obsolete
                IETF draft document).
            userinfo_headers_names:
              required: false
              type: array
              items:
                type: string
              description: Extra header names passed to the user info endpoint.
            userinfo_headers_values:
              required: false
              type: array
              items:
                type: string
              description: Extra header values passed to the user info endpoint.
            userinfo_headers_client:
              required: false
              type: array
              items:
                type: string
              description: Extra headers passed from the client to the user info endpoint.
            userinfo_query_args_names:
              required: false
              type: array
              items:
                type: string
              description: Extra query argument names passed to the user info endpoint.
            userinfo_query_args_values:
              required: false
              type: array
              items:
                type: string
              description: Extra query argument values passed to the user info endpoint.
            userinfo_query_args_client:
              required: false
              type: array
              items:
                type: string
              description: >-
                Extra query arguments passed from the client to the user info
                endpoint.
            token_exchange_endpoint:
              required: false
              type: string
              description: The token exchange endpoint.
            session_secret:
              type: string
              required: false
              referenceable: true
              encrypted: true
              description: The session secret.
            session_audience:
              default: default
              type: string
              description: >-
                The session audience, which is the intended target application.
                For example `"my-application"`.
            session_cookie_name:
              default: session
              type: string
              description: The session cookie name.
            session_remember:
              default: false
              type: boolean
              description: Enables or disables persistent sessions.
            session_remember_cookie_name:
              default: remember
              type: string
              description: >-
                Persistent session cookie name. Use with the `remember`
                configuration parameter.
            session_remember_rolling_timeout:
              default: 604800
              type: number
              description: >-
                Specifies how long the persistent session is considered valid in
                seconds. 0 disables the checks and rolling.
            session_remember_absolute_timeout:
              default: 2592000
              type: number
              description: >-
                Limits how long the persistent session can be renewed in
                seconds, until re-authentication is required. 0 disables the
                checks.
            session_idling_timeout:
              default: 900
              type: number
              description: >-
                Specifies how long the session can be inactive until it is
                considered invalid in seconds. 0 disables the checks and
                touching.
            session_rolling_timeout:
              default: 3600
              type: number
              description: >-
                Specifies how long the session can be used in seconds until it
                needs to be renewed. 0 disables the checks and rolling.
            session_absolute_timeout:
              default: 86400
              type: number
              description: >-
                Limits how long the session can be renewed in seconds, until
                re-authentication is required. 0 disables the checks.
            session_cookie_path:
              type: string
              starts_with: /
              match_none:
                pattern: //
                err: must not have empty segments
              default: /
              description: The session cookie Path flag.
            session_cookie_domain:
              type: string
              required: false
              description: The session cookie Domain flag.
            session_cookie_same_site:
              type: string
              enum:
                - Strict
                - Lax
                - None
                - Default
              default: Lax
              description: >-
                Controls whether a cookie is sent with cross-origin requests,
                providing some protection against cross-site request forgery
                attacks.
            session_cookie_http_only:
              default: true
              type: boolean
              description: >-
                Forbids JavaScript from accessing the cookie, for example,
                through the `Document.cookie` property.
            session_cookie_secure:
              type: boolean
              required: false
              description: >-
                Cookie is only sent to the server when a request is made with
                the https: scheme (except on localhost), and therefore is more
                resistant to man-in-the-middle attacks.
            session_request_headers:
              type: array
              required: false
              items:
                type: string
                enum:
                  - id
                  - audience
                  - subject
                  - timeout
                  - idling-timeout
                  - rolling-timeout
                  - absolute-timeout
              description: >-
                Set of headers to send to upstream, use id, audience, subject,
                timeout, idling-timeout, rolling-timeout, absolute-timeout. E.g.
                `[ "id", "timeout" ]` will set Session-Id and Session-Timeout
                request headers.
            session_response_headers:
              type: array
              required: false
              items:
                type: string
                enum:
                  - id
                  - audience
                  - subject
                  - timeout
                  - idling-timeout
                  - rolling-timeout
                  - absolute-timeout
              description: >-
                Set of headers to send to downstream, use id, audience, subject,
                timeout, idling-timeout, rolling-timeout, absolute-timeout. E.g.
                `[ "id", "timeout" ]` will set Session-Id and Session-Timeout
                response headers.
            session_storage:
              type: string
              enum:
                - cookie
                - memcache
                - memcached
                - redis
              default: cookie
              description: >-
                The session storage for session data: - `cookie`: stores session
                data with the session cookie (the session cannot be invalidated
                or revoked without changing session secret, but is stateless,
                and doesn't require a database) - `memcache`: stores session
                data in memcached - `redis`: stores session data in Redis.
            session_store_metadata:
              default: false
              type: boolean
              description: >-
                Configures whether or not session metadata should be stored.
                This metadata includes information about the active sessions for
                a specific audience belonging to a specific subject.
            session_enforce_same_subject:
              default: false
              type: boolean
              description: >-
                When set to `true`, audiences are forced to share the same
                subject.
            session_hash_subject:
              default: false
              type: boolean
              description: >-
                When set to `true`, the value of subject is hashed before being
                stored. Only applies when `session_store_metadata` is enabled.
            session_hash_storage_key:
              default: false
              type: boolean
              description: >-
                When set to `true`, the storage key (session ID) is hashed for
                extra security. Hashing the storage key means it is impossible
                to decrypt data from the storage without a cookie.
            session_memcached_prefix:
              type: string
              required: false
              description: The memcached session key prefix.
            session_memcached_socket:
              type: string
              required: false
              description: The memcached unix socket path.
            session_memcached_host:
              default: 127.0.0.1
              type: string
              description: The memcached host.
            session_memcached_port:
              minimum: 0
              maximum: 65535
              type: integer
              default: 11211
              description: The memcached port.
            session_redis_prefix:
              type: string
              required: false
              description: The Redis session key prefix.
            session_redis_socket:
              type: string
              required: false
              description: The Redis unix socket path.
            session_redis_host:
              default: 127.0.0.1
              type: string
              description: The Redis host.
            session_redis_port:
              minimum: 0
              maximum: 65535
              type: integer
              default: 6379
              description: The Redis port.
            session_redis_username:
              type: string
              referenceable: true
              required: false
              description: >-
                Username to use for Redis connection when the `redis` session
                storage is defined and ACL authentication is desired. If
                undefined, ACL authentication will not be performed. This
                requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you
                can set it to `default`.
            session_redis_password:
              type: string
              required: false
              referenceable: true
              encrypted: true
              description: >-
                Password to use for Redis connection when the `redis` session
                storage is defined. If undefined, no AUTH commands are sent to
                Redis.
            session_redis_connect_timeout:
              type: integer
              required: false
              description: Session redis connection timeout in milliseconds.
            session_redis_read_timeout:
              type: integer
              required: false
              description: Session redis read timeout in milliseconds.
            session_redis_send_timeout:
              type: integer
              required: false
              description: Session redis send timeout in milliseconds.
            session_redis_ssl:
              default: false
              type: boolean
              description: Use SSL/TLS for Redis connection.
            session_redis_ssl_verify:
              default: false
              type: boolean
              description: Verify identity provider server certificate.
            session_redis_server_name:
              type: string
              required: false
              description: The SNI used for connecting the Redis server.
            session_redis_cluster_nodes:
              required: false
              type: array
              items:
                type: object
                properties:
                  ip:
                    default: 127.0.0.1
                    type: string
                    description: A string representing a host name, such as example.com.
                  port:
                    minimum: 0
                    maximum: 65535
                    default: 6379
                    type: integer
                    description: >-
                      An integer representing a port number between 0 and 65535,
                      inclusive.
              description: >-
                The Redis cluster node host. Takes an array of host records,
                with either `ip` or `host`, and `port` values.
            session_redis_cluster_max_redirections:
              type: integer
              required: false
              description: The Redis cluster maximum redirects.
            reverify:
              default: false
              type: boolean
              description: Specifies whether to always verify tokens stored in the session.
            jwt_session_claim:
              default: sid
              type: string
              description: The claim to match against the JWT session cookie.
            jwt_session_cookie:
              type: string
              required: false
              description: The name of the JWT session cookie.
            bearer_token_param_type:
              type: array
              items:
                type: string
                enum:
                  - header
                  - cookie
                  - query
                  - body
              default:
                - header
                - query
                - body
              description: >-
                Where to look for the bearer token: - `header`: search the HTTP
                headers - `query`: search the URL's query string - `body`:
                search the HTTP request body - `cookie`: search the HTTP request
                cookies specified with `config.bearer_token_cookie_name`.
            bearer_token_cookie_name:
              type: string
              required: false
              description: The name of the cookie in which the bearer token is passed.
            client_credentials_param_type:
              type: array
              items:
                type: string
                enum:
                  - header
                  - query
                  - body
              default:
                - header
                - query
                - body
              description: >-
                Where to look for the client credentials: - `header`: search the
                HTTP headers - `query`: search the URL's query string - `body`:
                search from the HTTP request body.
            password_param_type:
              type: array
              items:
                type: string
                enum:
                  - header
                  - query
                  - body
              default:
                - header
                - query
                - body
              description: >-
                Where to look for the username and password: - `header`: search
                the HTTP headers - `query`: search the URL's query string -
                `body`: search the HTTP request body.
            id_token_param_type:
              type: array
              items:
                type: string
                enum:
                  - header
                  - query
                  - body
              default:
                - header
                - query
                - body
              description: >-
                Where to look for the id token: - `header`: search the HTTP
                headers - `query`: search the URL's query string - `body`:
                search the HTTP request body.
            id_token_param_name:
              type: string
              required: false
              description: The name of the parameter used to pass the id token.
            refresh_token_param_type:
              type: array
              items:
                type: string
                enum:
                  - header
                  - query
                  - body
              default:
                - header
                - query
                - body
              description: >-
                Where to look for the refresh token: - `header`: search the HTTP
                headers - `query`: search the URL's query string - `body`:
                search the HTTP request body.
            refresh_token_param_name:
              type: string
              required: false
              description: The name of the parameter used to pass the refresh token.
            refresh_tokens:
              default: true
              type: boolean
              description: >-
                Specifies whether the plugin should try to refresh (soon to be)
                expired access tokens if the plugin has a `refresh_token`
                available.
            upstream_headers_claims:
              required: false
              type: array
              items:
                type: string
              description: >-
                The upstream header claims. If multiple values are set, it means
                the claim is inside a nested object of the token payload.
            upstream_headers_names:
              required: false
              type: array
              items:
                type: string
              description: The upstream header names for the claim values.
            upstream_access_token_header:
              default: authorization:bearer
              type: string
              description: The upstream access token header.
            upstream_access_token_jwk_header:
              type: string
              required: false
              description: The upstream access token JWK header.
            upstream_id_token_header:
              type: string
              required: false
              description: The upstream id token header.
            upstream_id_token_jwk_header:
              type: string
              required: false
              description: The upstream id token JWK header.
            upstream_refresh_token_header:
              type: string
              required: false
              description: The upstream refresh token header.
            upstream_user_info_header:
              type: string
              required: false
              description: The upstream user info header.
            upstream_user_info_jwt_header:
              type: string
              required: false
              description: >-
                The upstream user info JWT header (in case the user info returns
                a JWT response).
            upstream_introspection_header:
              type: string
              required: false
              description: The upstream introspection header.
            upstream_introspection_jwt_header:
              type: string
              required: false
              description: The upstream introspection JWT header.
            upstream_session_id_header:
              type: string
              required: false
              description: The upstream session id header.
            downstream_headers_claims:
              required: false
              type: array
              items:
                type: string
              description: >-
                The downstream header claims. If multiple values are set, it
                means the claim is inside a nested object of the token payload.
            downstream_headers_names:
              required: false
              type: array
              items:
                type: string
              description: The downstream header names for the claim values.
            downstream_access_token_header:
              type: string
              required: false
              description: The downstream access token header.
            downstream_access_token_jwk_header:
              type: string
              required: false
              description: The downstream access token JWK header.
            downstream_id_token_header:
              type: string
              required: false
              description: The downstream id token header.
            downstream_id_token_jwk_header:
              type: string
              required: false
              description: The downstream id token JWK header.
            downstream_refresh_token_header:
              type: string
              required: false
              description: The downstream refresh token header.
            downstream_user_info_header:
              type: string
              required: false
              description: The downstream user info header.
            downstream_user_info_jwt_header:
              type: string
              required: false
              description: >-
                The downstream user info JWT header (in case the user info
                returns a JWT response).
            downstream_introspection_header:
              type: string
              required: false
              description: The downstream introspection header.
            downstream_introspection_jwt_header:
              type: string
              required: false
              description: The downstream introspection JWT header.
            downstream_session_id_header:
              type: string
              required: false
              description: The downstream session id header.
            login_methods:
              type: array
              items:
                type: string
                enum:
                  - password
                  - client_credentials
                  - authorization_code
                  - bearer
                  - introspection
                  - userinfo
                  - kong_oauth2
                  - refresh_token
                  - session
              default:
                - authorization_code
              description: Enable login functionality with specified grants.
            login_action:
              type: string
              enum:
                - upstream
                - response
                - redirect
              default: upstream
              description: >-
                What to do after successful login: - `upstream`: proxy request
                to upstream service - `response`: terminate request with a
                response - `redirect`: redirect to a different location.
            login_tokens:
              type: array
              items:
                type: string
                enum:
                  - id_token
                  - access_token
                  - refresh_token
                  - tokens
                  - introspection
              default:
                - id_token
              description: >-
                What tokens to include in `response` body or `redirect` query
                string or fragment: - `id_token`: include id token -
                `access_token`: include access token - `refresh_token`: include
                refresh token - `tokens`: include the full token endpoint
                response - `introspection`: include introspection response.
            login_redirect_mode:
              type: string
              enum:
                - query
                - fragment
              default: fragment
              description: >-
                Where to place `login_tokens` when using `redirect`
                `login_action`: - `query`: place tokens in query string -
                `fragment`: place tokens in url fragment (not readable by
                servers).
            logout_query_arg:
              type: string
              required: false
              description: The request query argument that activates the logout.
            logout_post_arg:
              type: string
              required: false
              description: The request body argument that activates the logout.
            logout_uri_suffix:
              type: string
              required: false
              description: The request URI suffix that activates the logout.
            logout_methods:
              type: array
              items:
                type: string
                enum:
                  - POST
                  - GET
                  - DELETE
              default:
                - POST
                - DELETE
              description: >-
                The request methods that can activate the logout: - `POST`: HTTP
                POST method - `GET`: HTTP GET method - `DELETE`: HTTP DELETE
                method.
            logout_revoke:
              default: false
              type: boolean
              description: >-
                Revoke tokens as part of the logout.


                For more granular token revocation, you can also adjust the
                `logout_revoke_access_token` and `logout_revoke_refresh_token`
                parameters.
            logout_revoke_access_token:
              default: true
              type: boolean
              description: >-
                Revoke the access token as part of the logout. Requires
                `logout_revoke` to be set to `true`.
            logout_revoke_refresh_token:
              default: true
              type: boolean
              description: >-
                Revoke the refresh token as part of the logout. Requires
                `logout_revoke` to be set to `true`.
            consumer_claim:
              required: false
              type: array
              items:
                type: string
              description: >-
                The claim used for consumer mapping. If multiple values are set,
                it means the claim is inside a nested object of the token
                payload.
            consumer_by:
              type: array
              items:
                type: string
                enum:
                  - id
                  - username
                  - custom_id
              default:
                - username
                - custom_id
              description: >-
                Consumer fields used for mapping: - `id`: try to find the
                matching Consumer by `id` - `username`: try to find the matching
                Consumer by `username` - `custom_id`: try to find the matching
                Consumer by `custom_id`.
            consumer_optional:
              default: false
              type: boolean
              description: Do not terminate the request if consumer mapping fails.
            credential_claim:
              type: array
              items:
                type: string
              default:
                - sub
              description: >-
                The claim used to derive virtual credentials (e.g. to be
                consumed by the rate-limiting plugin), in case the consumer
                mapping is not used. If multiple values are set, it means the
                claim is inside a nested object of the token payload.
            anonymous:
              type: string
              required: false
              description: >-
                An optional string (consumer UUID or username) value that
                functions as an “anonymous” consumer if authentication fails. If
                empty (default null), requests that fail authentication will
                return a `4xx` HTTP status code. This value must refer to the
                consumer `id` or `username` attribute, and **not** its
                `custom_id`.
            run_on_preflight:
              default: true
              type: boolean
              description: >-
                Specifies whether to run this plugin on pre-flight (`OPTIONS`)
                requests.
            leeway:
              default: 0
              type: number
              description: >-
                Allow some leeway (in seconds) on the iat claim and ttl / expiry
                verification.
            verify_parameters:
              default: false
              type: boolean
              description: Verify plugin configuration against discovery.
            verify_nonce:
              default: true
              type: boolean
              description: Verify nonce on authorization code flow.
            verify_claims:
              default: true
              type: boolean
              description: Verify tokens for standard claims.
            verify_signature:
              default: true
              type: boolean
              description: Verify signature of tokens.
            ignore_signature:
              type: array
              items:
                type: string
                enum:
                  - password
                  - client_credentials
                  - authorization_code
                  - refresh_token
                  - session
                  - introspection
                  - userinfo
              default: []
              description: >-
                Skip the token signature verification on certain grants: -
                `password`: OAuth password grant - `client_credentials`: OAuth
                client credentials grant - `authorization_code`: authorization
                code flow - `refresh_token`: OAuth refresh token grant -
                `session`: session cookie authentication - `introspection`:
                OAuth introspection - `userinfo`: OpenID Connect user info
                endpoint authentication.
            enable_hs_signatures:
              default: false
              type: boolean
              description: >-
                Enable shared secret, for example, HS256, signatures (when
                disabled they will not be accepted).
            disable_session:
              required: false
              type: array
              items:
                type: string
                enum:
                  - password
                  - client_credentials
                  - authorization_code
                  - bearer
                  - introspection
                  - userinfo
                  - kong_oauth2
                  - refresh_token
                  - session
              description: Disable issuing the session cookie with the specified grants.
            cache_ttl:
              default: 3600
              type: number
              description: >-
                The default cache ttl in seconds that is used in case the cached
                object does not specify the expiry.
            cache_ttl_max:
              type: number
              required: false
              description: The maximum cache ttl in seconds (enforced).
            cache_ttl_min:
              type: number
              required: false
              description: The minimum cache ttl in seconds (enforced).
            cache_ttl_neg:
              type: number
              required: false
              description: The negative cache ttl in seconds.
            cache_ttl_resurrect:
              type: number
              required: false
              description: The resurrection ttl in seconds.
            cache_tokens:
              default: true
              type: boolean
              description: Cache the token endpoint requests.
            cache_tokens_salt:
              auto: true
              type: string
              required: false
              description: >-
                Salt used for generating the cache key that is used for caching
                the token endpoint requests.
            cache_introspection:
              default: true
              type: boolean
              description: Cache the introspection endpoint requests.
            cache_token_exchange:
              default: true
              type: boolean
              description: Cache the token exchange endpoint requests.
            cache_user_info:
              default: true
              type: boolean
              description: Cache the user info requests.
            search_user_info:
              default: false
              type: boolean
              description: >-
                Specify whether to use the user info endpoint to get additional
                claims for consumer mapping, credential mapping, authenticated
                groups, and upstream and downstream headers.
            hide_credentials:
              default: false
              type: boolean
              description: >-
                Remove the credentials used for authentication from the request.
                If multiple credentials are sent with the same request, the
                plugin will remove those that were used for successful
                authentication.
            http_version:
              default: 1.1
              type: number
              description: >-
                The HTTP version used for the requests by this plugin: - `1.1`:
                HTTP 1.1 (the default) - `1.0`: HTTP 1.0.
            http_proxy:
              required: false
              type: string
              description: The HTTP proxy.
            http_proxy_authorization:
              type: string
              required: false
              description: The HTTP proxy authorization.
            https_proxy:
              required: false
              type: string
              description: The HTTPS proxy.
            https_proxy_authorization:
              type: string
              required: false
              description: The HTTPS proxy authorization.
            no_proxy:
              type: string
              required: false
              description: Do not use proxy with these hosts.
            keepalive:
              default: true
              type: boolean
              description: Use keepalive with the HTTP client.
            ssl_verify:
              default: false
              type: boolean
              description: Verify identity provider server certificate.
            timeout:
              default: 10000
              type: number
              description: Network IO timeout in milliseconds.
            display_errors:
              default: false
              type: boolean
              description: Display errors on failure responses.
            by_username_ignore_case:
              default: false
              type: boolean
              description: >-
                If `consumer_by` is set to `username`, specify whether
                `username` can match consumers case-insensitively.
            resolve_distributed_claims:
              default: false
              type: boolean
              description: >-
                Distributed claims are represented by the `_claim_names` and
                `_claim_sources` members of the JSON object containing the
                claims. If this parameter is set to `true`, the plugin
                explicitly resolves these distributed claims.
            expose_error_code:
              type: boolean
              default: true
              description: >-
                Specifies whether to expose the error code header, as defined in
                RFC 6750. If an authorization request fails, this header is sent
                in the response. Set to `false` to disable.
            token_cache_key_include_scope:
              type: boolean
              default: false
              description: >-
                Include the scope in the token cache key, so token with
                different scopes are considered diffrent tokens.
            introspection_token_param_name:
              default: token
              type: string
              description: Designate token's parameter name for introspection.
            revocation_token_param_name:
              default: token
              type: string
              description: Designate token's parameter name for revocation.
            proof_of_possession_mtls:
              type: string
              enum:
                - 'off'
                - strict
                - optional
              default: 'off'
              description: >-
                Enable mtls proof of possession. If set to strict, all tokens
                (from supported auth_methods: bearer, introspection, and session
                granted with bearer or introspection) are verified, if set to
                optional, only tokens that contain the certificate hash claim
                are verified. If the verification fails, the request will be
                rejected with 401.
            proof_of_possession_auth_methods_validation:
              default: true
              type: boolean
              description: >-
                If set to true, only the auth_methods that are compatible with
                Proof of Possession (PoP) can be configured when PoP is enabled.
                If set to false, all auth_methods will be configurable and PoP
                checks will be silently skipped for those auth_methods that are
                not compatible with PoP.
            tls_client_auth_cert_id:
              uuid: true
              type: string
              description: >-
                ID of the Certificate entity representing the client certificate
                to use for mTLS client authentication for connections between
                Kong and the Auth Server.
              required: false
              auto: false
            tls_client_auth_ssl_verify:
              default: true
              type: boolean
              description: >-
                Verify identity provider server certificate during mTLS client
                authentication.
            mtls_token_endpoint:
              required: false
              type: string
              description: >-
                Alias for the token endpoint to be used for mTLS client
                authentication. If set it overrides the value in
                `mtls_endpoint_aliases` returned by the discovery endpoint.
            mtls_introspection_endpoint:
              required: false
              type: string
              description: >-
                Alias for the introspection endpoint to be used for mTLS client
                authentication. If set it overrides the value in
                `mtls_endpoint_aliases` returned by the discovery endpoint.
            mtls_revocation_endpoint:
              required: false
              type: string
              description: >-
                Alias for the introspection endpoint to be used for mTLS client
                authentication. If set it overrides the value in
                `mtls_endpoint_aliases` returned by the discovery endpoint.
          required: []
        name:
          type: string
          const: openid-connect
      required:
        - config
    OpenidConnectPlugin:
      x-speakeasy-entity: GatewayPluginOpenidConnect
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/OpenidConnectPluginConfig'
    CreateOpenidConnectPlugin:
      x-speakeasy-entity: GatewayPluginOpenidConnect
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/OpenidConnectPluginConfig'
    JWTPluginConfig:
      properties:
        config:
          type: object
          properties:
            uri_param_names:
              items:
                type: string
              type: array
              default:
                - jwt
              description: >-
                A list of querystring parameters that Kong will inspect to
                retrieve JWTs.
            cookie_names:
              items:
                type: string
              type: array
              default: []
              description: A list of cookie names that Kong will inspect to retrieve JWTs.
            key_claim_name:
              type: string
              default: iss
              description: >-
                The name of the claim in which the key identifying the secret
                must be passed. The plugin will attempt to read this claim from
                the JWT payload and the header, in that order.
            secret_is_base64:
              type: boolean
              default: false
              description: >-
                If true, the plugin assumes the credential’s secret to be base64
                encoded. You will need to create a base64-encoded secret for
                your Consumer, and sign your JWT with the original secret.
            claims_to_verify:
              type: array
              items:
                type: string
                enum:
                  - exp
                  - nbf
              description: >-
                A list of registered claims (according to RFC 7519) that Kong
                can verify as well. Accepted values: one of exp or nbf.
            anonymous:
              type: string
              description: >-
                An optional string (consumer UUID or username) value to use as
                an “anonymous” consumer if authentication fails.
            run_on_preflight:
              type: boolean
              default: true
              description: >-
                A boolean value that indicates whether the plugin should run
                (and try to authenticate) on OPTIONS preflight requests. If set
                to false, then OPTIONS requests will always be allowed.
            maximum_expiration:
              minimum: 0
              maximum: 31536000
              type: number
              default: 0
              description: >-
                A value between 0 and 31536000 (365 days) limiting the lifetime
                of the JWT to maximum_expiration seconds in the future.
            header_names:
              items:
                type: string
              type: array
              default:
                - authorization
              description: >-
                A list of HTTP header names that Kong will inspect to retrieve
                JWTs.
        name:
          type: string
          const: jwt
      required: []
    JWTPlugin:
      x-speakeasy-entity: GatewayPluginJWT
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/JWTPluginConfig'
    CreateJWTPlugin:
      x-speakeasy-entity: GatewayPluginJWT
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/JWTPluginConfig'
    PrometheusPluginConfig:
      properties:
        config:
          type: object
          properties:
            per_consumer:
              default: false
              type: boolean
              description: >-
                A boolean value that determines if per-consumer metrics should
                be collected. If enabled, the `kong_http_requests_total` and
                `kong_bandwidth_bytes` metrics fill in the consumer label when
                available.
            status_code_metrics:
              default: false
              type: boolean
              description: >-
                A boolean value that determines if status code metrics should be
                collected. If enabled, `http_requests_total`,
                `stream_sessions_total` metrics will be exported.
            latency_metrics:
              default: false
              type: boolean
              description: >-
                A boolean value that determines if status code metrics should be
                collected. If enabled, `kong_latency_ms`, `upstream_latency_ms`
                and `request_latency_ms` metrics will be exported.
            bandwidth_metrics:
              default: false
              type: boolean
              description: >-
                A boolean value that determines if status code metrics should be
                collected. If enabled, `bandwidth_bytes` and
                `stream_sessions_total` metrics will be exported.
            upstream_health_metrics:
              default: false
              type: boolean
              description: >-
                A boolean value that determines if status code metrics should be
                collected. If enabled, `upstream_target_health` metric will be
                exported.
        name:
          type: string
          const: prometheus
      required: []
    PrometheusPlugin:
      x-speakeasy-entity: GatewayPluginPrometheus
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/PrometheusPluginConfig'
    CreatePrometheusPlugin:
      x-speakeasy-entity: GatewayPluginPrometheus
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/PrometheusPluginConfig'
    ACLPluginConfig:
      properties:
        config:
          type: object
          properties:
            allow:
              type: array
              description: >-
                Arbitrary group names that are allowed to consume the service or
                route. One of `config.allow` or `config.deny` must be specified.
              items:
                type: string
            deny:
              type: array
              description: >-
                Arbitrary group names that are not allowed to consume the
                service or route. One of `config.allow` or `config.deny` must be
                specified.
              items:
                type: string
            hide_groups_header:
              default: false
              type: boolean
              description: >-
                If enabled (`true`), prevents the `X-Consumer-Groups` header
                from being sent in the request to the upstream service.
            include_consumer_groups:
              type: boolean
              default: false
        name:
          type: string
          const: acl
      required: []
    ACLPlugin:
      x-speakeasy-entity: GatewayPluginACL
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/ACLPluginConfig'
    CreateACLPlugin:
      x-speakeasy-entity: GatewayPluginACL
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/ACLPluginConfig'
    RequestTerminationPluginConfig:
      properties:
        config:
          type: object
          properties:
            status_code:
              minimum: 100
              maximum: 599
              type: integer
              default: 503
              description: >-
                The response code to send. Must be an integer between 100 and
                599.
            message:
              type: string
              description: The message to send, if using the default response generator.
            content_type:
              type: string
              description: Content type of the raw response configured with `config.body`.
            body:
              type: string
              description: >-
                The raw response body to send. This is mutually exclusive with
                the `config.message` field.
            echo:
              default: false
              type: boolean
              description: >-
                When set, the plugin will echo a copy of the request back to the
                client. The main usecase for this is debugging. It can be
                combined with `trigger` in order to debug requests on live
                systems without disturbing real traffic.
            trigger:
              type: string
              description: A string representing an HTTP header name.
        name:
          type: string
          const: request-termination
      required: []
    RequestTerminationPlugin:
      x-speakeasy-entity: GatewayPluginRequestTermination
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/RequestTerminationPluginConfig'
    CreateRequestTerminationPlugin:
      x-speakeasy-entity: GatewayPluginRequestTermination
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/RequestTerminationPluginConfig'
    FileLogPluginConfig:
      properties:
        config:
          type: object
          properties:
            path:
              pattern: ^[^*&%%\`]+$
              type: string
              err: not a valid filename
              description: >-
                The file path of the output log file. The plugin creates the log
                file if it doesn't exist yet.
            reopen:
              type: boolean
              default: false
              description: >-
                Determines whether the log file is closed and reopened on every
                request.
            custom_fields_by_lua:
              additionalProperties: true
              type: object
              description: Lua code as a key-value map
          required: []
        name:
          type: string
          const: file-log
      required:
        - config
    FileLogPlugin:
      x-speakeasy-entity: GatewayPluginFileLog
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/FileLogPluginConfig'
    CreateFileLogPlugin:
      x-speakeasy-entity: GatewayPluginFileLog
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/FileLogPluginConfig'
    RequestTransformerPluginConfig:
      properties:
        config:
          type: object
          properties:
            http_method:
              pattern: ^%u+$
              type: string
              description: >-
                A string representing an HTTP method, such as GET, POST, PUT, or
                DELETE. The string must contain only uppercase letters.
            remove:
              type: object
              properties:
                body:
                  type: array
                  items:
                    type: string
                  default: []
                headers:
                  type: array
                  items:
                    type: string
                  default: []
                querystring:
                  type: array
                  items:
                    type: string
                  default: []
            rename:
              type: object
              properties:
                body:
                  type: array
                  items:
                    type: string
                  default: []
                headers:
                  type: array
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  default: []
                querystring:
                  type: array
                  items:
                    type: string
                  default: []
            replace:
              type: object
              properties:
                body:
                  type: array
                  items:
                    type: string
                  default: []
                headers:
                  type: array
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  default: []
                querystring:
                  type: array
                  items:
                    type: string
                  default: []
                uri:
                  type: string
            add:
              type: object
              properties:
                body:
                  type: array
                  items:
                    type: string
                  default: []
                headers:
                  type: array
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  default: []
                querystring:
                  type: array
                  items:
                    type: string
                  default: []
            append:
              type: object
              properties:
                body:
                  type: array
                  items:
                    type: string
                  default: []
                headers:
                  type: array
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  default: []
                querystring:
                  type: array
                  items:
                    type: string
                  default: []
          required: []
        name:
          type: string
          const: request-transformer
      required:
        - config
    RequestTransformerPlugin:
      x-speakeasy-entity: GatewayPluginRequestTransformer
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/RequestTransformerPluginConfig'
    CreateRequestTransformerPlugin:
      x-speakeasy-entity: GatewayPluginRequestTransformer
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/RequestTransformerPluginConfig'
    CorrelationIdPluginConfig:
      properties:
        config:
          type: object
          properties:
            header_name:
              default: Kong-Request-ID
              type: string
              description: The HTTP header name to use for the correlation ID.
            generator:
              type: string
              enum:
                - uuid
                - uuid#counter
                - tracker
              default: uuid#counter
              description: >-
                The generator to use for the correlation ID. Accepted values are
                `uuid`, `uuid#counter`, and `tracker`. See
                [Generators](#generators).
            echo_downstream:
              type: boolean
              default: false
              description: Whether to echo the header back to downstream (the client).
        name:
          type: string
          const: correlation-id
      required: []
    CorrelationIdPlugin:
      x-speakeasy-entity: GatewayPluginCorrelationId
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/CorrelationIdPluginConfig'
    CreateCorrelationIdPlugin:
      x-speakeasy-entity: GatewayPluginCorrelationId
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/CorrelationIdPluginConfig'
    ProxyCachePluginConfig:
      properties:
        config:
          type: object
          properties:
            response_code:
              type: array
              minLength: 1
              default:
                - 200
                - 301
                - 404
              items:
                type: integer
                minimum: 100
                maximum: 900
              description: Upstream response status code considered cacheable.
            request_method:
              type: array
              items:
                type: string
                enum:
                  - HEAD
                  - GET
                  - POST
                  - PATCH
                  - PUT
              default:
                - GET
                - HEAD
              description: Downstream request methods considered cacheable.
            content_type:
              type: array
              items:
                type: string
              default:
                - text/plain
                - application/json
              description: >-
                Upstream response content types considered cacheable. The plugin
                performs an **exact match** against each specified value.
            cache_ttl:
              type: integer
              minimum: 0
              default: 300
              description: TTL, in seconds, of cache entities.
            strategy:
              type: string
              enum:
                - memory
              description: The backing data store in which to hold cache entities.
            cache_control:
              type: boolean
              default: false
              description: >-
                When enabled, respect the Cache-Control behaviors defined in
                RFC7234.
            ignore_uri_case:
              default: false
              type: boolean
            storage_ttl:
              type: integer
              description: >-
                Number of seconds to keep resources in the storage backend. This
                value is independent of `cache_ttl` or resource TTLs defined by
                Cache-Control behaviors.
            memory:
              type: object
              properties:
                dictionary_name:
                  type: string
                  default: kong_db_cache
                  description: >-
                    The name of the shared dictionary in which to hold cache
                    entities when the memory strategy is selected. Note that
                    this dictionary currently must be defined manually in the
                    Kong Nginx template.
            vary_query_params:
              type: array
              items:
                type: string
              description: >-
                Relevant query parameters considered for the cache key. If
                undefined, all params are taken into consideration.
            vary_headers:
              type: array
              items:
                type: string
              description: >-
                Relevant headers considered for the cache key. If undefined,
                none of the headers are taken into consideration.
            response_headers:
              description: >-
                Caching related diagnostic headers that should be included in
                cached responses
              type: object
              properties:
                age:
                  default: true
                  type: boolean
                X-Cache-Status:
                  default: true
                  type: boolean
                X-Cache-Key:
                  default: true
                  type: boolean
          required: []
        name:
          type: string
          const: proxy-cache
      required:
        - config
    ProxyCachePlugin:
      x-speakeasy-entity: GatewayPluginProxyCache
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/ProxyCachePluginConfig'
    CreateProxyCachePlugin:
      x-speakeasy-entity: GatewayPluginProxyCache
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/ProxyCachePluginConfig'
    RequestTransformerAdvancedPluginConfig:
      properties:
        config:
          type: object
          properties:
            http_method:
              pattern: ^%u+$
              type: string
              description: >-
                A string representing an HTTP method, such as GET, POST, PUT, or
                DELETE. The string must contain only uppercase letters.
            remove:
              type: object
              properties:
                body:
                  default: []
                  items:
                    type: string
                  type: array
                headers:
                  default: []
                  items:
                    type: string
                  type: array
                querystring:
                  default: []
                  items:
                    type: string
                  type: array
            rename:
              type: object
              properties:
                body:
                  default: []
                  items:
                    type: string
                    referenceable: true
                  type: array
                headers:
                  default: []
                  items:
                    type: string
                    referenceable: true
                  type: array
                querystring:
                  default: []
                  items:
                    type: string
                    referenceable: true
                  type: array
            replace:
              type: object
              properties:
                body:
                  default: []
                  items:
                    type: string
                    referenceable: true
                  type: array
                headers:
                  default: []
                  items:
                    type: string
                    referenceable: true
                  type: array
                querystring:
                  default: []
                  items:
                    type: string
                    referenceable: true
                  type: array
                json_types:
                  default: []
                  items:
                    type: string
                    enum:
                      - boolean
                      - number
                      - string
                  type: array
                uri:
                  type: string
            add:
              type: object
              properties:
                body:
                  default: []
                  items:
                    type: string
                    referenceable: true
                  type: array
                headers:
                  default: []
                  items:
                    type: string
                    referenceable: true
                  type: array
                querystring:
                  default: []
                  items:
                    type: string
                    referenceable: true
                  type: array
                json_types:
                  default: []
                  items:
                    type: string
                    enum:
                      - boolean
                      - number
                      - string
                  type: array
            append:
              type: object
              properties:
                body:
                  default: []
                  items:
                    type: string
                    referenceable: true
                  type: array
                headers:
                  default: []
                  items:
                    type: string
                    referenceable: true
                  type: array
                querystring:
                  default: []
                  items:
                    type: string
                    referenceable: true
                  type: array
                json_types:
                  default: []
                  items:
                    type: string
                    enum:
                      - boolean
                      - number
                      - string
                  type: array
            allow:
              type: object
              properties:
                body:
                  type: array
                  items:
                    type: string
            dots_in_keys:
              default: true
              type: boolean
              description: >-
                Specify whether dots (for example, `customers.info.phone`)
                should be treated as part of a property name or used to descend
                into nested JSON objects.  See [Arrays and nested
                objects](#arrays-and-nested-objects).
          required: []
        name:
          type: string
          const: request-transformer-advanced
      required:
        - config
    RequestTransformerAdvancedPlugin:
      x-speakeasy-entity: GatewayPluginRequestTransformerAdvanced
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/RequestTransformerAdvancedPluginConfig'
    CreateRequestTransformerAdvancedPlugin:
      x-speakeasy-entity: GatewayPluginRequestTransformerAdvanced
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/RequestTransformerAdvancedPluginConfig'
    ResponseTransformerPluginConfig:
      properties:
        config:
          type: object
          properties:
            remove:
              type: object
              properties:
                json:
                  type: array
                  items:
                    type: string
                  default: []
                headers:
                  type: array
                  items:
                    type: string
                  default: []
            rename:
              type: object
              properties:
                headers:
                  type: array
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  default: []
            replace:
              type: object
              properties:
                json:
                  type: array
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  default: []
                json_types:
                  type: array
                  items:
                    type: string
                    enum:
                      - boolean
                      - number
                      - string
                  default: []
                  description: >-
                    List of JSON type names. Specify the types of the JSON
                    values returned when appending

                    JSON properties. Each string element can be one of: boolean,
                    number, or string.
                headers:
                  type: array
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  default: []
            add:
              type: object
              properties:
                json:
                  type: array
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  default: []
                json_types:
                  type: array
                  items:
                    type: string
                    enum:
                      - boolean
                      - number
                      - string
                  default: []
                  description: >-
                    List of JSON type names. Specify the types of the JSON
                    values returned when appending

                    JSON properties. Each string element can be one of: boolean,
                    number, or string.
                headers:
                  type: array
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  default: []
            append:
              type: object
              properties:
                json:
                  type: array
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  default: []
                json_types:
                  type: array
                  items:
                    type: string
                    enum:
                      - boolean
                      - number
                      - string
                  default: []
                  description: >-
                    List of JSON type names. Specify the types of the JSON
                    values returned when appending

                    JSON properties. Each string element can be one of: boolean,
                    number, or string.
                headers:
                  type: array
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  default: []
          required: []
        name:
          type: string
          const: response-transformer
      required:
        - config
    ResponseTransformerPlugin:
      x-speakeasy-entity: GatewayPluginResponseTransformer
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/ResponseTransformerPluginConfig'
    CreateResponseTransformerPlugin:
      x-speakeasy-entity: GatewayPluginResponseTransformer
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/ResponseTransformerPluginConfig'
    ResponseTransformerAdvancedPluginConfig:
      properties:
        config:
          type: object
          properties:
            remove:
              type: object
              properties:
                json:
                  default: []
                  items:
                    type: string
                  type: array
                headers:
                  default: []
                  items:
                    type: string
                  type: array
                if_status:
                  default: []
                  items:
                    type: string
                  type: array
            rename:
              type: object
              properties:
                headers:
                  default: []
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  type: array
                if_status:
                  default: []
                  items:
                    type: string
                  type: array
            replace:
              type: object
              properties:
                body:
                  type: string
                  description: String with which to replace the entire response body.
                json:
                  default: []
                  items:
                    type: string
                  type: array
                json_types:
                  default: []
                  items:
                    type: string
                    enum:
                      - boolean
                      - number
                      - string
                  type: array
                headers:
                  default: []
                  items:
                    type: string
                  type: array
                if_status:
                  default: []
                  items:
                    type: string
                  type: array
            add:
              type: object
              properties:
                json:
                  default: []
                  items:
                    type: string
                  type: array
                json_types:
                  default: []
                  items:
                    type: string
                    enum:
                      - boolean
                      - number
                      - string
                  type: array
                headers:
                  default: []
                  items:
                    type: string
                  type: array
                if_status:
                  default: []
                  items:
                    type: string
                  type: array
            append:
              type: object
              properties:
                json:
                  default: []
                  items:
                    type: string
                  type: array
                json_types:
                  default: []
                  items:
                    type: string
                    enum:
                      - boolean
                      - number
                      - string
                  type: array
                headers:
                  default: []
                  items:
                    type: string
                  type: array
                if_status:
                  default: []
                  items:
                    type: string
                  type: array
            allow:
              type: object
              properties:
                json:
                  type: array
                  items:
                    type: string
            transform:
              type: object
              properties:
                functions:
                  default: []
                  items:
                    type: string
                  type: array
                if_status:
                  default: []
                  items:
                    type: string
                  type: array
                json:
                  default: []
                  items:
                    type: string
                  type: array
            dots_in_keys:
              type: boolean
              default: true
              description: >-
                Whether dots (for example, `customers.info.phone`) should be
                treated as part of a property name or used to descend into
                nested JSON objects..
          required: []
        name:
          type: string
          const: response-transformer-advanced
      required:
        - config
    ResponseTransformerAdvancedPlugin:
      x-speakeasy-entity: GatewayPluginResponseTransformerAdvanced
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/ResponseTransformerAdvancedPluginConfig'
    CreateResponseTransformerAdvancedPlugin:
      x-speakeasy-entity: GatewayPluginResponseTransformerAdvanced
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/ResponseTransformerAdvancedPluginConfig'
    IpRestrictionPluginConfig:
      properties:
        config:
          type: object
          properties:
            allow:
              type: array
              items:
                type: string
                description: >-
                  A string representing an IP address or CIDR block, such as
                  192.168.1.1 or 192.168.0.0/16.
              description: >-
                List of IPs or CIDR ranges to allow. One of `config.allow` or
                `config.deny` must be specified.
            deny:
              type: array
              items:
                type: string
                description: >-
                  A string representing an IP address or CIDR block, such as
                  192.168.1.1 or 192.168.0.0/16.
              description: >-
                List of IPs or CIDR ranges to deny. One of `config.allow` or
                `config.deny` must be specified.
            status:
              type: number
              required: false
              description: >-
                The HTTP status of the requests that will be rejected by the
                plugin.
            message:
              type: string
              required: false
              description: The message to send as a response body to rejected requests.
        name:
          type: string
          const: ip-restriction
      required: []
    IpRestrictionPlugin:
      x-speakeasy-entity: GatewayPluginIpRestriction
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/IpRestrictionPluginConfig'
    CreateIpRestrictionPlugin:
      x-speakeasy-entity: GatewayPluginIpRestriction
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/IpRestrictionPluginConfig'
    PreFunctionPluginConfig:
      properties:
        config:
          type: object
          properties:
            certificate:
              type: array
              items:
                required: false
                type: string
              default: []
            rewrite:
              type: array
              items:
                required: false
                type: string
              default: []
            access:
              type: array
              items:
                required: false
                type: string
              default: []
            header_filter:
              type: array
              items:
                required: false
                type: string
              default: []
            body_filter:
              type: array
              items:
                required: false
                type: string
              default: []
            log:
              type: array
              items:
                required: false
                type: string
              default: []
            ws_handshake:
              type: array
              items:
                required: false
                type: string
              default: []
            ws_client_frame:
              type: array
              items:
                required: false
                type: string
              default: []
            ws_upstream_frame:
              type: array
              items:
                required: false
                type: string
              default: []
            ws_close:
              type: array
              items:
                required: false
                type: string
              default: []
        name:
          type: string
          const: pre-function
      required: []
    PreFunctionPlugin:
      x-speakeasy-entity: GatewayPluginPreFunction
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/PreFunctionPluginConfig'
    CreatePreFunctionPlugin:
      x-speakeasy-entity: GatewayPluginPreFunction
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/PreFunctionPluginConfig'
    Oauth2PluginConfig:
      properties:
        config:
          type: object
          properties:
            scopes:
              type: array
              items:
                type: string
              description: >-
                Describes an array of scope names that will be available to the
                end user. If `mandatory_scope` is set to `true`, then `scopes`
                are required.
            mandatory_scope:
              type: boolean
              default: false
              description: >-
                An optional boolean value telling the plugin to require at least
                one `scope` to be authorized by the end user.
            provision_key:
              unique: true
              encrypted: true
              description: >-
                The unique key the plugin has generated when it has been added
                to the Service.
              type: string
              auto: true
            token_expiration:
              type: number
              default: 7200
              description: >-
                An optional integer value telling the plugin how many seconds a
                token should last, after which the client will need to refresh
                the token. Set to `0` to disable the expiration.
            enable_authorization_code:
              type: boolean
              default: false
              description: >-
                An optional boolean value to enable the three-legged
                Authorization Code flow (RFC 6742 Section 4.1).
            enable_implicit_grant:
              type: boolean
              default: false
              description: >-
                An optional boolean value to enable the Implicit Grant flow
                which allows to provision a token as a result of the
                authorization process (RFC 6742 Section 4.2).
            enable_client_credentials:
              type: boolean
              default: false
              description: >-
                An optional boolean value to enable the Client Credentials Grant
                flow (RFC 6742 Section 4.4).
            enable_password_grant:
              type: boolean
              default: false
              description: >-
                An optional boolean value to enable the Resource Owner Password
                Credentials Grant flow (RFC 6742 Section 4.3).
            hide_credentials:
              type: boolean
              default: false
              description: >-
                An optional boolean value telling the plugin to show or hide the
                credential from the upstream service.
            accept_http_if_already_terminated:
              type: boolean
              default: false
              description: >-
                Accepts HTTPs requests that have already been terminated by a
                proxy or load balancer.
            anonymous:
              type: string
              description: >-
                An optional string (consumer UUID or username) value to use as
                an “anonymous” consumer if authentication fails.
            global_credentials:
              type: boolean
              default: false
              description: >-
                An optional boolean value that allows using the same OAuth
                credentials generated by the plugin with any other service whose
                OAuth 2.0 plugin configuration also has
                `config.global_credentials=true`.
            auth_header_name:
              type: string
              default: authorization
              description: >-
                The name of the header that is supposed to carry the access
                token.
            refresh_token_ttl:
              type: number
              minimum: 0
              maximum: 100000000
              default: 1209600
              description: Time-to-live value for data
            reuse_refresh_token:
              type: boolean
              default: false
              description: >-
                An optional boolean value that indicates whether an OAuth
                refresh token is reused when refreshing an access token.
            persistent_refresh_token:
              default: false
              type: boolean
            pkce:
              type: string
              enum:
                - none
                - lax
                - strict
              default: lax
              description: >-
                Specifies a mode of how the Proof Key for Code Exchange (PKCE)
                should be handled by the plugin.
          required: []
        name:
          type: string
          const: oauth2
      required:
        - config
    Oauth2Plugin:
      x-speakeasy-entity: GatewayPluginOauth2
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/Oauth2PluginConfig'
    CreateOauth2Plugin:
      x-speakeasy-entity: GatewayPluginOauth2
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/Oauth2PluginConfig'
    OpentelemetryPluginConfig:
      properties:
        config:
          type: object
          properties:
            endpoint:
              referenceable: true
              type: string
              description: >-
                A string representing a URL, such as
                https://example.com/path/to/resource?q=search.
            headers:
              additionalProperties: true
              type: object
              description: >-
                The custom headers to be added in the HTTP request sent to the
                OTLP server. This setting is useful for adding the
                authentication headers (token) for the APM backend.
            resource_attributes:
              additionalProperties: true
              type: object
            queue:
              type: object
              properties:
                max_batch_size:
                  minimum: 1
                  maximum: 1000000
                  type: integer
                  default: 1
                  description: Maximum number of entries that can be processed at a time.
                max_coalescing_delay:
                  minimum: 0
                  maximum: 3600
                  type: number
                  default: 1
                  description: >-
                    Maximum number of (fractional) seconds to elapse after the
                    first entry was queued before the queue starts calling the
                    handler.
                max_entries:
                  minimum: 1
                  maximum: 1000000
                  type: integer
                  default: 10000
                  description: Maximum number of entries that can be waiting on the queue.
                max_bytes:
                  type: integer
                  description: >-
                    Maximum number of bytes that can be waiting on a queue,
                    requires string content.
                max_retry_time:
                  type: number
                  default: 60
                  description: >-
                    Time in seconds before the queue gives up calling a failed
                    handler for a batch.
                initial_retry_delay:
                  minimum: 0.001
                  maximum: 1000000
                  type: number
                  default: 0.01
                  description: >-
                    Time in seconds before the initial retry is made for a
                    failing batch.
                max_retry_delay:
                  minimum: 0.001
                  maximum: 1000000
                  type: number
                  default: 60
                  description: >-
                    Maximum time in seconds between retries, caps exponential
                    backoff.
            batch_span_count:
              type: integer
              description: The number of spans to be sent in a single batch.
            batch_flush_delay:
              type: integer
              description: The delay, in seconds, between two consecutive batches.
            connect_timeout:
              minimum: 0
              maximum: 2147483646
              default: 1000
              type: integer
              description: >-
                An integer representing a timeout in milliseconds. Must be
                between 0 and 2^31-2.
            send_timeout:
              minimum: 0
              maximum: 2147483646
              default: 5000
              type: integer
              description: >-
                An integer representing a timeout in milliseconds. Must be
                between 0 and 2^31-2.
            read_timeout:
              minimum: 0
              maximum: 2147483646
              default: 5000
              type: integer
              description: >-
                An integer representing a timeout in milliseconds. Must be
                between 0 and 2^31-2.
            http_response_header_for_traceid:
              type: string
            header_type:
              type: string
              enum:
                - preserve
                - ignore
                - b3
                - b3-single
                - w3c
                - jaeger
                - ot
                - aws
                - gcp
                - datadog
              default: preserve
            sampling_rate:
              minimum: 0
              maximum: 1
              type: number
              required: false
              description: >-
                Tracing sampling rate for configuring the probability-based
                sampler. When set, this value supersedes the global
                `tracing_sampling_rate` setting from kong.conf.
          required: []
        name:
          type: string
          const: opentelemetry
      required:
        - config
    OpentelemetryPlugin:
      x-speakeasy-entity: GatewayPluginOpentelemetry
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/OpentelemetryPluginConfig'
    CreateOpentelemetryPlugin:
      x-speakeasy-entity: GatewayPluginOpentelemetry
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/OpentelemetryPluginConfig'
    AIProxyPluginConfig:
      properties:
        config:
          type: object
          properties:
            route_type:
              type: string
              enum:
                - llm/v1/chat
                - llm/v1/completions
              description: The model's operation implementation, for this provider.
            auth:
              type: object
              required: false
              properties:
                header_name:
                  type: string
                  referenceable: true
                  required: false
                  description: >-
                    If AI model requires authentication via Authorization or API
                    key header, specify its name here.
                header_value:
                  type: string
                  encrypted: true
                  referenceable: true
                  required: false
                  description: >-
                    Specify the full auth header value for 'header_name', for
                    example 'Bearer key' or just 'key'.
                param_name:
                  type: string
                  referenceable: true
                  required: false
                  description: >-
                    If AI model requires authentication via query parameter,
                    specify its name here.
                param_value:
                  type: string
                  encrypted: true
                  referenceable: true
                  required: false
                  description: Specify the full parameter value for 'param_name'.
                param_location:
                  type: string
                  enum:
                    - query
                    - body
                  required: false
                  description: >-
                    Specify whether the 'param_name' and 'param_value' options
                    go in a query string, or the POST form/JSON body.
            model:
              type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
                    - azure
                    - anthropic
                    - cohere
                    - mistral
                    - llama2
                  description: >-
                    AI provider request format - Kong translates requests to and
                    from the specified backend compatible formats.
                name:
                  type: string
                  required: false
                  description: Model name to execute.
                options:
                  description: Key/value settings for the model
                  type: object
                  required: false
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                      description: >-
                        Defines the max_tokens, if using chat or completion
                        models.
                    temperature:
                      minimum: 0
                      maximum: 5
                      type: number
                      default: 1
                      description: >-
                        Defines the matching temperature, if using chat or
                        completion models.
                    top_p:
                      minimum: 0
                      maximum: 1
                      type: number
                      default: 1
                      description: Defines the top-p probability mass, if supported.
                    top_k:
                      minimum: 0
                      maximum: 500
                      type: integer
                      default: 0
                      description: Defines the top-k most likely tokens, if supported.
                    anthropic_version:
                      type: string
                      required: false
                      description: >-
                        Defines the schema/API version, if using Anthropic
                        provider.
                    azure_instance:
                      type: string
                      required: false
                      description: Instance name for Azure OpenAI hosted models.
                    azure_api_version:
                      type: string
                      default: '2023-05-15'
                      description: '''api-version'' for Azure OpenAI instances.'
                    azure_deployment_id:
                      type: string
                      required: false
                      description: Deployment ID for Azure OpenAI instances.
                    llama2_format:
                      type: string
                      enum:
                        - raw
                        - openai
                        - ollama
                      required: false
                      description: >-
                        If using llama2 provider, select the upstream message
                        format.
                    mistral_format:
                      type: string
                      enum:
                        - openai
                        - ollama
                      required: false
                      description: >-
                        If using mistral provider, select the upstream message
                        format.
                    upstream_url:
                      required: false
                      type: string
                      description: >-
                        Manually specify or override the full URL to the AI
                        operation endpoints, when calling (self-)hosted models,
                        or for running via a private endpoint.
              required: []
            logging:
              type: object
              properties:
                log_statistics:
                  type: boolean
                  default: true
                  description: >-
                    If enabled and supported by the driver, will add model usage
                    and token metrics into the Kong log plugin(s) output.
                log_payloads:
                  type: boolean
                  default: false
                  description: >-
                    If enabled, will log the request and response body into the
                    Kong log plugin(s) output.
          required:
            - model
        name:
          type: string
          const: ai-proxy
      required:
        - config
    AIProxyPlugin:
      x-speakeasy-entity: GatewayPluginAIProxy
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/AIProxyPluginConfig'
    CreateAIProxyPlugin:
      x-speakeasy-entity: GatewayPluginAIProxy
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/AIProxyPluginConfig'
    AIPromptGuardPluginConfig:
      properties:
        config:
          properties:
            allow_patterns:
              items:
                type: string
              type: array
              default: []
              description: >-
                Array of valid patterns, or valid questions from the 'user' role
                in chat.
            deny_patterns:
              items:
                type: string
              type: array
              default: []
              description: >-
                Array of invalid patterns, or invalid questions from the 'user'
                role in chat.
            allow_all_conversation_history:
              type: boolean
              default: false
              description: >-
                If true, will ignore all previous chat prompts from the
                conversation history.
          type: object
        name:
          type: string
          const: ai-prompt-guard
      required: []
    AIPromptGuardPlugin:
      x-speakeasy-entity: GatewayPluginAIPromptGuard
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/AIPromptGuardPluginConfig'
    CreateAIPromptGuardPlugin:
      x-speakeasy-entity: GatewayPluginAIPromptGuard
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/AIPromptGuardPluginConfig'
    AIPromptTemplatePluginConfig:
      properties:
        config:
          properties:
            templates:
              items:
                required: true
                type: object
                properties:
                  name:
                    required: true
                    type: string
                    description: >-
                      Unique name for the template, can be called with
                      `{template://NAME}`
                  template:
                    required: true
                    type: string
                    description: >-
                      Template string for this request, supports mustache-style
                      `{{placeholders}}`
              type: array
              description: Array of templates available to the request context.
            allow_untemplated_requests:
              type: boolean
              default: true
              description: >-
                Set true to allow requests that don't call or match any
                template.
            log_original_request:
              type: boolean
              default: false
              description: >-
                Set true to add the original request to the Kong log plugin(s)
                output.
          type: object
          required: []
        name:
          type: string
          const: ai-prompt-template
      required:
        - config
    AIPromptTemplatePlugin:
      x-speakeasy-entity: GatewayPluginAIPromptTemplate
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/AIPromptTemplatePluginConfig'
    CreateAIPromptTemplatePlugin:
      x-speakeasy-entity: GatewayPluginAIPromptTemplate
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/AIPromptTemplatePluginConfig'
    AIPromptDecoratorPluginConfig:
      properties:
        config:
          properties:
            prompts:
              required: false
              type: object
              properties:
                prepend:
                  items:
                    required: false
                    type: object
                    properties:
                      role:
                        type: string
                        default: system
                        enum:
                          - system
                          - assistant
                          - user
                      content:
                        required: true
                        minLength: 1
                        type: string
                        maxLength: 500
                  type: array
                  description: >-
                    Insert chat messages at the beginning of the chat message
                    array. This array preserves exact order when adding
                    messages.
                  required: false
                  maxLength: 15
                append:
                  items:
                    required: false
                    type: object
                    properties:
                      role:
                        type: string
                        default: system
                        enum:
                          - system
                          - assistant
                          - user
                      content:
                        required: true
                        minLength: 1
                        type: string
                        maxLength: 500
                  type: array
                  description: >-
                    Insert chat messages at the end of the chat message array.
                    This array preserves exact order when adding messages.
                  required: false
                  maxLength: 15
          type: object
        name:
          type: string
          const: ai-prompt-decorator
      required: []
    AIPromptDecoratorPlugin:
      x-speakeasy-entity: GatewayPluginAIPromptDecorator
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/AIPromptDecoratorPluginConfig'
    CreateAIPromptDecoratorPlugin:
      x-speakeasy-entity: GatewayPluginAIPromptDecorator
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/AIPromptDecoratorPluginConfig'
    AWSLambdaPluginConfig:
      properties:
        config:
          type: object
          properties:
            timeout:
              type: number
              default: 60000
              description: An optional timeout in milliseconds when invoking the function.
            keepalive:
              type: number
              default: 60000
              description: >-
                An optional value in milliseconds that defines how long an idle
                connection lives before being closed.
            aws_key:
              encrypted: true
              referenceable: true
              type: string
              description: The AWS key credential to be used when invoking the function.
            aws_secret:
              encrypted: true
              referenceable: true
              type: string
              description: >-
                The AWS secret credential to be used when invoking the
                function. 
            aws_assume_role_arn:
              encrypted: true
              referenceable: true
              type: string
              description: The target AWS IAM role ARN used to invoke the Lambda function.
            aws_role_session_name:
              default: kong
              type: string
              description: The identifier of the assumed role session.
            aws_region:
              type: string
              description: A string representing a host name, such as example.com.
            function_name:
              type: string
              required: false
              description: The AWS Lambda function name to invoke.
            qualifier:
              type: string
              description: The qualifier to use when invoking the function.
            invocation_type:
              type: string
              enum:
                - RequestResponse
                - Event
                - DryRun
              default: RequestResponse
              description: >-
                The InvocationType to use when invoking the function. Available
                types are RequestResponse, Event, DryRun.
            log_type:
              type: string
              enum:
                - Tail
                - None
              default: Tail
              description: >-
                The LogType to use when invoking the function. By default, None
                and Tail are supported.
            host:
              type: string
              description: A string representing a host name, such as example.com.
            port:
              minimum: 0
              maximum: 65535
              default: 443
              type: integer
              description: >-
                An integer representing a port number between 0 and 65535,
                inclusive.
            disable_https:
              type: boolean
              default: false
            unhandled_status:
              minimum: 100
              maximum: 999
              type: integer
              description: >-
                The response status code to use (instead of the default 200,
                202, or 204) in the case of an Unhandled Function Error.
            forward_request_method:
              default: false
              type: boolean
              description: >-
                An optional value that defines whether the original HTTP request
                method verb is sent in the request_method field of the
                JSON-encoded request.
            forward_request_uri:
              default: false
              type: boolean
              description: >-
                An optional value that defines whether the original HTTP request
                URI is sent in the request_uri field of the JSON-encoded
                request.
            forward_request_headers:
              default: false
              type: boolean
              description: >-
                An optional value that defines whether the original HTTP request
                headers are sent as a map in the request_headers field of the
                JSON-encoded request.
            forward_request_body:
              default: false
              type: boolean
              description: >-
                An optional value that defines whether the request body is sent
                in the request_body field of the JSON-encoded request. If the
                body arguments can be parsed, they are sent in the separate
                request_body_args field of the request. 
            is_proxy_integration:
              default: false
              type: boolean
              description: >-
                An optional value that defines whether the response format to
                receive from the Lambda to this format.
            awsgateway_compatible:
              default: false
              type: boolean
              description: >-
                An optional value that defines whether the plugin should wrap
                requests into the Amazon API gateway.
            proxy_url:
              type: string
              description: >-
                A string representing a URL, such as
                https://example.com/path/to/resource?q=search.
            skip_large_bodies:
              default: true
              type: boolean
              description: >-
                An optional value that defines whether Kong should send large
                bodies that are buffered to disk
            base64_encode_body:
              default: true
              type: boolean
              description: An optional value that Base64-encodes the request body.
            aws_imds_protocol_version:
              type: string
              enum:
                - v1
                - v2
              default: v1
              description: >-
                Identifier to select the IMDS protocol version to use: `v1` or
                `v2`.
        name:
          type: string
          const: aws-lambda
      required: []
    AWSLambdaPlugin:
      x-speakeasy-entity: GatewayPluginAWSLambda
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/AWSLambdaPluginConfig'
    CreateAWSLambdaPlugin:
      x-speakeasy-entity: GatewayPluginAWSLambda
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/AWSLambdaPluginConfig'
    JQPluginConfig:
      properties:
        config:
          type: object
          properties:
            request_jq_program:
              type: string
              required: false
            request_jq_program_options:
              default: []
              type: object
              properties:
                compact_output:
                  type: boolean
                  default: true
                raw_output:
                  type: boolean
                  default: false
                join_output:
                  type: boolean
                  default: false
                ascii_output:
                  type: boolean
                  default: false
                sort_keys:
                  type: boolean
                  default: false
            request_if_media_type:
              type: array
              default:
                - application/json
              items:
                type: string
            response_jq_program:
              type: string
              required: false
            response_jq_program_options:
              default: []
              type: object
              properties:
                compact_output:
                  type: boolean
                  default: true
                raw_output:
                  type: boolean
                  default: false
                join_output:
                  type: boolean
                  default: false
                ascii_output:
                  type: boolean
                  default: false
                sort_keys:
                  type: boolean
                  default: false
            response_if_media_type:
              type: array
              default:
                - application/json
              items:
                type: string
            response_if_status_code:
              type: array
              default:
                - 200
              items:
                type: integer
                minimum: 100
                maximum: 599
        name:
          type: string
          const: jq
      required: []
    JQPlugin:
      x-speakeasy-entity: GatewayPluginJQ
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/JQPluginConfig'
    CreateJQPlugin:
      x-speakeasy-entity: GatewayPluginJQ
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/JQPluginConfig'
    JWTSignerPluginConfig:
      properties:
        config:
          type: object
          properties:
            realm:
              type: string
              required: false
              description: >-
                When authentication or authorization fails, or there is an
                unexpected error, the plugin sends an `WWW-Authenticate` header
                with the `realm` attribute value.
            enable_hs_signatures:
              type: boolean
              default: false
              description: >-
                Tokens signed with HMAC algorithms such as `HS256`, `HS384`, or
                `HS512` are not accepted by default. If you need to accept such
                tokens for verification, enable this setting.
            enable_instrumentation:
              type: boolean
              default: false
              description: >-
                Writes log entries with some added information using `ngx.CRIT`
                (CRITICAL) level.
            access_token_issuer:
              type: string
              default: kong
              description: >-
                The `iss` claim of a signed or re-signed access token is set to
                this value. Original `iss` claim of the incoming token (possibly
                introspected) is stored in `original_iss` claim of the newly
                signed access token.
            access_token_keyset:
              type: string
              default: kong
              description: The name of the keyset containing signing keys.
            access_token_jwks_uri:
              required: false
              type: string
              description: >-
                Specify the URI where the plugin can fetch the public keys
                (JWKS) to verify the signature of the access token.
            access_token_request_header:
              type: string
              default: Authorization
              description: >-
                This parameter tells the name of the header where to look for
                the access token.
            access_token_leeway:
              type: number
              default: 0
              description: >-
                Adjusts clock skew between the token issuer and Kong. The value
                is added to the token's `exp` claim before checking token expiry
                against Kong servers' current time in seconds. You can disable
                access token `expiry` verification altogether with
                `config.verify_access_token_expiry`.
            access_token_scopes_required:
              required: false
              type: array
              items:
                type: string
              description: >-
                Specify the required values (or scopes) that are checked by a
                claim specified by `config.access_token_scopes_claim`.
            access_token_scopes_claim:
              type: array
              default:
                - scope
              items:
                type: string
              description: >-
                Specify the claim in an access token to verify against values of
                `config.access_token_scopes_required`.
            access_token_consumer_claim:
              required: false
              type: array
              items:
                type: string
              description: >-
                When you set a value for this parameter, the plugin tries to map
                an arbitrary claim specified with this configuration parameter
                (for example, `sub` or `username`) in an access token to Kong
                consumer entity.
            access_token_consumer_by:
              type: array
              default:
                - username
                - custom_id
              items:
                type: string
                enum:
                  - id
                  - username
                  - custom_id
              description: >-
                When the plugin tries to apply an access token to a Kong
                consumer mapping, it tries to find a matching Kong consumer from
                properties defined using this configuration parameter. The
                parameter can take an array of alues. Valid values are `id`,
                `username`, and `custom_id`.
            access_token_upstream_header:
              type: string
              default: Authorization:Bearer
              description: >-
                Removes the `config.access_token_request_header` from the
                request after reading its value. With
                `config.access_token_upstream_header`, you can specify the
                upstream header where the plugin adds the Kong signed token. If
                you don't specify a value, such as use `null` or `""` (empty
                string), the plugin does not even try to sign or re-sign the
                token.
            access_token_upstream_leeway:
              type: number
              default: 0
              description: >-
                If you want to add or subtract (using a negative value) expiry
                time (in seconds) of the original access token, you can specify
                a value that is added to the original access token's `exp`
                claim.
            access_token_introspection_endpoint:
              required: false
              type: string
              description: >-
                When you use `opaque` access tokens and you want to turn on
                access token introspection, you need to specify the OAuth 2.0
                introspection endpoint URI with this configuration parameter.
            access_token_introspection_authorization:
              type: string
              required: false
              description: >-
                If the introspection endpoint requires client authentication
                (client being the JWT Signer plugin), you can specify the
                `Authorization` header's value with this configuration
                parameter.
            access_token_introspection_body_args:
              type: string
              required: false
              description: >-
                This parameter allows you to pass URL encoded request body
                arguments. For example: `resource=` or `a=1&b=&c`.
            access_token_introspection_hint:
              type: string
              default: access_token
              description: >-
                If you need to give `hint` parameter when introspecting an
                access token, use this parameter to specify the value. By
                default, the plugin sends `hint=access_token`.
            access_token_introspection_jwt_claim:
              required: false
              type: array
              items:
                type: string
              description: >-
                If your introspection endpoint returns an access token in one of
                the keys (or claims) within the introspection results (`JSON`).
                If the key cannot be found, the plugin responds with `401
                Unauthorized`. Also if the key is found but cannot be decoded as
                JWT, it also responds with `401 Unauthorized`.
            access_token_introspection_scopes_required:
              required: false
              type: array
              items:
                type: string
              description: >-
                Specify the required values (or scopes) that are checked by an
                introspection claim/property specified by
                `config.access_token_introspection_scopes_claim`.
            access_token_introspection_scopes_claim:
              type: array
              default:
                - scope
              items:
                type: string
              description: >-
                Specify the claim/property in access token introspection results
                (`JSON`) to be verified against values of
                `config.access_token_introspection_scopes_required`. This
                supports nested claims. For example, with Keycloak you could use
                `[ "realm_access", "roles" ]`, hich can be given as
                `realm_access,roles` (form post). If the claim is not found in
                access token introspection results, and you have specified
                `config.access_token_introspection_scopes_required`, the plugin
                responds with `403 Forbidden`.
            access_token_introspection_consumer_claim:
              required: false
              type: array
              items:
                type: string
              description: >-
                When you set a value for this parameter, the plugin tries to map
                an arbitrary claim specified with this configuration parameter
                (such as `sub` or `username`) in access token introspection
                results to the Kong consumer entity.
            access_token_introspection_consumer_by:
              type: array
              default:
                - username
                - custom_id
              items:
                type: string
                enum:
                  - id
                  - username
                  - custom_id
              description: >-
                When the plugin tries to do access token introspection results
                to Kong consumer mapping, it tries to find a matching Kong
                consumer from properties defined using this configuration
                parameter. The parameter can take an array of values.
            access_token_introspection_leeway:
              type: number
              default: 0
              description: >-
                Adjusts clock skew between the token issuer introspection
                results and Kong. The value is added to introspection results
                (`JSON`) `exp` claim/property before checking token expiry
                against Kong servers current time in seconds. You can disable
                access token introspection `expiry` verification altogether with
                `config.verify_access_token_introspection_expiry`.
            access_token_introspection_timeout:
              type: number
              required: false
              description: >-
                Timeout in milliseconds for an introspection request. The plugin
                tries to introspect twice if the first request fails for some
                reason. If both requests timeout, then the plugin runs two times
                the `config.access_token_introspection_timeout` on access token
                introspection.
            access_token_signing_algorithm:
              type: string
              enum:
                - HS256
                - HS384
                - HS512
                - RS256
                - RS512
                - ES256
                - ES384
                - ES512
                - PS256
                - PS384
                - PS512
                - EdDSA
              default: RS256
              description: >-
                When this plugin sets the upstream header as specified with
                `config.access_token_upstream_header`, re-signs the original
                access token using the private keys of the JWT Signer plugin.
                Specify the algorithm that is used to sign the token. The
                `config.access_token_issuer` specifies which `keyset` is used to
                sign the new token issued by Kong using the specified signing
                algorithm.
            access_token_optional:
              type: boolean
              default: false
              description: >-
                If an access token is not provided or no
                `config.access_token_request_header` is specified, the plugin
                cannot verify the access token. In that case, the plugin
                normally responds with `401 Unauthorized` (client didn't send a
                token) or `500 Unexpected` (a configuration error). Use this
                parameter to allow the request to proceed even when there is no
                token to check. If the token is provided, then this parameter
                has no effect
            verify_access_token_signature:
              type: boolean
              default: true
              description: >-
                Quickly turn access token signature verification off and on as
                needed.
            verify_access_token_expiry:
              type: boolean
              default: true
              description: >-
                Quickly turn access token expiry verification off and on as
                needed.
            verify_access_token_scopes:
              type: boolean
              default: true
              description: >-
                Quickly turn off and on the access token required scopes
                verification, specified with
                `config.access_token_scopes_required`.
            verify_access_token_introspection_expiry:
              type: boolean
              default: true
              description: >-
                Quickly turn access token introspection expiry verification off
                and on as needed.
            verify_access_token_introspection_scopes:
              type: boolean
              default: true
              description: >-
                Quickly turn off and on the access token introspection scopes
                verification, specified with
                `config.access_token_introspection_scopes_required`.
            cache_access_token_introspection:
              type: boolean
              default: true
              description: Whether to cache access token introspection results.
            trust_access_token_introspection:
              type: boolean
              default: true
              description: >-
                Use this parameter to enable and disable further checks on a
                payload before the new token is signed. If you set this to
                `true`, the expiry or scopes are not checked on a payload.
            enable_access_token_introspection:
              type: boolean
              default: true
              description: >-
                If you don't want to support opaque access tokens, change this
                configuration parameter to `false` to disable introspection.
            channel_token_issuer:
              type: string
              default: kong
              description: >-
                The `iss` claim of the re-signed channel token is set to this
                value, which is `kong` by default. The original `iss` claim of
                the incoming token (possibly introspected) is stored in the
                `original_iss` claim of the newly signed channel token.
            channel_token_keyset:
              type: string
              default: kong
              description: The name of the keyset containing signing keys.
            channel_token_jwks_uri:
              required: false
              type: string
              description: >-
                If you want to use `config.verify_channel_token_signature`, you
                must specify the URI where the plugin can fetch the public keys
                (JWKS) to verify the signature of the channel token. If you
                don't specify a URI and you pass a JWT token to the plugin, then
                the plugin responds with `401 Unauthorized`.
            channel_token_request_header:
              type: string
              required: false
              description: >-
                This parameter tells the name of the header where to look for
                the channel token. If you don't want to do anything with the
                channel token, then you can set this to `null` or `""` (empty
                string).
            channel_token_leeway:
              type: number
              default: 0
              description: >-
                Adjusts clock skew between the token issuer and Kong. The value
                will be added to token's `exp` claim before checking token
                expiry against Kong servers current time in seconds. You can
                disable channel token `expiry` verification altogether with
                `config.verify_channel_token_expiry`.
            channel_token_scopes_required:
              required: false
              type: array
              items:
                type: string
              description: >-
                Specify the required values (or scopes) that are checked by a
                claim specified by `config.channel_token_scopes_claim`.
            channel_token_scopes_claim:
              type: array
              default:
                - scope
              items:
                type: string
              description: >-
                Specify the claim in a channel token to verify against values of
                `config.channel_token_scopes_required`. This supports nested
                claims.
            channel_token_consumer_claim:
              required: false
              type: array
              items:
                type: string
              description: >-
                When you set a value for this parameter, the plugin tries to map
                an arbitrary claim specified with this configuration parameter.
                Kong consumers have an `id`, a `username`, and a `custom_id`. If
                this parameter is enabled but the mapping fails, such as when
                there's a non-existent Kong consumer, the plugin responds with
                `403 Forbidden`.
            channel_token_consumer_by:
              items:
                type: string
                enum:
                  - id
                  - username
                  - custom_id
              type: array
              default:
                - username
                - custom_id
              description: >-
                When the plugin tries to do channel token to Kong consumer
                mapping, it tries to find a matching Kong consumer from
                properties defined using this configuration parameter. The
                parameter can take an array of valid values: `id`, `username`,
                and `custom_id`.
            channel_token_upstream_header:
              type: string
              required: false
              description: >-
                This plugin removes the `config.channel_token_request_header`
                from the request after reading its value.
            channel_token_upstream_leeway:
              type: number
              default: 0
              description: >-
                If you want to add or perhaps subtract (using negative value)
                expiry time of the original channel token, you can specify a
                value that is added to the original channel token's `exp` claim.
            channel_token_introspection_endpoint:
              required: false
              type: string
              description: >-
                When you use `opaque` access tokens and you want to turn on
                access token introspection, you need to specify the OAuth 2.0
                introspection endpoint URI with this configuration parameter.
                Otherwise, the plugin does not try introspection and returns
                `401 Unauthorized` instead.
            channel_token_introspection_authorization:
              required: false
              type: string
              items:
                type: string
              description: >-
                When using `opaque` channel tokens, and you want to turn on
                channel token introspection, you need to specify the OAuth 2.0
                introspection endpoint URI with this configuration parameter.
                Otherwise the plugin will not try introspection, and instead
                returns `401 Unauthorized` when using opaque channel tokens.
            channel_token_introspection_body_args:
              required: false
              type: string
              items:
                type: string
              description: >-
                If you need to pass additional body arguments to introspection
                endpoint when the plugin introspects the opaque channel token,
                you can use this config parameter to specify them. You should
                URL encode the value. For example: `resource=` or `a=1&b=&c`.
            channel_token_introspection_hint:
              required: false
              type: string
              items:
                type: string
              description: >-
                If you need to give `hint` parameter when introspecting a
                channel token, you can use this parameter to specify the value
                of such parameter. By default, a `hint` isn't sent with channel
                token introspection.
            channel_token_introspection_jwt_claim:
              required: false
              type: array
              items:
                type: string
              description: >-
                If your introspection endpoint returns a channel token in one of
                the keys (or claims) in the introspection results (`JSON`), the
                plugin can use that value instead of the introspection results
                when doing expiry verification and signing of the new token
                issued by Kong.
            channel_token_introspection_scopes_required:
              required: false
              type: array
              items:
                type: string
              description: >-
                Use this parameter to specify the required values (or scopes)
                that are checked by an introspection claim/property specified by
                `config.channel_token_introspection_scopes_claim`.
            channel_token_introspection_scopes_claim:
              type: array
              default:
                - scope
              items:
                type: string
              description: >-
                Use this parameter to specify the claim/property in channel
                token introspection results (`JSON`) to be verified against
                values of `config.channel_token_introspection_scopes_required`.
                This supports nested claims.
            channel_token_introspection_consumer_claim:
              required: false
              type: array
              items:
                type: string
              description: >-
                When you set a value for this parameter, the plugin tries to map
                an arbitrary claim specified with this configuration parameter
                (such as `sub` or `username`) in channel token introspection
                results to Kong consumer entity
            channel_token_introspection_consumer_by:
              type: array
              default:
                - username
                - custom_id
              items:
                type: string
                enum:
                  - id
                  - username
                  - custom_id
              description: >-
                When the plugin tries to do channel token introspection results
                to Kong consumer mapping, it tries to find a matching Kong
                consumer from properties defined using this configuration
                parameter. The parameter can take an array of values. Valid
                values are `id`, `username` and `custom_id`.
            channel_token_introspection_leeway:
              type: number
              default: 0
              description: >-
                You can use this parameter to adjust clock skew between the
                token issuer introspection results and Kong. The value will be
                added to introspection results (`JSON`) `exp` claim/property
                before checking token expiry against Kong servers current time
                (in seconds). You can disable channel token introspection
                `expiry` verification altogether with
                `config.verify_channel_token_introspection_expiry`.
            channel_token_introspection_timeout:
              type: number
              required: false
              description: >-
                Timeout in milliseconds for an introspection request. The plugin
                tries to introspect twice if the first request fails for some
                reason. If both requests timeout, then the plugin runs two times
                the `config.access_token_introspection_timeout` on channel token
                introspection.
            channel_token_signing_algorithm:
              type: string
              enum:
                - HS256
                - HS384
                - HS512
                - RS256
                - RS512
                - ES256
                - ES384
                - ES512
                - PS256
                - PS384
                - PS512
                - EdDSA
              default: RS256
              description: >-
                When this plugin sets the upstream header as specified with
                `config.channel_token_upstream_header`, it also re-signs the
                original channel token using private keys of this plugin.
                Specify the algorithm that is used to sign the token.
            channel_token_optional:
              type: boolean
              default: false
              description: >-
                If a channel token is not provided or no
                `config.channel_token_request_header` is specified, the plugin
                cannot verify the channel token. In that case, the plugin
                normally responds with `401 Unauthorized` (client didn't send a
                token) or `500 Unexpected` (a configuration error). Enable this
                parameter to allow the request to proceed even when there is no
                channel token to check. If the channel token is provided, then
                this parameter has no effect
            verify_channel_token_signature:
              type: boolean
              default: true
              description: Quickly turn on/off the channel token signature verification.
            verify_channel_token_expiry:
              type: boolean
              default: true
            verify_channel_token_scopes:
              type: boolean
              default: true
              description: >-
                Quickly turn on/off the channel token required scopes
                verification specified with
                `config.channel_token_scopes_required`.
            verify_channel_token_introspection_expiry:
              type: boolean
              default: true
              description: >-
                Quickly turn on/off the channel token introspection expiry
                verification.
            verify_channel_token_introspection_scopes:
              type: boolean
              default: true
              description: >-
                Quickly turn on/off the channel token introspection scopes
                verification specified with
                `config.channel_token_introspection_scopes_required`.
            cache_channel_token_introspection:
              type: boolean
              default: true
              description: Whether to cache channel token introspection results.
            trust_channel_token_introspection:
              type: boolean
              default: true
              description: >-
                Providing an opaque channel token for plugin introspection, and
                verifying expiry and scopes on introspection results may make
                further payload checks unnecessary before the plugin signs a new
                token. This also applies when using a JWT token with
                introspection JSON as per
                config.channel_token_introspection_jwt_claim. Use this parameter
                to manage additional payload checks before signing a new token.
                With true (default), payload's expiry or scopes aren't checked.
            enable_channel_token_introspection:
              type: boolean
              default: true
              description: >-
                If you don't want to support opaque channel tokens, disable
                introspection by changing this configuration parameter to
                `false`.
            add_claims:
              additionalProperties: true
              type: object
              default: []
              description: Add customized claims if they are not present yet.
            set_claims:
              additionalProperties: true
              type: object
              default: []
              description: >-
                Set customized claims. If a claim is already present, it will be
                overwritten.
        name:
          type: string
          const: jwt-signer
      required: []
    JWTSignerPlugin:
      x-speakeasy-entity: GatewayPluginJWTSigner
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/JWTSignerPluginConfig'
    CreateJWTSignerPlugin:
      x-speakeasy-entity: GatewayPluginJWTSigner
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/JWTSignerPluginConfig'
    SamlPluginConfig:
      properties:
        config:
          shorthand_fields:
            session_cookie_lifetime:
              type: number
            session_cookie_idletime:
              type: number
            session_cookie_samesite:
              type: string
            session_cookie_httponly:
              type: boolean
            session_memcache_prefix:
              type: string
            session_memcache_socket:
              type: string
            session_memcache_host:
              type: string
            session_memcache_port:
              type: integer
            session_redis_cluster_maxredirections:
              type: integer
            session_cookie_renew:
              type: number
            session_cookie_maxsize:
              type: integer
            session_strategy:
              type: string
            session_compressor:
              type: string
            session_auth_ttl:
              type: number
          type: object
          properties:
            assertion_consumer_path:
              type: string
              starts_with: /
              match_none:
                pattern: //
                err: must not have empty segments
              description: >-
                A string representing a URL path, such as /path/to/resource.
                Must start with a forward slash (/) and must not contain empty
                segments (i.e., two consecutive forward slashes).
            idp_sso_url:
              type: string
              description: >-
                A string representing a URL, such as
                https://example.com/path/to/resource?q=search.
            idp_certificate:
              encrypted: true
              type: string
              referenceable: true
              required: false
              description: >-
                The public certificate provided by the IdP. This is used to
                validate responses from the IdP.  Only include the contents of
                the certificate. Do not include the header (`BEGIN CERTIFICATE`)
                and footer (`END CERTIFICATE`) lines.
            response_encryption_key:
              encrypted: true
              type: string
              referenceable: true
              required: false
              description: >-
                The private encryption key required to decrypt encrypted
                assertions.
            request_signing_key:
              encrypted: true
              type: string
              referenceable: true
              required: false
              description: >-
                The private key for signing requests.  If this parameter is set,
                requests sent to the IdP are signed.  The
                `request_signing_certificate` parameter must be set as well.
            request_signing_certificate:
              encrypted: true
              type: string
              referenceable: true
              required: false
              description: The certificate for signing requests.
            request_signature_algorithm:
              type: string
              enum:
                - SHA256
                - SHA384
                - SHA512
              default: SHA256
              description: >-
                The signature algorithm for signing Authn requests. Options
                available are: - `SHA256` - `SHA384` - `SHA512`
            request_digest_algorithm:
              type: string
              enum:
                - SHA256
                - SHA1
              default: SHA256
              description: 'The digest algorithm for Authn requests: - `SHA256` - `SHA1`'
            response_signature_algorithm:
              type: string
              enum:
                - SHA256
                - SHA384
                - SHA512
              default: SHA256
              description: >-
                The algorithm for validating signatures in SAML responses.
                Options available are: - `SHA256` - `SHA384` - `SHA512`
            response_digest_algorithm:
              type: string
              enum:
                - SHA256
                - SHA1
              default: SHA256
              description: >-
                The algorithm for verifying digest in SAML responses: - `SHA256`
                - `SHA1`
            issuer:
              type: string
              description: >-
                The unique identifier of the IdP application. Formatted as a URL
                containing information about the IdP so the SP can validate that
                the SAML assertions it receives are issued from the correct IdP.
            nameid_format:
              type: string
              enum:
                - Unspecified
                - EmailAddress
                - Persistent
                - Transient
              default: EmailAddress
              description: >-
                The requested `NameId` format. Options available are: -
                `Unspecified` - `EmailAddress` - `Persistent` - `Transient`
            validate_assertion_signature:
              type: boolean
              default: true
              description: Enable signature validation for SAML responses.
            anonymous:
              type: string
              required: false
              description: >-
                An optional string (consumer UUID or username) value to use as
                an “anonymous” consumer. If not set, a Kong Consumer must exist
                for the SAML IdP user credentials, mapping the username format
                to the Kong Consumer username.
            session_secret:
              pattern: ^[0-9a-zA-Z/_+]+$
              encrypted: true
              referenceable: true
              minLength: 32
              maxLength: 32
              type: string
              description: >-
                The session secret. This must be a random string of 32
                characters from the base64 alphabet (letters, numbers, `/`, `_`
                and `+`). It is used as the secret key for encrypting session
                data as well as state information that is sent to the IdP in the
                authentication exchange.
            session_audience:
              type: string
              default: default
              description: The session audience, for example "my-application"
            session_cookie_name:
              type: string
              default: session
              description: The session cookie name.
            session_remember:
              type: boolean
              default: false
              description: Enables or disables persistent sessions
            session_remember_cookie_name:
              type: string
              default: remember
              description: Persistent session cookie name
            session_remember_rolling_timeout:
              type: number
              default: 604800
              description: Persistent session rolling timeout in seconds.
            session_remember_absolute_timeout:
              type: number
              default: 2592000
              description: Persistent session absolute timeout in seconds.
            session_idling_timeout:
              type: number
              default: 900
              description: The session cookie idle time in seconds.
            session_rolling_timeout:
              type: number
              default: 3600
              description: >-
                The session cookie absolute timeout in seconds. Specifies how
                long the session can be used until it is no longer valid.
            session_absolute_timeout:
              type: number
              default: 86400
              description: >-
                The session cookie absolute timeout in seconds. Specifies how
                long the session can be used until it is no longer valid.
            session_cookie_path:
              match_none:
                pattern: //
                err: must not have empty segments
              starts_with: /
              type: string
              default: /
              description: >-
                A string representing a URL path, such as /path/to/resource.
                Must start with a forward slash (/) and must not contain empty
                segments (i.e., two consecutive forward slashes).
            session_cookie_domain:
              type: string
              required: false
              description: The session cookie domain flag.
            session_cookie_same_site:
              type: string
              enum:
                - Strict
                - Lax
                - None
                - Default
              default: Lax
              description: >-
                Controls whether a cookie is sent with cross-origin requests,
                providing some protection against cross-site request forgery
                attacks.
            session_cookie_http_only:
              type: boolean
              default: true
              description: >-
                Forbids JavaScript from accessing the cookie, for example,
                through the `Document.cookie` property.
            session_cookie_secure:
              type: boolean
              required: false
              description: >-
                The cookie is only sent to the server when a request is made
                with the https:scheme (except on localhost), and therefore is
                more resistant to man-in-the-middle attacks.
            session_request_headers:
              type: array
              items:
                type: string
                enum:
                  - id
                  - audience
                  - subject
                  - timeout
                  - idling-timeout
                  - rolling-timeout
                  - absolute-timeout
            session_response_headers:
              type: array
              items:
                type: string
                enum:
                  - id
                  - audience
                  - subject
                  - timeout
                  - idling-timeout
                  - rolling-timeout
                  - absolute-timeout
            session_storage:
              type: string
              enum:
                - cookie
                - memcache
                - memcached
                - redis
              default: cookie
              description: >-
                The session storage for session data: - `cookie`: stores session
                data with the session cookie. The session cannot be invalidated
                or revoked without changing the session secret, but is
                stateless, and doesn't require a database. - `memcached`: stores
                session data in memcached - `redis`: stores session data in
                Redis
            session_store_metadata:
              type: boolean
              default: false
              description: >-
                Configures whether or not session metadata should be stored.
                This includes information about the active sessions for the
                `specific_audience` belonging to a specific subject.
            session_enforce_same_subject:
              type: boolean
              default: false
              description: >-
                When set to `true`, audiences are forced to share the same
                subject.
            session_hash_subject:
              type: boolean
              default: false
              description: >-
                When set to `true`, the value of subject is hashed before being
                stored. Only applies when `session_store_metadata` is enabled.
            session_hash_storage_key:
              type: boolean
              default: false
              description: >-
                When set to `true`, the storage key (session ID) is hashed for
                extra security. Hashing the storage key means it is impossible
                to decrypt data from the storage without a cookie.
            session_memcached_prefix:
              type: string
              required: false
              description: The memcached session key prefix.
            session_memcached_socket:
              type: string
              required: false
              description: The memcached unix socket path.
            session_memcached_host:
              type: string
              default: 127.0.0.1
              description: The memcached host.
            session_memcached_port:
              type: integer
              minimum: 0
              maximum: 65535
              default: 11211
              description: >-
                An integer representing a port number between 0 and 65535,
                inclusive.
            session_redis_prefix:
              type: string
              required: false
              description: The Redis session key prefix.
            session_redis_socket:
              type: string
              required: false
              description: The Redis unix socket path.
            session_redis_host:
              type: string
              default: 127.0.0.1
              description: The Redis host IP.
            session_redis_port:
              type: integer
              minimum: 0
              maximum: 65535
              default: 6379
              description: >-
                An integer representing a port number between 0 and 65535,
                inclusive.
            session_redis_username:
              type: string
              referenceable: true
              required: false
              description: >-
                Redis username if the `redis` session storage is defined and ACL
                authentication is desired.If undefined, ACL authentication will
                not be performed.  This requires Redis v6.0.0+. The username
                **cannot** be set to `default`.
            session_redis_password:
              encrypted: true
              type: string
              referenceable: true
              required: false
              description: >-
                Password to use for Redis connection when the `redis` session
                storage is defined. If undefined, no auth commands are sent to
                Redis. This value is pulled from
            session_redis_connect_timeout:
              type: integer
              required: false
              description: The Redis connection timeout in milliseconds.
            session_redis_read_timeout:
              type: integer
              required: false
              description: The Redis read timeout in milliseconds.
            session_redis_send_timeout:
              type: integer
              required: false
              description: The Redis send timeout in milliseconds.
            session_redis_ssl:
              type: boolean
              default: false
              description: Use SSL/TLS for the Redis connection.
            session_redis_ssl_verify:
              type: boolean
              default: false
              description: Verify the Redis server certificate.
            session_redis_server_name:
              type: string
              required: false
              description: The SNI used for connecting to the Redis server.
            session_redis_cluster_nodes:
              required: false
              type: array
              items:
                type: object
                properties:
                  ip:
                    default: 127.0.0.1
                    type: string
                    description: A string representing a host name, such as example.com.
                  port:
                    minimum: 0
                    maximum: 65535
                    default: 6379
                    type: integer
                    description: >-
                      An integer representing a port number between 0 and 65535,
                      inclusive.
              description: >-
                The Redis cluster node host. Takes an array of host records,
                with either `ip` or `host`, and `port` values.
            session_redis_cluster_max_redirections:
              type: integer
              required: false
              description: The Redis cluster maximum redirects.
          required: []
        name:
          type: string
          const: saml
      required:
        - config
    SamlPlugin:
      x-speakeasy-entity: GatewayPluginSaml
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/SamlPluginConfig'
    CreateSamlPlugin:
      x-speakeasy-entity: GatewayPluginSaml
      allOf:
        - $ref: '#/components/schemas/CreatePlugin'
        - $ref: '#/components/schemas/SamlPluginConfig'
  securitySchemes:
    personalAccessToken:
      type: http
      scheme: bearer
      bearerFormat: Token
      description: >
        The personal access token is meant to be used as an alternative to
        basic-auth when accessing Konnect via APIs.

        You can generate a Personal Access Token (PAT) from the [personal access
        token page](https://cloud.konghq.com/global/tokens/) in the Konnect
        dashboard.

        The PAT token must be passed in the header of a request, for example:

        `curl -X GET 'https://global.api.konghq.com/v2/users/' --header
        'Authorization: Bearer kpat_xgfT...'`
    systemAccountAccessToken:
      type: http
      scheme: bearer
      bearerFormat: Token
      description: >
        The system account access token is meant for automations and
        integrations that are not directly associated with a human identity.

        You can generate a system account Access Token by creating a system
        account and then obtaining a system account access token for that
        account.

        The access token must be passed in the header of a request, for example:

        `curl -X GET 'https://global.api.konghq.com/v2/users/' --header
        'Authorization: Bearer spat_i2Ej...'`
    konnectAccessToken:
      description: >-
        The Konnect access token is meant to be used by the Konnect dashboard
        and the decK CLI to authenticate with.
      scheme: bearer
      type: http
  requestBodies:
    GroupMemebershipAdd:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GroupMembership'
      description: >-
        Request body for adding a list of child control planes to a control
        plane group membership.
    GroupMembershipRemove:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GroupMembership'
      description: >-
        Request body for removing a list of child control planes from a control
        plane group membership.
    CreateAPIProductRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAPIProductDTO'
    UpdateAPIProductRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAPIProductDTO'
    CreateAPIProductVersionRequest:
      x-speakeasy-entity: APIProductVersion
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAPIProductVersionDTO'
    UpdateAPIProductVersionRequest:
      x-speakeasy-entity: APIProductVersion
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAPIProductVersionDTO'
    UpdatePortalAuthenticationSettings:
      description: Update a portal's developer authentication settings.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalAuthenticationSettingsUpdateRequest'
    UpdatePortal:
      description: Update a portal's settings.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePortalRequest'
    UpdatePortalProductVersion:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePortalProductVersionPayload'
    CreateAppAuthStrategy:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAppAuthStrategyRequest'
    UpdateAppAuthStrategy:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAppAuthStrategyRequest'
security:
  - personalAccessToken: []
  - systemAccountAccessToken: []
  - konnectAccessToken: []
tags:
  - name: Control Planes
  - name: Control Plane Groups
  - description: >
      Service entities are abstractions of your microservice interfaces or
      formal APIs. For example, a service could be a data transformation
      microservice or a billing API.

      <br><br>

      The main attribute of a service is the destination URL for proxying
      traffic. This URL can be set as a single string or by specifying its
      protocol, host, port and path individually.

      <br><br>

      Services are associated to routes, and a single service can have many
      routes associated with it. Routes are entrypoints in Kong Gateway which
      define rules to match client requests. Once a route is matched, Kong
      Gateway proxies the request to its associated service. See the [Proxy
      Reference](https://docs.konghq.com/gateway/latest/how-kong-works/routing-traffic/)
      for a detailed explanation of how Kong proxies traffic.

      <br><br>

      Services can be both [tagged and filtered by
      tags](https://docs.konghq.com/gateway/latest/admin-api/#tags).
    name: Services
  - description: >
      Route entities define rules to match client requests. Each route is
      associated with a service, and a service may have multiple routes
      associated to it. Every request matching a given route will be proxied to
      the associated service. You need at least one matching rule that applies
      to the protocol being matched by the route.

      <br><br>

      The combination of routes and services, and the separation of concerns
      between them, offers a powerful routing mechanism with which it is
      possible to define fine-grained entrypoints in Kong Gateway leading to
      different upstream services of your infrastructure.

      <br><br>

      Depending on the protocol, one of the following attributes must be set:

      <br>


      - `http`: At least one of `methods`, `hosts`, `headers`, or `paths`

      - `https`: At least one of `methods`, `hosts`, `headers`, `paths`, or
      `snis`

      - `tcp`: At least one of `sources` or `destinations`

      - `tls`: at least one of `sources`, `destinations`, or `snis`

      - `tls_passthrough`: set `snis`

      - `grpc`: At least one of `hosts`, `headers`, or `paths`

      - `grpcs`: At least one of `hosts`, `headers`, `paths`, or `snis`

      - `ws`: At least one of `hosts`, `headers`, or `paths`

      - `wss`: At least one of `hosts`, `headers`, `paths`, or `snis`




        <br>
        A route can't have both `tls` and `tls_passthrough` protocols at same time.
        <br><br>
        Learn more about the router:
      - [Configure routes using
      expressions](https://docs.konghq.com/gateway/latest/key-concepts/routes/expressions)

      - [Router Expressions language
      reference](https://docs.konghq.com/gateway/latest/reference/router-expressions-language/)
    name: Routes
  - description: >
      A plugin entity represents a plugin configuration that will be executed
      during the HTTP request/response lifecycle. Plugins let you add
      functionality to services that run behind a Kong Gateway instance, like
      authentication or rate limiting.

      You can find more information about available plugins and which values
      each plugin accepts at the [Plugin Hub](https://docs.konghq.com/hub/).

      <br><br>

      When adding a plugin configuration to a service, the plugin will run on
      every request made by a client to that service. If a plugin needs to be
      tuned to different values for some specific consumers, you can do so by
      creating a separate plugin instance that specifies both the service and
      the consumer, through the service and consumer fields.

      <br><br>

      Plugins can be both [tagged and filtered by
      tags](https://docs.konghq.com/gateway/latest/admin-api/#tags).
    name: Plugins
  - description: >
      The consumer object represents a consumer - or a user - of a service.

      You can either rely on Kong Gateway as the primary datastore, or you can
      map the consumer list with your database to keep consistency between Kong
      Gateway and your existing primary datastore.
    name: Consumers
  - description: >-
      Consumer groups enable the organization and categorization of consumers
      (users or applications) within an API ecosystem. 

      By grouping consumers together, you eliminate the need to manage them
      individually, providing a scalable, efficient approach to managing
      configurations.
    name: Consumer Groups
  - description: >
      A certificate object represents a public certificate, and can be
      optionally paired with the corresponding private key. These objects are
      used by Kong Gateway to handle SSL/TLS termination for encrypted requests,
      or for use as a trusted CA store when validating peer certificate of
      client/service.

      <br><br>

      Certificates are optionally associated with SNI objects to tie a cert/key
      pair to one or more hostnames.

      <br><br>

      If intermediate certificates are required in addition to the main
      certificate, they should be concatenated together into one string.
    name: Certificates
  - description: >-
      An SNI object represents a many-to-one mapping of hostnames to a
      certificate. 

      <br><br>

      A certificate object can have many hostnames associated with it. When Kong
      Gateway receives an SSL request, it uses the SNI field in the Client Hello
      to look up the certificate object based on the SNI associated with the
      certificate.
    name: SNIs
  - description: >-
      A CA certificate object represents a trusted certificate authority. 

      These objects are used by Kong Gateway to verify the validity of a client
      or server certificate.
    name: CA Certificates
  - description: >-
      The upstream object represents a virtual hostname and can be used to load
      balance incoming requests over multiple services (targets). 

      <br><br>

      An upstream also includes a [health
      checker](https://docs.konghq.com/gateway/latest/how-kong-works/health-checks/),
      which can enable and disable targets based on their ability or inability
      to serve requests. 

      The configuration for the health checker is stored in the upstream object,
      and applies to all of its targets.
    name: Upstreams
  - description: >
      Vault objects are used to configure different vault connectors for
      [managing
      secrets](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/).

      Configuring a vault lets you reference secrets from other entities.

      This allows for a proper separation of secrets and configuration and
      prevents secret sprawl.

      <br><br>

      For example, you could store a certificate and a key in a vault, then
      reference them from a certificate entity. This way, the certificate and
      key are not stored in the entity directly and are more secure.

      <br><br>

      Secrets rotation can be managed using
      [TTLs](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/advanced-usage/).
    name: Vaults
  - description: >
      A key object holds a representation of asymmetric keys in various formats.
      When Kong Gateway or a Kong plugin requires a specific public or private
      key to perform certain operations, it can use this entity.
    name: Keys
  - description: >
      A JSON Web key set. Key sets are the preferred way to expose keys to
      plugins because they tell the plugin where to look for keys or have a
      scoping mechanism to restrict plugins to specific keys.
    name: KeySets
  - name: API-keys
  - name: Basic-auth credentials
  - name: JWTs
  - name: HMAC-auth credentials
  - name: ACLs
  - name: Mesh
  - name: API Products
  - name: API Product Documentation
  - name: API Product Versions
  - name: API Product Version Specification
  - name: Portals
    description: APIs related to Configuration of Konnect Developer Portals.
  - name: Portal Developers
    description: APIs related to Konnect Developer Portal Developers.
  - name: Portal Teams
    description: APIs related to Konnect Developer Portal Developer Teams.
  - name: Portal Team Membership
    description: >-
      APIs related to Developer Membership in Konnect Developer Portal Developer
      Teams.
  - name: Portal Team Roles
    description: APIs related to Team Roles in Konnect Developer Portal.
  - name: Portal Applications
    description: APIs related to Konnect Developer Portal Applications.
  - name: Portal Application Registrations
    description: APIs related to Konnect Developer Portal Application Registrations.
  - name: Portal Products
    description: APIs related to API Products Published to Konnect Developer Portals.
  - name: Portal Auth Settings
    description: APIs related to Konnect Developer Portal Authentication Settings.
  - name: Portal Appearance
    description: APIs related to Konnect Developer Portal Appearance Settings.
  - name: Portal Product Versions
    description: >
      Portal Product Versions hold metadata that describes how a Product Version
      is configured for a specific portal.
        
        They contain:
        - Lifecyle and deprecation statuses
        - Application registration settings like auto approve or whether application registration is enabled
        - The authentication strategy that is enabled for Application Registration
  - name: DCR Providers
    description: >
      Dynamic Client Registration Providers are configurations representing an
      external Identity Provider whose clients (i.e. Applications) Konnect will
      be authorized to manage.

      For instance, they will be able to perform dynamic client registration
      (DCR) with the provider. 

      The DCR provider provides credentials to each DCR-enabled application in
      Konnect that can be used to access Product Versions that the app is
      registered for.
  - name: App Auth Strategies
    description: >
      Application Auth Strategies are sets of plugin configurations that
      represent how the gateway will perform authentication and authorization
      for a Product Version. 

      Called “Auth Strategy” for short in the context of portals/applications. 

      The plugins are synced to any Gateway Service that is currently linked or
      becomes linked to the Product Version.
