openapi: 3.1.0
info:
  title: Konnect API
  version: 2.0.0
  description: The Konnect platform API
  contact:
    name: Kong
    url: https://cloud.konghq.com
    email: support@konghq.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://global.api.konghq.com
  - url: https://us.api.konghq.com
  - url: https://eu.api.konghq.com
  - url: https://au.api.konghq.com
externalDocs:
  description: Documentation for Kong Gateway and its APIs
  url: https://docs.konghq.com
paths:
  /v1/mesh/control-planes:
    post:
      x-speakeasy-entity-operation: MeshControlPlane#create
      summary: Create a new control plane
      description: Create a new control plane
      operationId: create-cp
      tags:
        - Mesh
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMeshControlPlaneRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateMeshControlPlaneResponse'
        '400':
          $ref: '#/components/responses/CreateMeshControlPlaneValidationError'
        '401':
          $ref: '#/components/responses/MeshControlPlaneUnauthorizedError'
        '403':
          $ref: '#/components/responses/MeshControlPlaneForbiddenError'
  /v1/mesh/control-planes/{cpId}:
    parameters:
      - name: cpId
        in: path
        required: true
        description: Id of the Konnect resource
        example: bf138ba2-c9b1-4229-b268-04d9d8a6410b
        schema:
          type: string
          format: uuid
        x-speakeasy-match: id
    get:
      x-speakeasy-entity-operation: MeshControlPlane#read
      summary: Get the control plane
      description: Get the control plane
      operationId: get-mesh-control-plane
      tags:
        - Mesh
      responses:
        '200':
          $ref: '#/components/responses/RetrieveMeshControlPlaneResponse'
        '401':
          $ref: '#/components/responses/MeshControlPlaneUnauthorizedError'
        '403':
          $ref: '#/components/responses/MeshControlPlaneForbiddenError'
        '404':
          $ref: '#/components/responses/MeshControlPlaneNotFoundError'
    delete:
      x-speakeasy-entity-operation: MeshControlPlane#delete
      summary: Delete the control plane
      description: Delete the control plane
      operationId: delete-mesh-control-plane
      tags:
        - Mesh
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/MeshControlPlaneUnauthorizedError'
        '403':
          $ref: '#/components/responses/MeshControlPlaneForbiddenError'
        '404':
          $ref: '#/components/responses/MeshControlPlaneNotFoundError'
    patch:
      x-speakeasy-entity-operation: MeshControlPlane#update
      summary: Update control plane
      operationId: update-mesh-control-plane
      tags:
        - Mesh
      responses:
        '200':
          $ref: '#/components/responses/UpdateMeshControlPlaneResponse'
        '400':
          $ref: '#/components/responses/UpdateMeshControlPlaneValidationError'
        '401':
          $ref: '#/components/responses/MeshControlPlaneUnauthorizedError'
        '403':
          $ref: '#/components/responses/MeshControlPlaneForbiddenError'
        '404':
          $ref: '#/components/responses/MeshControlPlaneNotFoundError'
      description: Update an individual control plane.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeshControlPlaneRequest'
  /v2/api-products:
    post:
      x-speakeasy-entity-operation: ApiProduct#create
      summary: Create API Product
      description: >
        An API Product packages together associated APIs and their operations,
        backed by thorough documentation,

        with the objective of making API consumption straightforward for
        developers.
      operationId: create-api-product
      responses:
        '201':
          $ref: '#/components/responses/APIProductResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Products
      requestBody:
        $ref: '#/components/requestBodies/CreateAPIProductRequest'
  /v2/api-products/{apiProductId}/product-versions:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: apiProductId
        description: The API Product ID
        in: path
        required: true
    post:
      x-speakeasy-entity-operation: ApiProductVersion#create
      summary: Create API Product Version
      description: Creates a version of an API product.
      operationId: create-api-product-version
      responses:
        '201':
          $ref: '#/components/responses/APIProductVersionResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Product Versions
      requestBody:
        $ref: '#/components/requestBodies/CreateAPIProductVersionRequest'
  /v2/api-products/{apiProductId}/product-versions/{id}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: apiProductId
        description: The API product identifier
        in: path
        required: true
      - schema:
          type: string
          format: uuid
          example: 9f5061ce-78f6-4452-9108-ad7c02821fd5
        name: id
        description: The API product version identifier
        in: path
        required: true
    get:
      x-speakeasy-entity-operation: ApiProductVersion#read
      summary: Fetch API Product Version
      description: Returns a version of an API product.
      operationId: get-api-product-version
      responses:
        '200':
          $ref: '#/components/responses/APIProductVersionResponse'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Versions
    patch:
      x-speakeasy-entity-operation: ApiProductVersion#update
      summary: Update an API Product Version
      description: Updates an API product version.
      operationId: update-api-product-version
      responses:
        '200':
          $ref: '#/components/responses/APIProductVersionResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Product Versions
      requestBody:
        $ref: '#/components/requestBodies/UpdateAPIProductVersionRequest'
    delete:
      x-speakeasy-entity-operation: ApiProductVersion#delete
      summary: Delete API Product Version
      description: Removes an API product version.
      operationId: delete-api-product-version
      responses:
        '204':
          description: API product version was deleted successfully.
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Product Versions
  /v2/api-products/{id}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: id
        in: path
        required: true
        description: API product identifier
    get:
      x-speakeasy-entity-operation: ApiProduct#read
      summary: Fetch API product
      description: Returns an API product.
      operationId: get-api-product
      responses:
        '200':
          $ref: '#/components/responses/APIProductResponse'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Products
    patch:
      x-speakeasy-entity-operation: ApiProduct#update
      summary: Update an individual API product
      description: Updates an API product.
      operationId: update-api-product
      responses:
        '200':
          $ref: '#/components/responses/APIProductResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
      tags:
        - API Products
      requestBody:
        $ref: '#/components/requestBodies/UpdateAPIProductRequest'
    delete:
      x-speakeasy-entity-operation: ApiProduct#delete
      summary: Delete API Product
      description: Removes an individual API product.
      operationId: delete-api-product
      responses:
        '204':
          description: API product was deleted successfully.
        '401':
          $ref: '#/components/responses/ApiProductUnauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/ApiProductNotFound'
      tags:
        - API Products
  /v2/application-auth-strategies:
    post:
      x-speakeasy-entity-operation: ApplicationAuthStrategy#create
      summary: Create App Auth Strategy
      operationId: create-app-auth-strategy
      description: Creates an application auth strategy.
      requestBody:
        $ref: '#/components/requestBodies/CreateAppAuthStrategy'
      responses:
        '201':
          $ref: '#/components/responses/CreateAppAuthStrategy'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - App Auth Strategies
  /v2/application-auth-strategies/{authStrategyId}:
    parameters:
      - $ref: '#/components/parameters/AuthStrategyId'
    get:
      x-speakeasy-entity-operation: ApplicationAuthStrategy#read
      summary: Get App Auth Strategy
      description: Returns an application auth strategy.
      operationId: get-app-auth-strategy
      responses:
        '200':
          $ref: '#/components/responses/GetAppAuthStrategy'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - App Auth Strategies
    patch:
      x-speakeasy-entity-operation: ApplicationAuthStrategy#update
      summary: Update App Auth Strategy
      operationId: update-app-auth-strategy
      description: Updates an application auth strategy.
      requestBody:
        $ref: '#/components/requestBodies/UpdateAppAuthStrategy'
      responses:
        '200':
          $ref: '#/components/responses/UpdateAppAuthStrategy'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - App Auth Strategies
    delete:
      x-speakeasy-entity-operation: ApplicationAuthStrategy#delete
      summary: Delete App Auth Strategy
      description: >-
        Deletes an application auth strategy. An application auth strategy can
        be deleted ONLY if it's not used by any product version within any
        portal regardless of their publication statuses. If an application auth
        strategy is still in use the request will result in an HTTP 409
        CONFLICT.
      operationId: delete-app-auth-strategy
      responses:
        '204':
          description: No Content.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
      tags:
        - App Auth Strategies
  /v2/cloud-gateways/configurations:
    put:
      x-speakeasy-entity-operation: CloudGatewayConfiguration#create,update
      summary: Create Configuration
      description: >
        Creates a new configuration for a control-plane (restricted by permitted
        control-plane permissions for

        configurations). This request will replace any existing configuration
        for the requested control_plane_id and

        control_plane_geo by performing a diff. From this diff, new resources
        detected in the requested configuration

        will be added, resources not found in the request configuration but in
        the previous will be deleted, and

        resources found in both will be updated to the requested configuration.
        Networks referenced in this request that

        are in an offline state will automatically initialize (i.e. move to an
        initializing state).
      operationId: create-configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConfigurationRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateConfigurationResponse'
        '400':
          $ref: '#/components/responses/CloudGatewaysBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/CloudGatewaysForbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/CloudGatewaysConflict'
      tags:
        - Data-Plane Group Configurations
  /v2/cloud-gateways/configurations/{configurationId}:
    get:
      x-speakeasy-entity-operation: CloudGatewayConfiguration#get
      summary: Get Configuration
      description: >-
        Retrieves a configuration by ID (restricted by permitted control-plane
        read).
      operationId: get-configuration
      parameters:
        - $ref: '#/components/parameters/ConfigurationId'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveConfigurationResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Data-Plane Group Configurations
  /v2/cloud-gateways/custom-domains:
    post:
      x-speakeasy-entity-operation: CloudGatewayCustomDomain#create
      summary: Create Custom Domain
      description: >
        Creates a new custom domain for a control-plane (restricted by permitted
        control-plane associate-custom-domain

        action).
      operationId: create-custom-domains
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomDomainRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateCustomDomainResponse'
        '400':
          $ref: '#/components/responses/CloudGatewaysBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
      tags:
        - Custom Domains
  /v2/cloud-gateways/custom-domains/{customDomainId}:
    get:
      x-speakeasy-entity-operation: CloudGatewayCustomDomain#read
      summary: Get Custom Domain
      description: >-
        Retrieves a custom domain by ID (restricted by permitted control-plane
        reads).
      operationId: get-custom-domain
      parameters:
        - $ref: '#/components/parameters/CustomDomainId'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveCustomDomainResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Custom Domains
    delete:
      x-speakeasy-entity-operation: CloudGatewayCustomDomain#delete
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 10000
          maxInterval: 60000
          maxElapsedTime: 1800000
          exponent: 1.5
        statusCodes:
          - 400
        retryConnectionErrors: false
      summary: Delete Custom Domain
      description: >-
        Deletes a custom domain by ID (restricted by permitted control-plane
        reads).
      operationId: delete-custom-domain
      parameters:
        - $ref: '#/components/parameters/CustomDomainId'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/CloudGatewaysBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Custom Domains
  /v2/cloud-gateways/networks:
    post:
      x-speakeasy-entity-operation: CloudGatewayNetwork#create
      summary: Create Network
      description: Creates a new network for a given provider account.
      operationId: create-network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworkRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateNetworkResponse'
        '400':
          $ref: '#/components/responses/CloudGatewaysBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/CloudGatewaysForbidden'
        '409':
          $ref: '#/components/responses/Conflict'
      tags:
        - Networks
  /v2/cloud-gateways/networks/{networkId}:
    get:
      x-speakeasy-entity-operation: CloudGatewayNetwork#read
      summary: Get Network
      description: Retrieves a network by ID.
      operationId: get-network
      parameters:
        - $ref: '#/components/parameters/NetworkId'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveNetworkResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Networks
    patch:
      x-speakeasy-entity-operation: CloudGatewayNetwork#update
      summary: Update Network
      description: Updates a network by ID.
      operationId: update-network
      parameters:
        - $ref: '#/components/parameters/NetworkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchNetworkRequest'
      responses:
        '200':
          $ref: '#/components/responses/PatchNetworkResponse'
        '400':
          $ref: '#/components/responses/CloudGatewaysBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/CloudGatewaysForbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
      tags:
        - Networks
    delete:
      x-speakeasy-entity-operation: CloudGatewayNetwork#delete
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 10000
          maxInterval: 60000
          maxElapsedTime: 1800000
          exponent: 1.5
        statusCodes:
          - 400
        retryConnectionErrors: false
      summary: Delete Network
      description: Deletes a network by ID.
      operationId: delete-network
      parameters:
        - $ref: '#/components/parameters/NetworkId'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/CloudGatewaysBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Networks
  /v2/cloud-gateways/networks/{networkId}/transit-gateways:
    post:
      x-speakeasy-entity-operation: CloudGatewayTransitGateway#create
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 30000
          maxInterval: 60000
          maxElapsedTime: 3600000
          exponent: 1.5
        statusCodes:
          - 400
        retryConnectionErrors: false
      summary: Create Transit Gateway
      description: Creates a new transit gateway for a given network.
      operationId: create-transit-gateway
      parameters:
        - name: networkId
          in: path
          description: The network to operate on.
          required: true
          schema:
            $ref: '#/components/schemas/NetworkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransitGatewayRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateTransitGatewayResponse'
        '400':
          $ref: '#/components/responses/CloudGatewaysBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
      tags:
        - Transit Gateways
  /v2/cloud-gateways/networks/{networkId}/transit-gateways/{transitGatewayId}:
    get:
      x-speakeasy-entity-operation: CloudGatewayTransitGateway#read
      summary: Get Transit Gateway
      description: Retrieves a transit gateway by ID for a given network.
      operationId: get-transit-gateway
      parameters:
        - name: networkId
          in: path
          description: The network to operate on.
          required: true
          schema:
            $ref: '#/components/schemas/NetworkId'
        - $ref: '#/components/parameters/TransitGatewayId'
      responses:
        '200':
          $ref: '#/components/responses/RetrieveTransitGatewayResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Transit Gateways
    delete:
      x-speakeasy-entity-operation: CloudGatewayTransitGateway#delete
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 10000
          maxInterval: 60000
          maxElapsedTime: 1800000
          exponent: 1.5
        statusCodes:
          - 400
        retryConnectionErrors: false
      summary: Delete Transit Gateway
      description: Deletes a transit gateway by ID for a given network.
      operationId: delete-transit-gateway
      parameters:
        - name: networkId
          in: path
          description: The network to operate on.
          required: true
          schema:
            $ref: '#/components/schemas/NetworkId'
        - $ref: '#/components/parameters/TransitGatewayId'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/CloudGatewaysBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Transit Gateways
  /v2/cloud-gateways/provider-accounts:
    get:
      x-speakeasy-entity-operation: CloudGatewayProviderAccountList#read
      summary: List Provider Accounts
      description: >-
        Returns a a paginated collection of provider accounts for an
        organization.
      operationId: list-provider-accounts
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      responses:
        '200':
          $ref: '#/components/responses/ListProviderAccountsResponse'
        '400':
          $ref: '#/components/responses/CloudGatewaysBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      tags:
        - Provider Accounts
  /v2/control-planes:
    parameters: []
    post:
      x-speakeasy-entity-operation: GatewayControlPlane#create
      summary: Create Control Plane
      operationId: create-control-plane
      responses:
        '201':
          $ref: '#/components/responses/CreateControlPlaneResponse'
        '400':
          $ref: '#/components/responses/ControlPlanesBadRequest'
        '401':
          $ref: '#/components/responses/ControlPlaneUnauthenticated'
        '403':
          $ref: '#/components/responses/ControlPlanePermissionDenied'
        '409':
          $ref: '#/components/responses/ControlPlaneConflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      tags:
        - Control Planes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlPlaneRequest'
      description: Create a control plane in the Konnect Organization.
  /v2/control-planes/{controlPlaneId}/core-entities/ca_certificates:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new CA Certificate
      operationId: create-ca_certificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CACertificate'
        description: Description of the new CA Certificate for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CACertificate'
          description: Successfully created CA Certificate
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new CA Certificate
      tags:
        - CA Certificates
      x-speakeasy-entity-operation: GatewayCACertificate#create
  /v2/control-planes/{controlPlaneId}/core-entities/ca_certificates/{CACertificateId}:
    delete:
      description: Delete a CA Certificate
      operationId: delete-ca_certificate
      parameters:
        - $ref: '#/components/parameters/CACertificateId'
      responses:
        '204':
          description: Successfully deleted CA Certificate or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a CA Certificate
      tags:
        - CA Certificates
      x-speakeasy-entity-operation: GatewayCACertificate#delete
    get:
      description: Get a CA Certificate using ID.
      operationId: get-ca_certificate
      parameters:
        - $ref: '#/components/parameters/CACertificateId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CACertificate'
          description: Successfully fetched CA Certificate
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a CA Certificate
      tags:
        - CA Certificates
      x-speakeasy-entity-operation: GatewayCACertificate#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/certificates:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Certificate
      operationId: create-certificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
        description: Description of the new Certificate for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: Successfully created Certificate
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Certificate
      tags:
        - Certificates
      x-speakeasy-entity-operation: GatewayCertificate#create
  /v2/control-planes/{controlPlaneId}/core-entities/certificates/{CertificateId}:
    delete:
      description: Delete a Certificate
      operationId: delete-certificate
      parameters:
        - $ref: '#/components/parameters/CertificateId'
      responses:
        '204':
          description: Successfully deleted Certificate or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Certificate
      tags:
        - Certificates
      x-speakeasy-entity-operation: GatewayCertificate#delete
    get:
      description: Get a Certificate using ID.
      operationId: get-certificate
      parameters:
        - $ref: '#/components/parameters/CertificateId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: Successfully fetched Certificate
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Certificate
      tags:
        - Certificates
      x-speakeasy-entity-operation: GatewayCertificate#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/consumer_groups:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Consumer Group
      operationId: create-consumer_group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerGroup'
        description: Description of the new Consumer Group for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerGroup'
          description: Successfully created Consumer Group
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Consumer Group
      tags:
        - Consumer Groups
      x-speakeasy-entity-operation: GatewayConsumerGroup#create
  /v2/control-planes/{controlPlaneId}/core-entities/consumer_groups/{ConsumerGroupId}:
    delete:
      description: Delete a Consumer Group
      operationId: delete-consumer_group
      parameters:
        - $ref: '#/components/parameters/ConsumerGroupId'
      responses:
        '204':
          description: Successfully deleted Consumer Group or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Consumer Group
      tags:
        - Consumer Groups
      x-speakeasy-entity-operation: GatewayConsumerGroup#delete
    get:
      description: Get a Consumer Group using ID.
      operationId: get-consumer_group
      parameters:
        - $ref: '#/components/parameters/ConsumerGroupId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerGroup'
          description: Successfully fetched Consumer Group
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Consumer Group
      tags:
        - Consumer Groups
      x-speakeasy-entity-operation: GatewayConsumerGroup#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/consumers:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Consumer
      operationId: create-consumer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Consumer'
        description: Description of the new Consumer for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumer'
          description: Successfully created Consumer
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Consumer
      tags:
        - Consumers
      x-speakeasy-entity-operation: GatewayConsumer#create
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerId}:
    delete:
      description: Delete a Consumer
      operationId: delete-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerId'
      responses:
        '204':
          description: Successfully deleted Consumer or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Consumer
      tags:
        - Consumers
      x-speakeasy-entity-operation: GatewayConsumer#delete
    get:
      description: Get a Consumer using ID or username.
      operationId: get-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consumer'
          description: Successfully fetched Consumer
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Consumer
      tags:
        - Consumers
      x-speakeasy-entity-operation: GatewayConsumer#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/acls:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new ACL associated with a Consumer
      operationId: create-acl-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ACLWithoutParents'
        description: Description of new ACL for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACL'
          description: Successfully created ACL
      summary: Create a new ACL associated with a Consumer
      tags:
        - ACLs
      x-speakeasy-entity-operation: GatewayACL#create
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/acls/{ACLId}:
    delete:
      description: Delete a an ACL associated with a a Consumer using ID.
      operationId: delete-acl-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/ACLId'
      responses:
        '204':
          description: Successfully deleted ACL or the resource didn't exist
      summary: Delete a an ACL associated with a a Consumer
      tags:
        - ACLs
      x-speakeasy-entity-operation: GatewayACL#delete
    get:
      description: Get an ACL associated with a Consumer using ID.
      operationId: get-acl-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/ACLId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACL'
          description: Successfully fetched ACL
        '404':
          description: Resource does not exist
      summary: Fetch an ACL associated with a Consumer
      tags:
        - ACLs
      x-speakeasy-entity-operation: GatewayACL#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/basic-auth:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Basic-auth credential associated with a Consumer
      operationId: create-basic-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicAuthWithoutParents'
        description: Description of new Basic-auth credential for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicAuth'
          description: Successfully created Basic-auth credential
      summary: Create a new Basic-auth credential associated with a Consumer
      tags:
        - Basic-auth credentials
      x-speakeasy-entity-operation: GatewayBasicAuth#create
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/basic-auth/{BasicAuthId}:
    delete:
      description: Delete a a Basic-auth credential associated with a a Consumer using ID.
      operationId: delete-basic-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/BasicAuthId'
      responses:
        '204':
          description: >-
            Successfully deleted Basic-auth credential or the resource didn't
            exist
      summary: Delete a a Basic-auth credential associated with a a Consumer
      tags:
        - Basic-auth credentials
      x-speakeasy-entity-operation: GatewayBasicAuth#delete
    get:
      description: Get a Basic-auth credential associated with a Consumer using ID.
      operationId: get-basic-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/BasicAuthId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicAuth'
          description: Successfully fetched Basic-auth credential
        '404':
          description: Resource does not exist
      summary: Fetch a Basic-auth credential associated with a Consumer
      tags:
        - Basic-auth credentials
      x-speakeasy-entity-operation: GatewayBasicAuth#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/hmac-auth:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new HMAC-auth credential associated with a Consumer
      operationId: create-hmac-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HMACAuthWithoutParents'
        description: Description of new HMAC-auth credential for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HMACAuth'
          description: Successfully created HMAC-auth credential
      summary: Create a new HMAC-auth credential associated with a Consumer
      tags:
        - HMAC-auth credentials
      x-speakeasy-entity-operation: GatewayHMACAuth#create
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/hmac-auth/{HMACAuthId}:
    delete:
      description: Delete a a HMAC-auth credential associated with a a Consumer using ID.
      operationId: delete-hmac-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/HMACAuthId'
      responses:
        '204':
          description: >-
            Successfully deleted HMAC-auth credential or the resource didn't
            exist
      summary: Delete a a HMAC-auth credential associated with a a Consumer
      tags:
        - HMAC-auth credentials
      x-speakeasy-entity-operation: GatewayHMACAuth#delete
    get:
      description: Get a HMAC-auth credential associated with a Consumer using ID.
      operationId: get-hmac-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/HMACAuthId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HMACAuth'
          description: Successfully fetched HMAC-auth credential
        '404':
          description: Resource does not exist
      summary: Fetch a HMAC-auth credential associated with a Consumer
      tags:
        - HMAC-auth credentials
      x-speakeasy-entity-operation: GatewayHMACAuth#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/jwt:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new JWT associated with a Consumer
      operationId: create-jwt-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JWTWithoutParents'
        description: Description of new JWT for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: Successfully created JWT
      summary: Create a new JWT associated with a Consumer
      tags:
        - JWTs
      x-speakeasy-entity-operation: GatewayJWT#create
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/jwt/{JWTId}:
    delete:
      description: Delete a a JWT associated with a a Consumer using ID.
      operationId: delete-jwt-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/JWTId'
      responses:
        '204':
          description: Successfully deleted JWT or the resource didn't exist
      summary: Delete a a JWT associated with a a Consumer
      tags:
        - JWTs
      x-speakeasy-entity-operation: GatewayJWT#delete
    get:
      description: Get a JWT associated with a Consumer using ID.
      operationId: get-jwt-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/JWTId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: Successfully fetched JWT
        '404':
          description: Resource does not exist
      summary: Fetch a JWT associated with a Consumer
      tags:
        - JWTs
      x-speakeasy-entity-operation: GatewayJWT#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/key-auth:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new API-key associated with a Consumer
      operationId: create-key-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyAuthWithoutParents'
        description: Description of new API-key for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyAuth'
          description: Successfully created API-key
      summary: Create a new API-key associated with a Consumer
      tags:
        - API-keys
      x-speakeasy-entity-operation: GatewayKeyAuth#create
  /v2/control-planes/{controlPlaneId}/core-entities/consumers/{ConsumerIdForNestedEntities}/key-auth/{KeyAuthId}:
    delete:
      description: Delete a an API-key associated with a a Consumer using ID.
      operationId: delete-key-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/KeyAuthId'
      responses:
        '204':
          description: Successfully deleted API-key or the resource didn't exist
      summary: Delete a an API-key associated with a a Consumer
      tags:
        - API-keys
      x-speakeasy-entity-operation: GatewayKeyAuth#delete
    get:
      description: Get an API-key associated with a Consumer using ID.
      operationId: get-key-auth-with-consumer
      parameters:
        - $ref: '#/components/parameters/ConsumerIdForNestedEntities'
        - $ref: '#/components/parameters/KeyAuthId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyAuth'
          description: Successfully fetched API-key
        '404':
          description: Resource does not exist
      summary: Fetch an API-key associated with a Consumer
      tags:
        - API-keys
      x-speakeasy-entity-operation: GatewayKeyAuth#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/key-sets:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new KeySet
      operationId: create-key-set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeySet'
        description: Description of the new KeySet for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeySet'
          description: Successfully created KeySet
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new KeySet
      tags:
        - KeySets
      x-speakeasy-entity-operation: GatewayKeySet#create
  /v2/control-planes/{controlPlaneId}/core-entities/key-sets/{KeySetId}:
    delete:
      description: Delete a KeySet
      operationId: delete-key-set
      parameters:
        - $ref: '#/components/parameters/KeySetId'
      responses:
        '204':
          description: Successfully deleted KeySet or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a KeySet
      tags:
        - KeySets
      x-speakeasy-entity-operation: GatewayKeySet#delete
    get:
      description: Get a KeySet using ID or name.
      operationId: get-key-set
      parameters:
        - $ref: '#/components/parameters/KeySetId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeySet'
          description: Successfully fetched KeySet
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a KeySet
      tags:
        - KeySets
      x-speakeasy-entity-operation: GatewayKeySet#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/keys:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Key
      operationId: create-key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
        description: Description of the new Key for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
          description: Successfully created Key
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Key
      tags:
        - Keys
      x-speakeasy-entity-operation: GatewayKey#create
  /v2/control-planes/{controlPlaneId}/core-entities/keys/{KeyId}:
    delete:
      description: Delete a Key
      operationId: delete-key
      parameters:
        - $ref: '#/components/parameters/KeyId'
      responses:
        '204':
          description: Successfully deleted Key or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Key
      tags:
        - Keys
      x-speakeasy-entity-operation: GatewayKey#delete
    get:
      description: Get a Key using ID or name.
      operationId: get-key
      parameters:
        - $ref: '#/components/parameters/KeyId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
          description: Successfully fetched Key
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Key
      tags:
        - Keys
      x-speakeasy-entity-operation: GatewayKey#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#ACL:
    delete:
      description: Delete a ACL plugin
      operationId: delete-acl-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a ACL plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginACL#delete
    get:
      description: Get a ACL plugin
      operationId: get-acl-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLPlugin'
          description: ACL plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a ACL plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginACL#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a ACL plugin
      operationId: update-acl-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateACLPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLPlugin'
          description: ACL plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a ACL plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginACL#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#AIPromptDecorator:
    delete:
      description: Delete a AIPromptDecorator plugin
      operationId: delete-aipromptdecorator-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a AIPromptDecorator plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptDecorator#delete
    get:
      description: Get a AIPromptDecorator plugin
      operationId: get-aipromptdecorator-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptDecoratorPlugin'
          description: AIPromptDecorator plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a AIPromptDecorator plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptDecorator#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a AIPromptDecorator plugin
      operationId: update-aipromptdecorator-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIPromptDecoratorPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptDecoratorPlugin'
          description: AIPromptDecorator plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a AIPromptDecorator plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptDecorator#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#AIPromptGuard:
    delete:
      description: Delete a AIPromptGuard plugin
      operationId: delete-aipromptguard-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a AIPromptGuard plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptGuard#delete
    get:
      description: Get a AIPromptGuard plugin
      operationId: get-aipromptguard-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptGuardPlugin'
          description: AIPromptGuard plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a AIPromptGuard plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptGuard#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a AIPromptGuard plugin
      operationId: update-aipromptguard-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIPromptGuardPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptGuardPlugin'
          description: AIPromptGuard plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a AIPromptGuard plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptGuard#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#AIPromptTemplate:
    delete:
      description: Delete a AIPromptTemplate plugin
      operationId: delete-aiprompttemplate-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a AIPromptTemplate plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptTemplate#delete
    get:
      description: Get a AIPromptTemplate plugin
      operationId: get-aiprompttemplate-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptTemplatePlugin'
          description: AIPromptTemplate plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a AIPromptTemplate plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptTemplate#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a AIPromptTemplate plugin
      operationId: update-aiprompttemplate-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIPromptTemplatePlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptTemplatePlugin'
          description: AIPromptTemplate plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a AIPromptTemplate plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptTemplate#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#AIProxy:
    delete:
      description: Delete a AIProxy plugin
      operationId: delete-aiproxy-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a AIProxy plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIProxy#delete
    get:
      description: Get a AIProxy plugin
      operationId: get-aiproxy-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIProxyPlugin'
          description: AIProxy plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a AIProxy plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIProxy#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a AIProxy plugin
      operationId: update-aiproxy-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIProxyPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIProxyPlugin'
          description: AIProxy plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a AIProxy plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIProxy#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#AWSLambda:
    delete:
      description: Delete a AWSLambda plugin
      operationId: delete-awslambda-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a AWSLambda plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAWSLambda#delete
    get:
      description: Get a AWSLambda plugin
      operationId: get-awslambda-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSLambdaPlugin'
          description: AWSLambda plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a AWSLambda plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAWSLambda#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a AWSLambda plugin
      operationId: update-awslambda-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAWSLambdaPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSLambdaPlugin'
          description: AWSLambda plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a AWSLambda plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAWSLambda#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#BasicAuth:
    delete:
      description: Delete a BasicAuth plugin
      operationId: delete-basicauth-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a BasicAuth plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginBasicAuth#delete
    get:
      description: Get a BasicAuth plugin
      operationId: get-basicauth-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicAuthPlugin'
          description: BasicAuth plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a BasicAuth plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginBasicAuth#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a BasicAuth plugin
      operationId: update-basicauth-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBasicAuthPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicAuthPlugin'
          description: BasicAuth plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a BasicAuth plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginBasicAuth#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#CorrelationId:
    delete:
      description: Delete a CorrelationId plugin
      operationId: delete-correlationid-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a CorrelationId plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginCorrelationId#delete
    get:
      description: Get a CorrelationId plugin
      operationId: get-correlationid-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrelationIdPlugin'
          description: CorrelationId plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a CorrelationId plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginCorrelationId#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a CorrelationId plugin
      operationId: update-correlationid-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCorrelationIdPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrelationIdPlugin'
          description: CorrelationId plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a CorrelationId plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginCorrelationId#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#CORS:
    delete:
      description: Delete a CORS plugin
      operationId: delete-cors-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a CORS plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginCORS#delete
    get:
      description: Get a CORS plugin
      operationId: get-cors-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CORSPlugin'
          description: CORS plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a CORS plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginCORS#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a CORS plugin
      operationId: update-cors-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCORSPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CORSPlugin'
          description: CORS plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a CORS plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginCORS#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#FileLog:
    delete:
      description: Delete a FileLog plugin
      operationId: delete-filelog-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a FileLog plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginFileLog#delete
    get:
      description: Get a FileLog plugin
      operationId: get-filelog-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileLogPlugin'
          description: FileLog plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a FileLog plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginFileLog#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a FileLog plugin
      operationId: update-filelog-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFileLogPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileLogPlugin'
          description: FileLog plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a FileLog plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginFileLog#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#IpRestriction:
    delete:
      description: Delete a IpRestriction plugin
      operationId: delete-iprestriction-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a IpRestriction plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginIpRestriction#delete
    get:
      description: Get a IpRestriction plugin
      operationId: get-iprestriction-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRestrictionPlugin'
          description: IpRestriction plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a IpRestriction plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginIpRestriction#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a IpRestriction plugin
      operationId: update-iprestriction-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIpRestrictionPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRestrictionPlugin'
          description: IpRestriction plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a IpRestriction plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginIpRestriction#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#JQ:
    delete:
      description: Delete a JQ plugin
      operationId: delete-jq-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a JQ plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJQ#delete
    get:
      description: Get a JQ plugin
      operationId: get-jq-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JQPlugin'
          description: JQ plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a JQ plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJQ#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a JQ plugin
      operationId: update-jq-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJQPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JQPlugin'
          description: JQ plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a JQ plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJQ#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#JWT:
    delete:
      description: Delete a JWT plugin
      operationId: delete-jwt-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a JWT plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJWT#delete
    get:
      description: Get a JWT plugin
      operationId: get-jwt-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTPlugin'
          description: JWT plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a JWT plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJWT#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a JWT plugin
      operationId: update-jwt-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJWTPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTPlugin'
          description: JWT plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a JWT plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJWT#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#JWTSigner:
    delete:
      description: Delete a JWTSigner plugin
      operationId: delete-jwtsigner-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a JWTSigner plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJWTSigner#delete
    get:
      description: Get a JWTSigner plugin
      operationId: get-jwtsigner-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTSignerPlugin'
          description: JWTSigner plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a JWTSigner plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJWTSigner#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a JWTSigner plugin
      operationId: update-jwtsigner-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJWTSignerPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTSignerPlugin'
          description: JWTSigner plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a JWTSigner plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJWTSigner#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#KeyAuth:
    delete:
      description: Delete a KeyAuth plugin
      operationId: delete-keyauth-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a KeyAuth plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginKeyAuth#delete
    get:
      description: Get a KeyAuth plugin
      operationId: get-keyauth-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyAuthPlugin'
          description: KeyAuth plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a KeyAuth plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginKeyAuth#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a KeyAuth plugin
      operationId: update-keyauth-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKeyAuthPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyAuthPlugin'
          description: KeyAuth plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a KeyAuth plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginKeyAuth#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#Oauth2:
    delete:
      description: Delete a Oauth2 plugin
      operationId: delete-oauth2-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Oauth2 plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOauth2#delete
    get:
      description: Get a Oauth2 plugin
      operationId: get-oauth2-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oauth2Plugin'
          description: Oauth2 plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a Oauth2 plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOauth2#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a Oauth2 plugin
      operationId: update-oauth2-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOauth2Plugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oauth2Plugin'
          description: Oauth2 plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a Oauth2 plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOauth2#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#OpenidConnect:
    delete:
      description: Delete a OpenidConnect plugin
      operationId: delete-openidconnect-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a OpenidConnect plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOpenidConnect#delete
    get:
      description: Get a OpenidConnect plugin
      operationId: get-openidconnect-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenidConnectPlugin'
          description: OpenidConnect plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a OpenidConnect plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOpenidConnect#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a OpenidConnect plugin
      operationId: update-openidconnect-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpenidConnectPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenidConnectPlugin'
          description: OpenidConnect plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a OpenidConnect plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOpenidConnect#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#Opentelemetry:
    delete:
      description: Delete a Opentelemetry plugin
      operationId: delete-opentelemetry-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Opentelemetry plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOpentelemetry#delete
    get:
      description: Get a Opentelemetry plugin
      operationId: get-opentelemetry-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpentelemetryPlugin'
          description: Opentelemetry plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a Opentelemetry plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOpentelemetry#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a Opentelemetry plugin
      operationId: update-opentelemetry-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpentelemetryPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpentelemetryPlugin'
          description: Opentelemetry plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a Opentelemetry plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOpentelemetry#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#PreFunction:
    delete:
      description: Delete a PreFunction plugin
      operationId: delete-prefunction-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a PreFunction plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginPreFunction#delete
    get:
      description: Get a PreFunction plugin
      operationId: get-prefunction-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreFunctionPlugin'
          description: PreFunction plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a PreFunction plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginPreFunction#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a PreFunction plugin
      operationId: update-prefunction-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePreFunctionPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreFunctionPlugin'
          description: PreFunction plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a PreFunction plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginPreFunction#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#Prometheus:
    delete:
      description: Delete a Prometheus plugin
      operationId: delete-prometheus-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Prometheus plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginPrometheus#delete
    get:
      description: Get a Prometheus plugin
      operationId: get-prometheus-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrometheusPlugin'
          description: Prometheus plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a Prometheus plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginPrometheus#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a Prometheus plugin
      operationId: update-prometheus-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePrometheusPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrometheusPlugin'
          description: Prometheus plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a Prometheus plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginPrometheus#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#ProxyCache:
    delete:
      description: Delete a ProxyCache plugin
      operationId: delete-proxycache-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a ProxyCache plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginProxyCache#delete
    get:
      description: Get a ProxyCache plugin
      operationId: get-proxycache-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyCachePlugin'
          description: ProxyCache plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a ProxyCache plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginProxyCache#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a ProxyCache plugin
      operationId: update-proxycache-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProxyCachePlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyCachePlugin'
          description: ProxyCache plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a ProxyCache plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginProxyCache#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#RateLimiting:
    delete:
      description: Delete a RateLimiting plugin
      operationId: delete-ratelimiting-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a RateLimiting plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRateLimiting#delete
    get:
      description: Get a RateLimiting plugin
      operationId: get-ratelimiting-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitingPlugin'
          description: RateLimiting plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a RateLimiting plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRateLimiting#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a RateLimiting plugin
      operationId: update-ratelimiting-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRateLimitingPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitingPlugin'
          description: RateLimiting plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a RateLimiting plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRateLimiting#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#RateLimitingAdvanced:
    delete:
      description: Delete a RateLimitingAdvanced plugin
      operationId: delete-ratelimitingadvanced-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a RateLimitingAdvanced plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRateLimitingAdvanced#delete
    get:
      description: Get a RateLimitingAdvanced plugin
      operationId: get-ratelimitingadvanced-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitingAdvancedPlugin'
          description: RateLimitingAdvanced plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a RateLimitingAdvanced plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRateLimitingAdvanced#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a RateLimitingAdvanced plugin
      operationId: update-ratelimitingadvanced-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRateLimitingAdvancedPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitingAdvancedPlugin'
          description: RateLimitingAdvanced plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a RateLimitingAdvanced plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRateLimitingAdvanced#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#RequestTermination:
    delete:
      description: Delete a RequestTermination plugin
      operationId: delete-requesttermination-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a RequestTermination plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTermination#delete
    get:
      description: Get a RequestTermination plugin
      operationId: get-requesttermination-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTerminationPlugin'
          description: RequestTermination plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a RequestTermination plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTermination#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a RequestTermination plugin
      operationId: update-requesttermination-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestTerminationPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTerminationPlugin'
          description: RequestTermination plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a RequestTermination plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTermination#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#RequestTransformer:
    delete:
      description: Delete a RequestTransformer plugin
      operationId: delete-requesttransformer-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a RequestTransformer plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTransformer#delete
    get:
      description: Get a RequestTransformer plugin
      operationId: get-requesttransformer-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTransformerPlugin'
          description: RequestTransformer plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a RequestTransformer plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTransformer#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a RequestTransformer plugin
      operationId: update-requesttransformer-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestTransformerPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTransformerPlugin'
          description: RequestTransformer plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a RequestTransformer plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTransformer#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#RequestTransformerAdvanced:
    delete:
      description: Delete a RequestTransformerAdvanced plugin
      operationId: delete-requesttransformeradvanced-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a RequestTransformerAdvanced plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTransformerAdvanced#delete
    get:
      description: Get a RequestTransformerAdvanced plugin
      operationId: get-requesttransformeradvanced-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTransformerAdvancedPlugin'
          description: RequestTransformerAdvanced plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a RequestTransformerAdvanced plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTransformerAdvanced#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a RequestTransformerAdvanced plugin
      operationId: update-requesttransformeradvanced-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestTransformerAdvancedPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTransformerAdvancedPlugin'
          description: RequestTransformerAdvanced plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a RequestTransformerAdvanced plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTransformerAdvanced#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#ResponseTransformer:
    delete:
      description: Delete a ResponseTransformer plugin
      operationId: delete-responsetransformer-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a ResponseTransformer plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginResponseTransformer#delete
    get:
      description: Get a ResponseTransformer plugin
      operationId: get-responsetransformer-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransformerPlugin'
          description: ResponseTransformer plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a ResponseTransformer plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginResponseTransformer#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a ResponseTransformer plugin
      operationId: update-responsetransformer-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResponseTransformerPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransformerPlugin'
          description: ResponseTransformer plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a ResponseTransformer plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginResponseTransformer#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#ResponseTransformerAdvanced:
    delete:
      description: Delete a ResponseTransformerAdvanced plugin
      operationId: delete-responsetransformeradvanced-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a ResponseTransformerAdvanced plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginResponseTransformerAdvanced#delete
    get:
      description: Get a ResponseTransformerAdvanced plugin
      operationId: get-responsetransformeradvanced-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransformerAdvancedPlugin'
          description: ResponseTransformerAdvanced plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a ResponseTransformerAdvanced plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginResponseTransformerAdvanced#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a ResponseTransformerAdvanced plugin
      operationId: update-responsetransformeradvanced-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResponseTransformerAdvancedPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransformerAdvancedPlugin'
          description: ResponseTransformerAdvanced plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a ResponseTransformerAdvanced plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginResponseTransformerAdvanced#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins/{PluginId}#Saml:
    delete:
      description: Delete a Saml plugin
      operationId: delete-saml-plugin
      responses:
        '204':
          description: Successfully deleted Plugin or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Saml plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginSaml#delete
    get:
      description: Get a Saml plugin
      operationId: get-saml-plugin
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlPlugin'
          description: Saml plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Get a Saml plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginSaml#read
    parameters:
      - $ref: '#/components/parameters/PluginId'
      - $ref: '#/components/parameters/ControlPlaneId'
    put:
      description: Update a Saml plugin
      operationId: update-saml-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSamlPlugin'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlPlugin'
          description: Saml plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Update a Saml plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginSaml#update
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#ACL:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a ACL plugin
      operationId: create-acl-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateACLPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACLPlugin'
          description: Created ACL plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a ACL plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginACL#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#AIPromptDecorator:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a AIPromptDecorator plugin
      operationId: create-aipromptdecorator-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIPromptDecoratorPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptDecoratorPlugin'
          description: Created AIPromptDecorator plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a AIPromptDecorator plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptDecorator#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#AIPromptGuard:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a AIPromptGuard plugin
      operationId: create-aipromptguard-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIPromptGuardPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptGuardPlugin'
          description: Created AIPromptGuard plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a AIPromptGuard plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptGuard#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#AIPromptTemplate:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a AIPromptTemplate plugin
      operationId: create-aiprompttemplate-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIPromptTemplatePlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIPromptTemplatePlugin'
          description: Created AIPromptTemplate plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a AIPromptTemplate plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIPromptTemplate#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#AIProxy:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a AIProxy plugin
      operationId: create-aiproxy-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIProxyPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIProxyPlugin'
          description: Created AIProxy plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a AIProxy plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAIProxy#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#AWSLambda:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a AWSLambda plugin
      operationId: create-awslambda-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAWSLambdaPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSLambdaPlugin'
          description: Created AWSLambda plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a AWSLambda plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginAWSLambda#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#BasicAuth:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a BasicAuth plugin
      operationId: create-basicauth-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBasicAuthPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicAuthPlugin'
          description: Created BasicAuth plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a BasicAuth plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginBasicAuth#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#CorrelationId:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a CorrelationId plugin
      operationId: create-correlationid-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCorrelationIdPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrelationIdPlugin'
          description: Created CorrelationId plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a CorrelationId plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginCorrelationId#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#CORS:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a CORS plugin
      operationId: create-cors-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCORSPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CORSPlugin'
          description: Created CORS plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a CORS plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginCORS#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#FileLog:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a FileLog plugin
      operationId: create-filelog-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFileLogPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileLogPlugin'
          description: Created FileLog plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a FileLog plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginFileLog#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#IpRestriction:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a IpRestriction plugin
      operationId: create-iprestriction-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIpRestrictionPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRestrictionPlugin'
          description: Created IpRestriction plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a IpRestriction plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginIpRestriction#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#JQ:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a JQ plugin
      operationId: create-jq-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJQPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JQPlugin'
          description: Created JQ plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a JQ plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJQ#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#JWT:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a JWT plugin
      operationId: create-jwt-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJWTPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTPlugin'
          description: Created JWT plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a JWT plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJWT#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#JWTSigner:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a JWTSigner plugin
      operationId: create-jwtsigner-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJWTSignerPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTSignerPlugin'
          description: Created JWTSigner plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a JWTSigner plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginJWTSigner#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#KeyAuth:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a KeyAuth plugin
      operationId: create-keyauth-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKeyAuthPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyAuthPlugin'
          description: Created KeyAuth plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a KeyAuth plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginKeyAuth#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#Oauth2:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a Oauth2 plugin
      operationId: create-oauth2-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOauth2Plugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oauth2Plugin'
          description: Created Oauth2 plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a Oauth2 plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOauth2#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#OpenidConnect:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a OpenidConnect plugin
      operationId: create-openidconnect-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpenidConnectPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenidConnectPlugin'
          description: Created OpenidConnect plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a OpenidConnect plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOpenidConnect#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#Opentelemetry:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a Opentelemetry plugin
      operationId: create-opentelemetry-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpentelemetryPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpentelemetryPlugin'
          description: Created Opentelemetry plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a Opentelemetry plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginOpentelemetry#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#PreFunction:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a PreFunction plugin
      operationId: create-prefunction-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePreFunctionPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreFunctionPlugin'
          description: Created PreFunction plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a PreFunction plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginPreFunction#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#Prometheus:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a Prometheus plugin
      operationId: create-prometheus-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePrometheusPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrometheusPlugin'
          description: Created Prometheus plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a Prometheus plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginPrometheus#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#ProxyCache:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a ProxyCache plugin
      operationId: create-proxycache-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProxyCachePlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyCachePlugin'
          description: Created ProxyCache plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a ProxyCache plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginProxyCache#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#RateLimiting:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a RateLimiting plugin
      operationId: create-ratelimiting-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRateLimitingPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitingPlugin'
          description: Created RateLimiting plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a RateLimiting plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRateLimiting#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#RateLimitingAdvanced:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a RateLimitingAdvanced plugin
      operationId: create-ratelimitingadvanced-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRateLimitingAdvancedPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitingAdvancedPlugin'
          description: Created RateLimitingAdvanced plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a RateLimitingAdvanced plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRateLimitingAdvanced#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#RequestTermination:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a RequestTermination plugin
      operationId: create-requesttermination-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestTerminationPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTerminationPlugin'
          description: Created RequestTermination plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a RequestTermination plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTermination#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#RequestTransformer:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a RequestTransformer plugin
      operationId: create-requesttransformer-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestTransformerPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTransformerPlugin'
          description: Created RequestTransformer plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a RequestTransformer plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTransformer#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#RequestTransformerAdvanced:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a RequestTransformerAdvanced plugin
      operationId: create-requesttransformeradvanced-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequestTransformerAdvancedPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTransformerAdvancedPlugin'
          description: Created RequestTransformerAdvanced plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a RequestTransformerAdvanced plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginRequestTransformerAdvanced#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#ResponseTransformer:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a ResponseTransformer plugin
      operationId: create-responsetransformer-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResponseTransformerPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransformerPlugin'
          description: Created ResponseTransformer plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a ResponseTransformer plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginResponseTransformer#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#ResponseTransformerAdvanced:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a ResponseTransformerAdvanced plugin
      operationId: create-responsetransformeradvanced-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResponseTransformerAdvancedPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseTransformerAdvancedPlugin'
          description: Created ResponseTransformerAdvanced plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a ResponseTransformerAdvanced plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginResponseTransformerAdvanced#create
  /v2/control-planes/{controlPlaneId}/core-entities/plugins#Saml:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a Saml plugin
      operationId: create-saml-plugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSamlPlugin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlPlugin'
          description: Created Saml plugin
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a Saml plugin
      tags:
        - Plugins
      x-speakeasy-entity-operation: GatewayPluginSaml#create
  /v2/control-planes/{controlPlaneId}/core-entities/routes:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Route
      operationId: create-route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
        description: Description of the new Route for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: Successfully created Route
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Route
      tags:
        - Routes
      x-speakeasy-entity-operation: GatewayRoute#create
  /v2/control-planes/{controlPlaneId}/core-entities/routes/{RouteId}:
    delete:
      description: Delete a Route
      operationId: delete-route
      parameters:
        - $ref: '#/components/parameters/RouteId'
      responses:
        '204':
          description: Successfully deleted Route or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Route
      tags:
        - Routes
      x-speakeasy-entity-operation: GatewayRoute#delete
    get:
      description: Get a Route using ID or name.
      operationId: get-route
      parameters:
        - $ref: '#/components/parameters/RouteId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: Successfully fetched Route
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Route
      tags:
        - Routes
      x-speakeasy-entity-operation: GatewayRoute#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/services:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Service
      operationId: create-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
        description: Description of the new Service for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Successfully created Service
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Service
      tags:
        - Services
      x-speakeasy-entity-operation: GatewayService#create
  /v2/control-planes/{controlPlaneId}/core-entities/services/{ServiceId}:
    delete:
      description: Delete a Service
      operationId: delete-service
      parameters:
        - $ref: '#/components/parameters/ServiceId'
      responses:
        '204':
          description: Successfully deleted Service or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Service
      tags:
        - Services
      x-speakeasy-entity-operation: GatewayService#delete
    get:
      description: Get a Service using ID or name.
      operationId: get-service
      parameters:
        - $ref: '#/components/parameters/ServiceId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Successfully fetched Service
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Service
      tags:
        - Services
      x-speakeasy-entity-operation: GatewayService#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/snis:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new SNI
      operationId: create-sni
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNI'
        description: Description of the new SNI for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNI'
          description: Successfully created SNI
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new SNI
      tags:
        - SNIs
      x-speakeasy-entity-operation: GatewaySNI#create
  /v2/control-planes/{controlPlaneId}/core-entities/snis/{SNIId}:
    delete:
      description: Delete an SNI
      operationId: delete-sni
      parameters:
        - $ref: '#/components/parameters/SNIId'
      responses:
        '204':
          description: Successfully deleted SNI or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete an SNI
      tags:
        - SNIs
      x-speakeasy-entity-operation: GatewaySNI#delete
    get:
      description: Get an SNI using ID or name.
      operationId: get-sni
      parameters:
        - $ref: '#/components/parameters/SNIId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNI'
          description: Successfully fetched SNI
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch an SNI
      tags:
        - SNIs
      x-speakeasy-entity-operation: GatewaySNI#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/upstreams:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Upstream
      operationId: create-upstream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Upstream'
        description: Description of the new Upstream for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upstream'
          description: Successfully created Upstream
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Upstream
      tags:
        - Upstreams
      x-speakeasy-entity-operation: GatewayUpstream#create
  /v2/control-planes/{controlPlaneId}/core-entities/upstreams/{UpstreamId}:
    delete:
      description: Delete an Upstream
      operationId: delete-upstream
      parameters:
        - $ref: '#/components/parameters/UpstreamId'
      responses:
        '204':
          description: Successfully deleted Upstream or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete an Upstream
      tags:
        - Upstreams
      x-speakeasy-entity-operation: GatewayUpstream#delete
    get:
      description: Get an Upstream using ID or name.
      operationId: get-upstream
      parameters:
        - $ref: '#/components/parameters/UpstreamId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upstream'
          description: Successfully fetched Upstream
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch an Upstream
      tags:
        - Upstreams
      x-speakeasy-entity-operation: GatewayUpstream#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/upstreams/{UpstreamIdForTarget}/targets:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Target associated with an Upstream
      operationId: create-target-with-upstream
      parameters:
        - $ref: '#/components/parameters/UpstreamIdForTarget'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetWithoutParents'
        description: Description of new Target for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: Successfully created Target
      summary: Create a new Target associated with an Upstream
      tags:
        - Targets
      x-speakeasy-entity-operation: GatewayTarget#create
  /v2/control-planes/{controlPlaneId}/core-entities/upstreams/{UpstreamIdForTarget}/targets/{TargetId}:
    delete:
      description: Delete a a Target associated with a an Upstream using ID or target.
      operationId: delete-target-with-upstream
      parameters:
        - $ref: '#/components/parameters/UpstreamIdForTarget'
        - $ref: '#/components/parameters/TargetId'
      responses:
        '204':
          description: Successfully deleted Target or the resource didn't exist
      summary: Delete a a Target associated with a an Upstream
      tags:
        - Targets
      x-speakeasy-entity-operation: GatewayTarget#delete
    get:
      description: Get a Target associated with an Upstream using ID or target.
      operationId: get-target-with-upstream
      parameters:
        - $ref: '#/components/parameters/UpstreamIdForTarget'
        - $ref: '#/components/parameters/TargetId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: Successfully fetched Target
        '404':
          description: Resource does not exist
      summary: Fetch a Target associated with an Upstream
      tags:
        - Targets
      x-speakeasy-entity-operation: GatewayTarget#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/core-entities/vaults:
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
    post:
      description: Create a new Vault
      operationId: create-vault
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vault'
        description: Description of the new Vault for creation
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
          description: Successfully created Vault
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Create a new Vault
      tags:
        - Vaults
      x-speakeasy-entity-operation: GatewayVault#create
  /v2/control-planes/{controlPlaneId}/core-entities/vaults/{VaultId}:
    delete:
      description: Delete a Vault
      operationId: delete-vault
      parameters:
        - $ref: '#/components/parameters/VaultId'
      responses:
        '204':
          description: Successfully deleted Vault or the resource didn't exist
        '401':
          $ref: '#/components/responses/HTTP401Error'
      summary: Delete a Vault
      tags:
        - Vaults
      x-speakeasy-entity-operation: GatewayVault#delete
    get:
      description: Get a Vault using ID or prefix.
      operationId: get-vault
      parameters:
        - $ref: '#/components/parameters/VaultId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
          description: Successfully fetched Vault
        '401':
          $ref: '#/components/responses/HTTP401Error'
        '404':
          description: Resource does not exist
      summary: Fetch a Vault
      tags:
        - Vaults
      x-speakeasy-entity-operation: GatewayVault#read
    parameters:
      - $ref: '#/components/parameters/ControlPlaneId'
  /v2/control-planes/{controlPlaneId}/dp-client-certificates:
    parameters:
      - $ref: '#/components/parameters/controlPlaneId'
    post:
      x-speakeasy-entity-operation: GatewayDataPlaneClientCertificate#create
      summary: Pin New DP Client Certificate
      description: >-
        Pin a new DP Client Certificate to this control plane. A pinned
        dataplane certificate allows dataplanes configured with the certificate
        and corresponding private key to establish connection with this control
        plane.
      operationId: create-dataplane-certificate
      requestBody:
        $ref: '#/components/requestBodies/DataPlaneClientCertificateRequest'
      responses:
        '201':
          $ref: '#/components/responses/DataPlaneClientCertificateResponse'
      tags:
        - DP Certificates
  /v2/control-planes/{controlPlaneId}/dp-client-certificates/{certificateId}:
    parameters:
      - $ref: '#/components/parameters/controlPlaneId'
      - $ref: '#/components/parameters/DataPlaneCertificateId'
    get:
      x-speakeasy-entity-operation: GatewayDataPlaneClientCertificate#read
      summary: Fetch DP Client Certificate
      tags:
        - DP Certificates
      responses:
        '200':
          $ref: '#/components/responses/DataPlaneClientCertificateResponse'
      operationId: get-dataplane-certificate
      description: >-
        Retrieve a pinned dataplane client certificate associated to this
        control plane. A pinned dataplane certificate allows dataplanes
        configured with the certificate and corresponding private key to
        establish connection with this control plane.
    delete:
      x-speakeasy-entity-operation: GatewayDataPlaneClientCertificate#delete
      summary: Delete DP Client Certificate
      operationId: delete-dataplane-certificate
      responses:
        '204':
          description: No Content
      tags:
        - DP Certificates
      description: >-
        Remove a pinned dataplane client certificate associated to this control
        plane. Removing a pinned dataplane certificate would invalidate any
        dataplanes currently connected to this control plane using this
        certificate.
  /v2/control-planes/{id}:
    parameters:
      - schema:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        name: id
        in: path
        required: true
        description: The control plane ID
    get:
      x-speakeasy-entity-operation: GatewayControlPlane#read
      summary: Fetch Control Plane
      responses:
        '200':
          $ref: '#/components/responses/RetrieveControlPlaneResponse'
        '400':
          $ref: '#/components/responses/ControlPlanesBadRequest'
        '401':
          $ref: '#/components/responses/ControlPlaneUnauthenticated'
        '403':
          $ref: '#/components/responses/ControlPlanePermissionDenied'
        '404':
          $ref: '#/components/responses/ControlPlaneNotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      operationId: get-control-plane
      description: Returns information about a team from a given team ID.
      tags:
        - Control Planes
    patch:
      x-speakeasy-entity-operation: GatewayControlPlane#update
      summary: Update Control Plane
      operationId: update-control-plane
      responses:
        '200':
          $ref: '#/components/responses/UpdateControlPlaneResponse'
        '400':
          $ref: '#/components/responses/ControlPlanesBadRequest'
        '401':
          $ref: '#/components/responses/ControlPlaneUnauthenticated'
        '403':
          $ref: '#/components/responses/ControlPlanePermissionDenied'
        '404':
          $ref: '#/components/responses/ControlPlaneNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      description: Update an individual control plane.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateControlPlaneRequest'
      tags:
        - Control Planes
    delete:
      x-speakeasy-entity-operation: GatewayControlPlane#delete
      summary: Delete Control Plane
      operationId: delete-control-plane
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/ControlPlanesBadRequest'
        '401':
          $ref: '#/components/responses/ControlPlaneUnauthenticated'
        '403':
          $ref: '#/components/responses/ControlPlanePermissionDenied'
        '404':
          $ref: '#/components/responses/ControlPlaneNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      description: Delete an individual control plane.
      tags:
        - Control Planes
  /v2/control-planes/{id}/group-memberships/add:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of a control plane group
    post:
      x-speakeasy-entity-operation: GatewayControlPlaneMembership#create
      summary: Add Control Plane Group Members
      operationId: post-control-planes-id-group-memberships-add
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
      requestBody:
        $ref: '#/components/requestBodies/GroupMemebershipAdd'
      tags:
        - Control Plane Groups
      description: Adds one or more control planes as a member of a control plane group.
  /v2/control-planes/{id}/group-memberships/remove:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID of a control plane group
    post:
      x-speakeasy-entity-operation: GatewayControlPlaneMembership#delete
      summary: Remove Control Plane Group Members
      operationId: post-control-planes-id-group-memberships-remove
      requestBody:
        $ref: '#/components/requestBodies/GroupMembershipRemove'
      tags:
        - Control Plane Groups
      description: >-
        Removes one or more control planes from the members of a control plane
        group.
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /v2/portals:
    get:
      x-speakeasy-entity-operation: PortalList#read
      summary: List Portals
      description: >-
        Lists developer portals defined in this region for this organization.
        Each developer portal is available at a unique address and has isolated
        appearance, configuration, developers, and applications.
      operationId: list-portals
      tags:
        - Portals
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/SortPortals'
      responses:
        '200':
          $ref: '#/components/responses/ListPortals'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v2/portals/{portalId}:
    x-speakeasy-entity-operation: Portal#read
    parameters:
      - $ref: '#/components/parameters/parameters-PortalId'
    patch:
      x-speakeasy-entity-operation: Portal#create,update
      summary: Update Portal
      description: >-
        Updates the configuration for a single portal including the visibility,
        access, and custom domain settings.
      operationId: update-portal
      requestBody:
        $ref: '#/components/requestBodies/UpdatePortal'
      tags:
        - Portals
      responses:
        '200':
          $ref: '#/components/responses/UpdatePortal'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
  /v2/portals/{portalId}/authentication-settings:
    parameters:
      - $ref: '#/components/parameters/parameters-PortalId'
    get:
      x-speakeasy-entity-operation: PortalAuth#read
      summary: Get Auth Settings
      description: >-
        Returns the developer authentication configuration for a portal, which
        determines how developers can log in and how they are assigned to teams.
      operationId: get-portal-authentication-settings
      tags:
        - Portal Auth Settings
      responses:
        '200':
          $ref: '#/components/responses/PortalAuthenticationSettings'
        '401':
          $ref: '#/components/responses/Unauthorized'
    patch:
      x-speakeasy-entity-operation: PortalAuth#create,update
      summary: Update Auth Settings
      description: >-
        Updates the developer authentication configuration for a portal.
        Developers can be allowed to login using basic auth (email & password)
        or use Single-Sign-On (SSO) through an OIDC Identity Provider (IdP).
        Developers can be automatically assigned to teams by mapping claims from
        thier IdP account.
      operationId: update-portal-authentication-settings
      requestBody:
        $ref: '#/components/requestBodies/UpdatePortalAuthenticationSettings'
      tags:
        - Portal Auth Settings
      responses:
        '200':
          $ref: '#/components/responses/PortalAuthenticationSettings'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v2/portals/{portalId}/product-versions/{productVersionId}:
    parameters:
      - $ref: '#/components/parameters/ProductVersionId'
      - $ref: '#/components/parameters/PortalId'
    get:
      x-speakeasy-entity-operation: PortalProductVersion#read
      summary: Get a portal product version
      operationId: get-portal-product-version
      description: Get a portal product version
      responses:
        '200':
          $ref: '#/components/responses/PortalProductVersion'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Portal Product Versions
    put:
      x-speakeasy-entity-operation: PortalProductVersion#create,update
      summary: Replace a portal product version
      operationId: replace-portal-product-version
      description: Replace a portal product version
      requestBody:
        $ref: '#/components/requestBodies/ReplacePortalProductVersion'
      responses:
        '200':
          $ref: '#/components/responses/PortalProductVersion'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Portal Product Versions
    delete:
      x-speakeasy-entity-operation: PortalProductVersion#delete
      summary: Delete a portal product version
      operationId: delete-portal-product-version
      description: Delete a portal product version
      responses:
        '204':
          description: No Content.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Portal Product Versions
  /v3/system-accounts:
    post:
      x-speakeasy-entity-operation: SystemAccount#create
      summary: Create System Account
      operationId: post-system-accounts
      tags:
        - System Accounts
      description: >-
        Creates a system account. Returns a 409 if a system account with the
        same name already exists.
      requestBody:
        $ref: '#/components/requestBodies/CreateSystemAccount'
      responses:
        '201':
          $ref: '#/components/responses/SystemAccountSingle'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/IdentityConflict'
  /v3/system-accounts/{accountId}:
    get:
      x-speakeasy-entity-operation: SystemAccount#read
      summary: Fetch System Account
      tags:
        - System Accounts
      responses:
        '200':
          $ref: '#/components/responses/SystemAccountSingle'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      operationId: get-system-accounts-id
      description: >-
        Returns the system account (SA) for the SA ID specified as a path
        parameter.
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: ID of the system account.
        x-speakeasy-match: id
    patch:
      x-speakeasy-entity-operation: SystemAccount#update
      summary: Update System Account
      operationId: patch-system-accounts-id
      responses:
        '200':
          $ref: '#/components/responses/SystemAccountSingle'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
        '409':
          $ref: '#/components/responses/IdentityConflict'
      description: >-
        Updates the specified system account. Returns a 409 if the updated name
        is the same as another system account in the organization.
      tags:
        - System Accounts
      requestBody:
        $ref: '#/components/requestBodies/UpdateSystemAccount'
    delete:
      x-speakeasy-entity-operation: SystemAccount#delete
      summary: Delete System Account
      operationId: delete-system-accounts-id
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      description: >-
        Deletes the specified system account. Returns 404 if the requested
        account was not found.
      tags:
        - System Accounts
  /v3/system-accounts/{accountId}/access-tokens:
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: ID of the system account.
    post:
      x-speakeasy-entity-operation: SystemAccountAccessToken#create
      summary: Create System Account Access Token
      operationId: post-system-accounts-id-access-tokens
      responses:
        '201':
          $ref: '#/components/responses/SystemAccountAccessTokenCreated'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
        '409':
          $ref: '#/components/responses/IdentityConflict'
      description: >-
        Creates an access token for the specified system account (SA). The
        access token can be used for authenticating API and CLI requests. The
        token will only be displayed once on creation. Returns a 409 if the
        system account already has a token with the same name.
      requestBody:
        $ref: '#/components/requestBodies/CreateSystemAccountAccessToken'
      tags:
        - System Accounts - Access Tokens
  /v3/system-accounts/{accountId}/access-tokens/{tokenId}:
    get:
      x-speakeasy-entity-operation: SystemAccountAccessToken#read
      summary: Fetch System Account Access Token
      responses:
        '200':
          $ref: '#/components/responses/SystemAccountAccessTokenSingle'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      operationId: get-system-accounts-id-access-tokens-id
      description: >-
        Returns the system account (SA) access token for the SA Access Token ID
        specified as a path parameter.
      parameters: []
      tags:
        - System Accounts - Access Tokens
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: ID of the system account.
      - schema:
          type: string
        name: tokenId
        in: path
        required: true
        description: ID of the system account access token.
        x-speakeasy-match: id
    patch:
      x-speakeasy-entity-operation: SystemAccountAccessToken#update
      summary: Update System Account Access Token
      operationId: patch-system-accounts-id-access-tokens-id
      responses:
        '200':
          $ref: '#/components/responses/SystemAccountAccessTokenSingle'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
        '409':
          $ref: '#/components/responses/IdentityConflict'
      description: >-
        Updates the specified access token. Returns a 409 if the updated name is
        the same as another token belonging to the specified system user.
      requestBody:
        $ref: '#/components/requestBodies/UpdateSystemAccountAccessToken'
      tags:
        - System Accounts - Access Tokens
    delete:
      x-speakeasy-entity-operation: SystemAccountAccessToken#delete
      summary: Delete System Account Access Token
      operationId: delete-system-accounts-id-access-tokens-id
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      description: Deletes the specified token. Returns 404 if the token was not found.
      tags:
        - System Accounts - Access Tokens
  /v3/system-accounts/{accountId}/assigned-roles:
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: ID of the system account.
    post:
      x-speakeasy-entity-operation: SystemAccountRole#create
      summary: Create Assigned Role for System Account
      operationId: post-system-accounts-accountId-assigned-roles
      responses:
        '201':
          $ref: '#/components/responses/AssignedRoleSingle'
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
        '409':
          $ref: '#/components/responses/IdentityConflict'
      description: >-
        Assigns a role to a system account. Returns 409 if role is already
        assigned.
      requestBody:
        $ref: '#/components/requestBodies/AssignRole'
      tags:
        - System Accounts - Roles
  /v3/system-accounts/{accountId}/assigned-roles/{roleId}:
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: ID of the system account.
      - schema:
          type: string
        name: roleId
        in: path
        required: true
        description: ID of the role.
        x-speakeasy-match: id
    delete:
      x-speakeasy-entity-operation: SystemAccountRole#delete
      summary: Delete Assigned Role from System Account
      operationId: delete-system-accounts-accountId-assigned-roles-roleId
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      description: >-
        Removes an assigned role from a system account. Returns 404 if the
        system account or assigned role were not found.
      tags:
        - System Accounts - Roles
  /v3/teams/{teamId}/system-accounts:
    parameters:
      - schema:
          type: string
        name: teamId
        in: path
        required: true
        description: ID of the team.
    post:
      x-speakeasy-entity-operation: SystemAccountTeam#create
      summary: Add System Account to a Team
      operationId: post-teams-teamId-system-accounts
      responses:
        '201':
          description: Created
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
        '409':
          $ref: '#/components/responses/IdentityConflict'
      description: >-
        Adds a system account to a team. Returns a 409 if the system account is
        already a member of the team.
      requestBody:
        $ref: '#/components/requestBodies/AddSystemAccountToTeam'
      tags:
        - System Accounts - Team Membership
  /v3/teams/{teamId}/system-accounts/{accountId}:
    parameters:
      - schema:
          type: string
        name: teamId
        in: path
        required: true
        description: ID of the team.
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: ID of the system account.
    delete:
      x-speakeasy-entity-operation: SystemAccountTeam#delete
      summary: Remove System Account From Team
      operationId: delete-teams-teamId-system-accounts-accountId
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/IdentityUnauthenticated'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/IdentityNotFound'
      description: >-
        Removes a system account from a team. Returns 404 if the team or system
        account were not found.
      tags:
        - System Accounts - Team Membership
components:
  parameters:
    PageSize:
      name: page[size]
      description: >-
        The maximum number of items to include per page. The last page of a
        collection may include fewer items.
      required: false
      in: query
      allowEmptyValue: true
      schema:
        type: integer
        example: 10
    PageNumber:
      name: page[number]
      description: Determines which page of the entities to retrieve.
      required: false
      in: query
      allowEmptyValue: true
      schema:
        type: integer
        example: 1
    ConfigurationId:
      name: configurationId
      in: path
      description: The ID of the configuration to operate on.
      required: true
      schema:
        $ref: '#/components/schemas/ConfigurationId'
      x-speakeasy-match: id
    CustomDomainId:
      name: customDomainId
      description: ID of the custom domain to operate on.
      required: true
      in: path
      schema:
        $ref: '#/components/schemas/CustomDomainId'
      x-speakeasy-match: id
    NetworkId:
      name: networkId
      in: path
      description: The network to operate on.
      required: true
      schema:
        $ref: '#/components/schemas/NetworkId'
      x-speakeasy-match: id
    TransitGatewayId:
      name: transitGatewayId
      in: path
      description: The ID of the transit gateway to operate on.
      required: true
      schema:
        $ref: '#/components/schemas/TransitGatewayId'
      x-speakeasy-match: id
    controlPlaneId:
      name: controlPlaneId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 9524ec7d-36d9-465d-a8c5-83a3c9390458
      description: >-
        The UUID of your control plane. This variable is available in the
        Konnect manager
    DataPlaneCertificateId:
      name: certificateId
      in: path
      schema:
        type: string
      required: true
      x-speakeasy-match: id
    ACLId:
      description: ID of the ACL to lookup
      example: f28acbfa-c866-4587-b688-0208ac24df21
      in: path
      name: ACLId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    BasicAuthId:
      description: ID of the Basic-auth credential to lookup
      example: 80db1b58-ca7c-4d21-b92a-64eb07725872
      in: path
      name: BasicAuthId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    CACertificateId:
      description: ID of the CA Certificate to lookup
      example: 3c31f18a-f27a-4f9b-8cd4-bf841554612f
      in: path
      name: CACertificateId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    CertificateId:
      description: ID of the Certificate to lookup
      example: ddf3cdaa-3329-4961-822a-ce6dbd38eff7
      in: path
      name: CertificateId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    ConsumerGroupId:
      description: ID of the Consumer Group to lookup
      example: ''
      in: path
      name: ConsumerGroupId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    ConsumerId:
      description: ID of the Consumer to lookup
      example: c1059869-6fa7-4329-a5f5-5946d14ca2c5
      in: path
      name: ConsumerId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    ConsumerIdForNestedEntities:
      description: Consumer ID for nested entities
      example: f28acbfa-c866-4587-b688-0208ac24df21
      in: path
      name: ConsumerIdForNestedEntities
      required: true
      schema:
        type: string
      x-speakeasy-match: consumer_id
    ControlPlaneId:
      description: >-
        The UUID of your control plane. This variable is available in the
        Konnect manager.
      example: 9524ec7d-36d9-465d-a8c5-83a3c9390458
      in: path
      name: controlPlaneId
      required: true
      schema:
        format: uuid
        type: string
    HMACAuthId:
      description: ID of the HMAC-auth credential to lookup
      example: 70e7b00b-72f2-471b-a5ce-9c4171775360
      in: path
      name: HMACAuthId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    JWTId:
      description: ID of the JWT to lookup
      example: 4a7f5faa-8c96-46d6-8214-c87573ef2ac4
      in: path
      name: JWTId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    KeyAuthId:
      description: ID of the API-key to lookup
      example: ''
      in: path
      name: KeyAuthId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    KeyId:
      description: ID of the Key to lookup
      example: bba22c06-a632-42be-a018-1b9ff357b5b9
      in: path
      name: KeyId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    KeySetId:
      description: ID of the KeySet to lookup
      example: 6cc34248-50b4-4a81-9201-3bdf7a83f712
      in: path
      name: KeySetId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    PluginId:
      description: ID of the Plugin to lookup
      example: 3473c251-5b6c-4f45-b1ff-7ede735a366d
      in: path
      name: PluginId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    RouteId:
      description: ID of the Route to lookup
      example: a4326a41-aa12-44e3-93e4-6b6e58bfb9d7
      in: path
      name: RouteId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    SNIId:
      description: ID of the SNI to lookup
      example: 64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f
      in: path
      name: SNIId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    ServiceId:
      description: ID of the Service to lookup
      example: 7fca84d6-7d37-4a74-a7b0-93e576089a41
      in: path
      name: ServiceId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    TargetId:
      description: ID of the Target to lookup
      example: 5a078780-5d4c-4aae-984a-bdc6f52113d8
      in: path
      name: TargetId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    UpstreamId:
      description: ID of the Upstream to lookup
      example: 426d620c-7058-4ae6-aacc-f85a3204a2c5
      in: path
      name: UpstreamId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    UpstreamIdForTarget:
      description: ID or target of the Target to lookup
      example: 5a078780-5d4c-4aae-984a-bdc6f52113d8
      in: path
      name: UpstreamIdForTarget
      required: true
      schema:
        type: string
      x-speakeasy-match: upstream_id
    VaultId:
      description: ID of the Vault to lookup
      example: 9d4d6d19-77c6-428e-a965-9bc9647633e9
      in: path
      name: VaultId
      required: true
      schema:
        type: string
      x-speakeasy-match: id
    PortalId:
      name: portalId
      description: portal identifier
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/schemas-UUID'
    ProductVersionId:
      name: productVersionId
      description: API product version identifier
      in: path
      required: true
      x-speakeasy-match: product_version_id
      schema:
        $ref: '#/components/schemas/schemas-UUID'
    SortPortals:
      name: sort
      description: |
        Sorts a collection of portals. Supported sort attributes are:
          - name
          - description
          - is_public
          - rbac_enabled
          - auto_approve_applications
          - auto_approve_developers
          - default_domain
          - custom_domain
          - custom_client_domain
          - created_at
          - updated_at
      in: query
      required: false
      schema:
        type: string
    parameters-PortalId:
      schema:
        type: string
        format: uuid
      name: portalId
      in: path
      required: true
      description: ID of the portal.
    AuthStrategyId:
      name: authStrategyId
      description: Application auth strategy identifier
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
      x-speakeasy-match: id
  responses:
    RetrieveControlPlaneResponse:
      description: A response to retrieving a single control plane.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlPlane'
    CreateControlPlaneResponse:
      description: A response to creating a control plane.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlPlane'
    UpdateControlPlaneResponse:
      description: A response to updating a control plane.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ControlPlane'
    ControlPlanesBadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
    ControlPlanePermissionDenied:
      description: Permission denied
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    ControlPlaneUnauthenticated:
      description: Unauthenticated
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    ControlPlaneNotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    ControlPlaneConflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            title: InternalServerError
            type: object
            description: The error response object.
            properties:
              status:
                type: integer
                description: The HTTP status code.
                example: 500
                enum:
                  - 500
              title:
                type: string
                description: The error response code.
                example: Internal Server Error
              instance:
                type: string
                example: konnect:trace:2287285207635123011
                description: The Konnect traceback code
              detail:
                type: string
                example: >-
                  Could not propagate control plane changes to control plane
                  cluster service.
                description: Details about the error.
            required:
              - status
              - title
              - instance
    ServiceUnavailable:
      description: Service Unavailable
      content:
        application/problem+json:
          schema:
            title: ServiceUnavailableError
            type: object
            description: Error response for temporary service unavailability.
            properties:
              status:
                type: integer
                description: The HTTP status code.
                example: 503
                enum:
                  - 503
              title:
                type: string
                description: The error response code.
                example: Service Unavailable
              instance:
                type: string
                example: konnect:trace:2287285207635123011
                description: The Konnect traceback code
              detail:
                type: string
                example: >-
                  Could not retrieve permissions to check resource
                  accessibility.
                description: Details about the error.
            required:
              - status
              - title
              - instance
    BadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
            type: object
            title: Unauthorized Response
            description: The error response object.
            properties:
              status:
                type: integer
                example: 403
                description: The HTTP status code.
              title:
                type: string
                description: The Error Response.
                example: Unauthorized
              instance:
                type: string
                description: The Konnect traceback code.
                example: konnect:trace:952172606039454040
              detail:
                type: string
                description: Details about the error response.
                example: You do not have permission to perform this action
    Forbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    NotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    RetrieveConfigurationResponse:
      description: Response format for retrieving a configuration by ID.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConfigurationManifest'
    CreateConfigurationResponse:
      description: Response format for creating a configuration.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConfigurationManifest'
    RetrieveNetworkResponse:
      description: Response format for retrieving a network.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Network'
    CreateNetworkResponse:
      description: Response format for creating a network.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Network'
    PatchNetworkResponse:
      description: Response format for patching a network.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Network'
    CreateTransitGatewayResponse:
      description: Response format for creating a transit gateway.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransitGateway'
    RetrieveTransitGatewayResponse:
      description: Response format for retrieving a transit gateway.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransitGateway'
    ListProviderAccountsResponse:
      description: A paginated list for a collection of provider accounts.
      content:
        application/json:
          schema:
            x-speakeasy-entity: CloudGatewayProviderAccountList
            title: ListCloudGatewayProviderAccountsResponse
            type: object
            properties:
              meta:
                $ref: '#/components/schemas/PaginatedMeta'
              data:
                type: array
                items:
                  $ref: '#/components/schemas/ProviderAccount'
            required:
              - meta
              - data
    CreateCustomDomainResponse:
      description: >-
        Response format for creating a custom domain for a control-plane in the
        global API.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomDomain'
    RetrieveCustomDomainResponse:
      description: Response format for retrieving a custom domain for a control-plane.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomDomain'
    CloudGatewaysBadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
    CloudGatewaysForbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    CloudGatewaysConflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    Conflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    DataPlaneClientCertificateResponse:
      description: Response body for retrieving a dp-client-certificate.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DataPlaneClientCertificate'
    HTTP401Error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GatewayUnauthorizedError'
      description: Unauthorized
    RetrieveMeshControlPlaneResponse:
      description: A response to creating a control plane.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MeshControlPlane'
    CreateMeshControlPlaneResponse:
      description: A response to creating a control plane.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MeshControlPlane'
    CreateMeshControlPlaneValidationError:
      description: Validation Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
    UpdateMeshControlPlaneValidationError:
      description: Validation Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
    MeshControlPlaneForbiddenError:
      description: Permission denied
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    MeshControlPlaneUnauthorizedError:
      description: Unauthorized Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    MeshControlPlaneNotFoundError:
      description: Not found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    UpdateMeshControlPlaneResponse:
      description: A response to updating a control plane.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MeshControlPlane'
    ApiProductUnauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    ApiProductNotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    APIProductResponse:
      description: API product
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIProduct'
    APIProductVersionResponse:
      description: API product
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIProductVersion'
    UnsupportedMediaType:
      description: Unsupported Media Type
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnsupportedMediaTypeError'
    PortalAuthenticationSettings:
      description: Details about a portal's authentication settings.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalAuthenticationSettingsResponse'
    ListPortals:
      description: A paginated list of portals in the current region of an organization.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListPortalsResponse'
    PortalProductVersion:
      description: A response containing a portal product version
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalProductVersion'
    UpdatePortal:
      description: Details about the portal being updated.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePortalResponse'
    CreateAppAuthStrategy:
      description: >-
        A response containing the newly created application auth strategy
        object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAppAuthStrategyResponse'
    GetAppAuthStrategy:
      description: A response containing a single application auth strategy object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetAppAuthStrategyResponse'
    UpdateAppAuthStrategy:
      description: A response containing a single updated application auth strategy object.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAppAuthStrategyResponse'
    AssignedRoleSingle:
      description: A get action response of a single assigned role.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AssignedRole'
    IdentityConflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    IdentityUnauthenticated:
      description: Unauthenticated
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    IdentityNotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    SystemAccountSingle:
      description: A response including a single system account.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemAccount'
    SystemAccountAccessTokenSingle:
      description: A response including a single system account access token.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemAccountAccessToken'
    SystemAccountAccessTokenCreated:
      description: >-
        A response including a single system account access token with the
        token.
      content:
        application/json:
          schema:
            x-speakeasy-entity: SystemAccountAccessToken
            type: object
            title: System Account Access Token Created Response
            example:
              id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
              name: Sample Access Token
              created_at: '2022-08-01T14:16:09Z'
              updated_at: '2022-08-02T08:35:49Z'
              expires_at: '2022-12-31T12:52:23Z'
              last_used_at: '2022-10-24T13:05:42Z'
            properties:
              id:
                type: string
                description: ID of the system account access token.
                format: uuid
                readOnly: true
              name:
                type: string
                description: Name of the system account access token.
              created_at:
                type: string
                description: Timestamp of when the system account access token was created.
                format: date-time
                readOnly: true
              updated_at:
                type: string
                description: >-
                  Timestamp of when the system account access token was last
                  updated.
                format: date-time
                readOnly: true
              expires_at:
                type: string
                description: Timestamp of when the system account access token will expire.
                format: date-time
                readOnly: true
              last_used_at:
                type: string
                description: >-
                  Timestamp of when the system account access token was last
                  used.
                format: date-time
                readOnly: true
              token:
                type: string
                description: The token of the system account access token.
                readOnly: true
  schemas:
    GroupMembership:
      x-speakeasy-entity: GatewayControlPlaneMembership
      type: object
      properties:
        members:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
    CreateControlPlaneRequest:
      x-speakeasy-entity: GatewayControlPlane
      title: CreateControlPlaneRequest
      description: The request schema for the create control plane request.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          example: Test Control Plane
          description: The name of the control plane.
        description:
          type: string
          example: A test control plane for exploration.
          description: The description of the control plane in Konnect.
        cluster_type:
          type: string
          description: >-
            The ClusterType value of the cluster associated with the Control
            Plane.
          example: CLUSTER_TYPE_CONTROL_PLANE
          enum:
            - CLUSTER_TYPE_CONTROL_PLANE
            - CLUSTER_TYPE_HYBRID
            - CLUSTER_TYPE_K8S_INGRESS_CONTROLLER
            - CLUSTER_TYPE_CONTROL_PLANE_GROUP
        auth_type:
          type: string
          description: >-
            The auth type value of the cluster associated with the Runtime
            Group.
          example: pinned_client_certs
          enum:
            - pinned_client_certs
            - pki_client_certs
        cloud_gateway:
          type: boolean
          description: Whether this control-plane can be used for cloud-gateways.
          example: false
        proxy_urls:
          $ref: '#/components/schemas/ProxyURLs'
        labels:
          $ref: '#/components/schemas/Labels'
      required:
        - name
    UpdateControlPlaneRequest:
      title: UpdateControlPlaneRequest
      description: The request schema for the update control plane request.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          example: Test Control Plane
          description: The name of the control plane.
        description:
          type: string
          example: A test control plane for exploration.
          description: The description of the control plane in Konnect.
        auth_type:
          type: string
          description: >-
            The auth type value of the cluster associated with the Runtime
            Group.
          example: pinned_client_certs
          enum:
            - pinned_client_certs
            - pki_client_certs
        proxy_urls:
          $ref: '#/components/schemas/ProxyURLs'
        labels:
          $ref: '#/components/schemas/Labels'
    ControlPlane:
      x-speakeasy-entity: GatewayControlPlane
      allOf:
        - $ref: '#/components/schemas/ControlPlaneSummary'
        - type: object
          properties:
            labels:
              $ref: '#/components/schemas/Labels'
            config:
              x-speakeasy-param-suppress-computed-diff: true
              type: object
              description: CP configuration object for related access endpoints.
              properties:
                control_plane_endpoint:
                  type: string
                  format: url
                  example: https://acfe5f253f.cp0.konghq.com
                  description: Control Plane Endpoint.
                  readOnly: true
                telemetry_endpoint:
                  type: string
                  format: url
                  example: https://acfe5f253f.tp0.konghq.com
                  description: Telemetry Endpoint.
                  readOnly: true
            created_at:
              x-speakeasy-terraform-ignore: true
              type: string
              format: date-time
              example: '2022-11-04T20:10:06.927Z'
              description: >-
                An ISO-8604 timestamp representation of control plane creation
                date.
              readOnly: true
            updated_at:
              x-speakeasy-terraform-ignore: true
              type: string
              format: date-time
              example: '2022-11-04T20:10:06.927Z'
              description: >-
                An ISO-8604 timestamp representation of control plane update
                date.
              readOnly: true
    ControlPlaneSummary:
      title: ControlPlaneSummary
      type: object
      description: >-
        The control plane object contains information about a Kong control
        plane.
      additionalProperties: false
      properties:
        id:
          x-speakeasy-param-suppress-computed-diff: true
          type: string
          format: uuid
          example: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          description: The control plane ID.
          readOnly: true
        name:
          type: string
          example: Test Control Plane
          description: The name of the control plane.
        description:
          type: string
          example: A test control plane for exploration.
          description: The description of the control plane in Konnect.
        labels:
          $ref: '#/components/schemas/Labels'
        config:
          type: object
          description: CP configuration object for related access endpoints.
          additionalProperties: false
          properties:
            control_plane_endpoint:
              type: string
              format: url
              example: https://acfe5f253f.cp0.konghq.com
              description: Control Plane Endpoint.
              readOnly: true
            telemetry_endpoint:
              type: string
              format: url
              example: https://acfe5f253f.tp0.konghq.com
              description: Telemetry Endpoint.
              readOnly: true
            cluster_type:
              type: string
              description: >-
                The ClusterType value of the cluster associated with the Control
                Plane.
              example: CLUSTER_TYPE_CONTROL_PLANE
              enum:
                - CLUSTER_TYPE_CONTROL_PLANE
                - CLUSTER_TYPE_HYBRID
                - CLUSTER_TYPE_K8S_INGRESS_CONTROLLER
                - CLUSTER_TYPE_CONTROL_PLANE_GROUP
              readOnly: true
            auth_type:
              type: string
              description: >-
                The auth type value of the cluster associated with the Runtime
                Group.
              example: pinned_client_certs
              enum:
                - pinned_client_certs
                - pki_client_certs
              readOnly: true
            cloud_gateway:
              type: boolean
              description: Whether the Control Plane can be used for cloud-gateways.
              readOnly: true
            proxy_urls:
              $ref: '#/components/schemas/ProxyURLs'
          required:
            - control_plane_endpoint
            - telemetry_endpoint
            - cluster_type
            - auth_type
            - cloud_gateway
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Labels:
      title: Labels
      type: object
      example:
        env: test
      description: >
        Labels store metadata of an entity that can be used for filtering an
        entity list or for searching across entity types. 


        Keys must be of length 1-63 characters, and cannot start with "kong",
        "konnect", "mesh", "kic", or "_".
      additionalProperties:
        type: string
        pattern: ^[a-z0-9A-Z]{1}([a-z0-9A-Z-._]*[a-z0-9A-Z]+)?$
        minLength: 1
        maxLength: 63
      maxProperties: 50
    ProxyURL:
      title: ProxyURL
      description: >-
        Proxy URL associated with reaching the data-planes connected to a
        control-plane.
      type: object
      additionalProperties: false
      properties:
        host:
          type: string
          description: Hostname of the proxy URL.
        port:
          type: integer
          description: Port of the proxy URL.
        protocol:
          type: string
          description: Protocol of the proxy URL.
      required:
        - host
        - port
        - protocol
      example:
        host: example.com
        port: 443
        protocol: https
    ProxyURLs:
      title: ProxyURLs
      description: >-
        Array of proxy URLs associated with reaching the data-planes connected
        to a control-plane.
      type: array
      items:
        $ref: '#/components/schemas/ProxyURL'
      example:
        - host: example.com
          port: 443
          protocol: https
    PageMeta:
      type: object
      description: >-
        Contains pagination query parameters and the total number of objects
        returned.
      required:
        - number
        - size
        - total
      properties:
        number:
          type: number
          example: 1
        size:
          type: number
          example: 10
        total:
          type: number
          example: 100
    PaginatedMeta:
      type: object
      title: PaginatedMeta
      description: returns the pagination information
      properties:
        page:
          $ref: '#/components/schemas/PageMeta'
      required:
        - page
    BaseError:
      type: object
      title: Error
      description: standard error
      required:
        - status
        - title
        - instance
        - detail
      properties:
        status:
          type: integer
          description: >
            The HTTP status code of the error. Useful when passing the response

            body to child properties in a frontend UI. Must be returned as an
            integer.
          readOnly: true
        title:
          type: string
          description: |
            A short, human-readable summary of the problem. It should not
            change between occurences of a problem, except for localization.
            Should be provided as "Sentence case" for direct use in the UI.
          readOnly: true
        type:
          type: string
          description: The error type.
          readOnly: true
        instance:
          type: string
          description: |
            Used to return the correlation ID back to the user, in the format
            kong:trace:<correlation_id>. This helps us find the relevant logs
            when a customer reports an issue.
          readOnly: true
        detail:
          type: string
          description: >
            A human readable explanation specific to this occurence of the
            problem.

            This field may contain request/entity data to help the user
            understand

            what went wrong. Enclose variable values in square brackets. Should
            be

            provided as "Sentence case" for direct use in the UI.
          readOnly: true
    InvalidRules:
      description: invalid parameters rules
      type: string
      readOnly: true
      nullable: true
      enum:
        - required
        - max_length
        - is_array
        - is_base64
        - is_boolean
        - is_date_time
        - is_integer
        - is_null
        - is_number
        - is_object
        - is_string
        - is_uuid
        - is_fqdn
        - is_arn
        - unknown_property
        - is_label
        - matches_regex
        - invalid
        - is_supported_network_availability_zone_list
        - is_supported_network_cidr_block
        - is_supported_provider_region
    InvalidParameterStandard:
      type: object
      additionalProperties: false
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          $ref: '#/components/schemas/InvalidRules'
        source:
          type: string
          example: body
        reason:
          type: string
          example: is a required field
          readOnly: true
      required:
        - field
        - reason
    InvalidParameterMinimumLength:
      type: object
      additionalProperties: false
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          description: invalid parameters rules
          type: string
          readOnly: true
          nullable: false
          enum:
            - min_length
            - min_digits
            - min_lowercase
            - min_uppercase
            - min_symbols
        minimum:
          type: integer
          example: 8
        source:
          type: string
          example: body
        reason:
          type: string
          example: is a required field
          readOnly: true
      required:
        - field
        - reason
        - rule
        - minimum
    InvalidParameterChoiceItem:
      type: object
      additionalProperties: false
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          description: invalid parameters rules
          type: string
          readOnly: true
          nullable: false
          enum:
            - enum
        reason:
          type: string
          example: is a required field
          readOnly: true
        choices:
          type: array
          uniqueItems: true
          readOnly: true
          nullable: false
          minimum: 1
          items: {}
        source:
          type: string
          example: body
      required:
        - field
        - reason
        - rule
        - choices
    InvalidParameterDependentItem:
      type: object
      additionalProperties: false
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          description: invalid parameters rules
          type: string
          readOnly: true
          nullable: true
          enum:
            - dependent_fields
        reason:
          type: string
          example: is a required field
          readOnly: true
        dependents:
          type: array
          uniqueItems: true
          nullable: true
          items: {}
          readOnly: true
        source:
          type: string
          example: body
      required:
        - field
        - rule
        - reason
        - dependents
    InvalidParameters:
      type: array
      nullable: false
      uniqueItems: true
      minItems: 1
      description: invalid parameters
      items:
        oneOf:
          - $ref: '#/components/schemas/InvalidParameterStandard'
          - $ref: '#/components/schemas/InvalidParameterMinimumLength'
          - $ref: '#/components/schemas/InvalidParameterChoiceItem'
          - $ref: '#/components/schemas/InvalidParameterDependentItem'
    BadRequestError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          required:
            - invalid_parameters
          properties:
            invalid_parameters:
              $ref: '#/components/schemas/InvalidParameters'
    UnauthorizedError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            status:
              example: 401
            title:
              example: Unauthorized
            type:
              example: https://httpstatuses.com/401
            instance:
              example: kong:trace:1234567890
            detail:
              example: Invalid credentials
    ForbiddenError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            status:
              example: 403
            title:
              example: Forbidden
            type:
              example: https://httpstatuses.com/403
            instance:
              example: kong:trace:1234567890
            detail:
              example: Forbidden
    ConflictError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            status:
              example: 409
            title:
              example: Conflict
            type:
              example: https://httpstatuses.com/409
            instance:
              example: kong:trace:1234567890
            detail:
              example: Conflict
    NotFoundError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            status:
              example: 404
            title:
              example: Not Found
            type:
              example: https://httpstatuses.com/404
            instance:
              example: kong:trace:1234567890
            detail:
              example: Not found
    ControlPlaneId:
      type: string
      format: uuid
      example: 0949471e-b759-45ba-87ab-ee63fb781388
    ConfigurationId:
      type: string
      format: uuid
      example: edaf40f9-9fb0-4ffe-bb74-4e763a6bd471
      readOnly: true
    DataPlaneGroupId:
      type: string
      format: uuid
      description: >-
        ID of the data-plane group that represents a deployment target for a set
        of data-planes.
      example: cbb8872a-1f83-4806-bf69-fdf0b4783c7e
      readOnly: true
    CustomDomainId:
      type: string
      format: uuid
      example: 39ed3790-085d-4605-9627-f96d86aaf425
      readOnly: true
    NetworkId:
      type: string
      format: uuid
      example: 36ae63d3-efd1-4bec-b246-62aa5d3f5695
    TransitGatewayId:
      type: string
      format: uuid
      example: 0850820b-d153-4a2a-b9be-7d2204779139
      readOnly: true
    ProviderAccountId:
      type: string
      format: uuid
      example: 929b2449-c69f-44c4-b6ad-9ecec6f811ae
    ControlPlaneGeo:
      title: Control-Plane Geo
      description: >-
        Set of control-plane geos supported for deploying cloud-gateways
        configurations.
      type: string
      enum:
        - us
        - eu
        - au
    GatewayVersion:
      title: Gateway Version
      description: Supported gateway version.
      type: string
      pattern: ^(\d)+(\.(\d)+)?$
      example: '3.2'
    InstanceTypeName:
      type: string
      enum:
        - small
        - medium
        - large
      description: Instance type name to indicate capacity.
    ApiAccess:
      type: string
      enum:
        - private
        - public
        - private+public
      description: Type of API access data-plane groups will support for a configuration.
      default: private+public
    ProviderRegionId:
      title: Provider Region ID
      description: Region ID for cloud provider region.
      type: string
      example: us-east-2
    ProviderName:
      title: Provider Name
      description: Name of cloud provider.
      type: string
      enum:
        - aws
      example: aws
    ConfigurationDataPlaneGroupAutoscale:
      oneOf:
        - $ref: '#/components/schemas/ConfigurationDataPlaneGroupAutoscaleStatic'
        - $ref: '#/components/schemas/ConfigurationDataPlaneGroupAutoscaleAutopilot'
    ConfigurationDataPlaneGroupAutoscaleStatic:
      title: Configuration Autoscale Static
      description: Object that describes the static autoscaling strategy.
      type: object
      properties:
        kind:
          type: string
          enum:
            - static
        instance_type:
          $ref: '#/components/schemas/InstanceTypeName'
        requested_instances:
          type: integer
          example: 3
          description: Number of data-planes the deployment target will contain.
      required:
        - kind
        - instance_type
        - requested_instances
      additionalProperties: false
    ConfigurationDataPlaneGroupAutoscaleAutopilot:
      title: Configuration Autoscale Autopilot
      description: Object that describes the autopilot autoscaling strategy.
      type: object
      properties:
        kind:
          type: string
          enum:
            - autopilot
        base_rps:
          type: integer
          example: 1
          description: >-
            Base number of requests per second that the deployment target should
            support.
        max_rps:
          type: integer
          example: 1000
          description: >-
            Max number of requests per second that the deployment target should
            support. If not set, this defaults to 10x base_rps.
      required:
        - kind
        - base_rps
      additionalProperties: false
    ConfigurationDataPlaneGroupConfig:
      title: Configuration Data-Plane Group Config Item
      description: >-
        Object that describes where a data-plane group will be deployed to,
        along with how many instances.
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/ProviderName'
        region:
          $ref: '#/components/schemas/ProviderRegionId'
        cloud_gateway_network_id:
          $ref: '#/components/schemas/NetworkId'
        autoscale:
          $ref: '#/components/schemas/ConfigurationDataPlaneGroupAutoscale'
      required:
        - autoscale
        - provider
        - region
        - cloud_gateway_network_id
      additionalProperties: false
    ConfigurationDataPlaneGroupConfigs:
      title: Configuration Data-Plane Group Configs
      description: >-
        Object that describes where data-planes will be deployed to, along with
        how many instances.
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationDataPlaneGroupConfig'
    ConfigurationDataPlaneGroup:
      title: Cloud Gateway Configuration Data-Plane Group
      description: >-
        Object that describes the set of data-plane groups currently pointed to
        this configuration.
      type: object
      properties:
        id:
          $ref: '#/components/schemas/DataPlaneGroupId'
        provider:
          $ref: '#/components/schemas/ProviderName'
        region:
          $ref: '#/components/schemas/ProviderRegionId'
        autoscale:
          $ref: '#/components/schemas/ConfigurationDataPlaneGroupAutoscale'
        cloud_gateway_network_id:
          $ref: '#/components/schemas/NetworkId'
        state:
          type: string
          enum:
            - created
            - initializing
            - ready
            - terminating
            - terminated
          description: State of the data-plane group.
        private_ip_addresses:
          type: array
          items:
            type: string
          description: >
            List of private IP addresses of the internal load balancer that
            proxies traffic to this data-plane group.
          example:
            - 192.168.248.132
            - 192.168.66.81
            - 192.168.137.135
        egress_ip_addresses:
          type: array
          items:
            type: string
          description: >
            List of egress IP addresses for the network that this data-plane
            group runs on.
          example:
            - 71.78.149.75
            - 91.149.112.244
            - 51.235.15.121
        created_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: >-
            An RFC-3339 timestamp representation of data-plane group creation
            date.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: >-
            An RFC-3339 timestamp representation of data-plane group update
            date.
          readOnly: true
      required:
        - id
        - provider
        - region
        - autoscale
        - cloud_gateway_network_id
        - state
        - created_at
        - updated_at
    ConfigurationManifest:
      x-speakeasy-entity: CloudGatewayConfiguration
      title: Configuration
      description: >-
        Object containing information about a control-plane's cloud-gateways
        configuration.
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ConfigurationId'
        version:
          $ref: '#/components/schemas/GatewayVersion'
        api_access:
          $ref: '#/components/schemas/ApiAccess'
        dataplane_group_config:
          $ref: '#/components/schemas/ConfigurationDataPlaneGroupConfigs'
        dataplane_groups:
          type: array
          description: >
            List of data-plane groups that describe where data-planes will be
            deployed to, along with how many

            instances.
          items:
            $ref: '#/components/schemas/ConfigurationDataPlaneGroup'
        entity_version:
          type: number
          example: 1
          description: >
            Positive, monotonically increasing version integer, to serialize
            configuration changes.
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An RFC-3339 timestamp representation of configuration creation date.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An RFC-3339 timestamp representation of configuration update date.
          readOnly: true
        control_plane_id:
          $ref: '#/components/schemas/ControlPlaneId'
        control_plane_geo:
          $ref: '#/components/schemas/ControlPlaneGeo'
      required:
        - id
        - control_plane_id
        - control_plane_geo
        - version
        - dataplane_group_config
        - dataplane_groups
        - entity_version
        - created_at
        - updated_at
    CreateConfigurationDataPlaneGroup:
      title: CreateConfigurationDataPlaneGroup
      description: >-
        Object that describes where to deploy a data-plane group, along with how
        many instances.
      type: object
      additionalProperties: false
      properties:
        provider:
          $ref: '#/components/schemas/ProviderName'
        region:
          $ref: '#/components/schemas/ProviderRegionId'
        cloud_gateway_network_id:
          $ref: '#/components/schemas/NetworkId'
        autoscale:
          $ref: '#/components/schemas/ConfigurationDataPlaneGroupAutoscale'
      required:
        - autoscale
        - provider
        - region
        - cloud_gateway_network_id
    ProviderAccount:
      title: Cloud Gateway Provider Account
      description: >-
        Object containing mapping for organization and cloud provider to account
        ID.
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ProviderAccountId'
        provider:
          $ref: '#/components/schemas/ProviderName'
        provider_account_id:
          type: string
          description: ID of the cloud provider account.
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: >-
            An RFC-3339 timestamp representation of provider account creation
            date.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: >-
            An RFC-3339 timestamp representation of provider account update
            date.
          readOnly: true
      required:
        - id
        - provider
        - provider_account_id
        - created_at
        - updated_at
    NetworkState:
      title: Network State
      description: State of the network.
      enum:
        - created
        - initializing
        - offline
        - ready
        - terminating
        - terminated
      readOnly: true
    NetworkFirewallConfig:
      title: Network Firewall Config
      description: Firewall configuration for a network.
      type: object
      additionalProperties: false
      properties:
        allowed_cidr_blocks:
          title: Allowed CIDR Blocks
          description: List of allowed CIDR blocks to access a network.
          type: array
          items:
            type: string
          example:
            - 10.0.0.0/8
        denied_cidr_blocks:
          title: Denied CIDR Blocks
          description: List of denied CIDR blocks to access a network.
          type: array
          items:
            type: string
          example:
            - 10.100.0.0/16
    NetworkProviderMetadata:
      title: Network Provider Metadata
      description: >-
        Metadata describing attributes returned by cloud-provider for the
        network.
      type: object
      additionalProperties: false
      properties:
        vpc_id:
          title: VPC ID
          type: string
        subnet_ids:
          title: Subnet IDs
          type: array
          items:
            type: string
      readOnly: true
    NetworkName:
      title: Network Name
      type: string
      description: Human-readable name of the network.
      example: us-east-2 network
    NetworkCIDRBlock:
      title: Network CIDR Block
      description: CIDR block configuration for the network.
      type: string
      example: 10.0.0.0/8
    NetworkDDOSProtection:
      title: Network DDOS Protection
      type: boolean
      description: Whether DDOS protection is enabled for the network.
      example: false
    NetworkAvailabilityZones:
      type: array
      items:
        type: string
      description: List of availability zones that the network is attached to.
      example:
        - use2-az1
        - use2-az2
        - use2-az3
    Network:
      x-speakeasy-entity: CloudGatewayNetwork
      title: Network
      description: >-
        Object containing information about a network to be used in
        configurations.
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NetworkId'
        name:
          $ref: '#/components/schemas/NetworkName'
        default:
          type: boolean
          description: >
            Whether the network is a default network or not. Default networks
            are Networks that are created

            automatically by Konnect when an organization is linked to a
            provider account.
          example: false
        cloud_gateway_provider_account_id:
          $ref: '#/components/schemas/ProviderAccountId'
        region:
          $ref: '#/components/schemas/ProviderRegionId'
        availability_zones:
          $ref: '#/components/schemas/NetworkAvailabilityZones'
        cidr_block:
          $ref: '#/components/schemas/NetworkCIDRBlock'
        firewall:
          $ref: '#/components/schemas/NetworkFirewallConfig'
        ddos_protection:
          $ref: '#/components/schemas/NetworkDDOSProtection'
        state:
          $ref: '#/components/schemas/NetworkState'
        provider_metadata:
          $ref: '#/components/schemas/NetworkProviderMetadata'
        transit_gateway_count:
          type: integer
          description: The number of transit gateways attached to this network.
          readOnly: true
          example: 0
        configuration_reference_count:
          type: integer
          description: The number of configurations that reference this network.
          readOnly: true
          example: 0
        entity_version:
          type: integer
          description: >
            Monotonically-increasing version count of the network, to indicate
            the order of updates to the network.
          readOnly: true
          example: 1
        created_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An RFC-3339 timestamp representation of network creation date.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An RFC-3339 timestamp representation of network update date.
          readOnly: true
      required:
        - id
        - name
        - default
        - cloud_gateway_provider_account_id
        - region
        - availability_zones
        - cidr_block
        - provider_metadata
        - state
        - transit_gateway_count
        - configuration_reference_count
        - entity_version
        - created_at
        - updated_at
    CreateNetworkRequest:
      x-speakeasy-entity: CloudGatewayNetwork
      title: CreateNetworkRequest
      description: Request schema for creating a network.
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/NetworkName'
        cloud_gateway_provider_account_id:
          $ref: '#/components/schemas/ProviderAccountId'
        region:
          $ref: '#/components/schemas/ProviderRegionId'
        availability_zones:
          $ref: '#/components/schemas/NetworkAvailabilityZones'
        cidr_block:
          $ref: '#/components/schemas/NetworkCIDRBlock'
        firewall:
          $ref: '#/components/schemas/NetworkFirewallConfig'
        ddos_protection:
          $ref: '#/components/schemas/NetworkDDOSProtection'
      required:
        - name
        - cloud_gateway_provider_account_id
        - region
        - availability_zones
        - cidr_block
    PatchNetworkRequest:
      x-speakeasy-entity: CloudGatewayNetwork
      title: PatchNetworkRequest
      description: Request schema for updating a network.
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/NetworkName'
        firewall:
          $ref: '#/components/schemas/NetworkFirewallConfig'
    TransitGatewayState:
      title: Transit Gateway State
      type: string
      description: State of the transit gateway.
      enum:
        - created
        - initializing
        - ready
        - terminating
        - terminated
      readOnly: true
    BaseTransitGatewayAttachmentConfig:
      title: Base Transit Gateway Attachment Config
      type: object
      discriminator:
        propertyName: kind
        mapping:
          aws-transit-gateway-attachment: '#/components/schemas/AwsTransitGatewayAttachmentConfig'
      properties:
        kind:
          description: >
            Kind of transit gateway attachment to create, dictating which cloud
            provider to peer with and required

            parameters to create a transit gateway attachment in that cloud
            provider.
          enum:
            - aws-transit-gateway-attachment
      required:
        - kind
    AwsTransitGatewayAttachmentConfig:
      title: AWS Transit Gateway Attachment Config
      allOf:
        - $ref: '#/components/schemas/BaseTransitGatewayAttachmentConfig'
        - type: object
          additionalProperties: false
          properties:
            kind:
              title: AWS Transit Gateway Attachment Type
              enum:
                - aws-transit-gateway-attachment
            transit_gateway_id:
              title: Transit Gateway ID
              description: AWS Transit Gateway ID to create attachment to.
              type: string
            ram_share_arn:
              title: RAM Share ARN
              description: >-
                Resource Share ARN to verify request to create transit gateway
                attachment.
              type: string
          required:
            - kind
            - transit_gateway_id
            - ram_share_arn
    TransitGatewayAttachmentConfig:
      title: Transit Gateway Attachment Config
      oneOf:
        - $ref: '#/components/schemas/AwsTransitGatewayAttachmentConfig'
    TransitGatewayDnsConfig:
      title: Transit Gateway DNS Config
      description: >
        List of mappings from remote DNS server IP address sets to proxied
        internal domains, for a transit gateway

        attachment.
      type: array
      items:
        type: object
        additionalProperties: false
        properties:
          remote_dns_server_ip_addresses:
            title: Remote DNS Server IP Addresses
            description: >-
              Remote DNS Server IP Addresses to connect to for resolving
              internal DNS via a transit gateway.
            type: array
            items:
              type: string
            example:
              - 10.0.0.2
          domain_proxy_list:
            title: Domain Proxy List
            type: array
            description: >
              Internal domain names to proxy for DNS resolution from the listed
              remote DNS server IP addresses,

              for a transit gateway.
            items:
              type: string
            example:
              - foobar.com
        required:
          - remote_dns_server_ip_addresses
          - domain_proxy_list
    TransitGatewayName:
      title: Transit Gateway Name
      type: string
      description: Human-readable name of the transit gateway.
      example: us-east-2 transit gateway
    TransitGatewayCIDRBlocks:
      title: Transit Gateway CIDR Blocks
      type: array
      items:
        type: string
      description: >
        CIDR blocks for constructing a route table for the transit gateway, when
        attaching to the owning

        network.
      example:
        - 10.0.0.0/8
        - 100.64.0.0/10
        - 172.16.0.0/12
    TransitGateway:
      x-speakeasy-entity: CloudGatewayTransitGateway
      title: Transit Gateway
      description: Object containing information about a transit gateway.
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TransitGatewayId'
        name:
          $ref: '#/components/schemas/TransitGatewayName'
        cidr_blocks:
          $ref: '#/components/schemas/TransitGatewayCIDRBlocks'
        transit_gateway_attachment_config:
          $ref: '#/components/schemas/TransitGatewayAttachmentConfig'
        dns_config:
          $ref: '#/components/schemas/TransitGatewayDnsConfig'
        state:
          $ref: '#/components/schemas/TransitGatewayState'
        entity_version:
          type: integer
          description: >
            Monotonically-increasing version count of the transit gateway, to
            indicate the order of updates to the

            transit gateway.
          readOnly: true
          example: 1
        created_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: >-
            An RFC-3339 timestamp representation of transit gateway creation
            date.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An RFC-3339 timestamp representation of transit gateway update date.
          readOnly: true
      required:
        - id
        - name
        - cidr_blocks
        - transit_gateway_attachment_config
        - dns_config
        - state
        - entity_version
        - created_at
        - updated_at
    CreateTransitGatewayRequest:
      title: CreateTransitGatewayRequest
      description: Request schema for creating a transit gateway.
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/TransitGatewayName'
        cidr_blocks:
          $ref: '#/components/schemas/TransitGatewayCIDRBlocks'
        transit_gateway_attachment_config:
          $ref: '#/components/schemas/TransitGatewayAttachmentConfig'
        dns_config:
          $ref: '#/components/schemas/TransitGatewayDnsConfig'
      required:
        - name
        - cidr_blocks
        - transit_gateway_attachment_config
    CustomDomainState:
      title: Custom Domain State
      type: string
      description: State of the custom domain.
      enum:
        - created
        - initializing
        - ready
        - terminating
        - terminated
        - error
      readOnly: true
    CustomDomainName:
      title: Custom Domain Name
      type: string
      description: Domain name of the custom domain.
      example: example.com
    CustomDomain:
      x-speakeasy-entity: CloudGatewayCustomDomain
      title: Custom Domain
      description: Object containing information about a custom domain for a control-plane.
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CustomDomainId'
        control_plane_id:
          $ref: '#/components/schemas/ControlPlaneId'
        control_plane_geo:
          $ref: '#/components/schemas/ControlPlaneGeo'
        domain:
          $ref: '#/components/schemas/CustomDomainName'
        certificate_id:
          type: string
          format: uuid
          nullable: true
          description: >
            Certificate ID for the certificate representing this domain and
            stored on data-planes for this

            control-plane. Can be retrieved via the control-planes API for this
            custom domain's control-plane.
          readOnly: true
          example: 3b7cbeee-fbec-440e-a5ef-89e7dec3b9d0
        sni_id:
          type: string
          format: uuid
          nullable: true
          description: >
            Server Name Indication ID for this domain and stored on data-planes
            for this control-plane. Can be retrieved

            via the control-planes API for this custom domain's control-plane.
          readOnly: true
          example: a8f11ea8-af09-4422-9735-5d4f8910aba1
        state:
          $ref: '#/components/schemas/CustomDomainState'
        state_metadata:
          title: CustomDomainStateMetadata
          type: object
          description: >
            Metadata describing the backing state of the custom domain and why
            it may be in an erroneous state.
          additionalProperties: false
          properties:
            reported_status:
              type: string
              description: >-
                Reported status of the custom domain from backing
                infrastructure.
              example: INVALID
            reason:
              type: string
              description: >
                Reason why the custom domain may be in an erroneous state,
                reported from backing infrastructure.
              example: >
                CNAME points to '_acme-challenge.<prefix>.gateways.konghq.tech.'
                instead of '_acme-challenge.<prefix>.acme.gateways.konghq.tech.'
          readOnly: true
        entity_version:
          type: integer
          description: >
            Monotonically-increasing version count of the custom domain, to
            indicate the order of updates to the custom

            domain.
          readOnly: true
          example: 1
        created_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An RFC-3339 timestamp representation of custom domain creation date.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An RFC-3339 timestamp representation of custom domain update date.
          readOnly: true
      required:
        - id
        - control_plane_id
        - control_plane_geo
        - domain
        - state
        - state_metadata
        - entity_version
        - created_at
        - updated_at
    CreateConfigurationRequest:
      title: CreateConfigurationRequest
      description: |
        Request schema for creating a configuration.
      type: object
      additionalProperties: false
      properties:
        control_plane_id:
          $ref: '#/components/schemas/ControlPlaneId'
        control_plane_geo:
          $ref: '#/components/schemas/ControlPlaneGeo'
        version:
          $ref: '#/components/schemas/GatewayVersion'
        dataplane_groups:
          type: array
          description: >-
            List of data-plane groups that describe where to deploy instances,
            along with how many instances.
          items:
            $ref: '#/components/schemas/CreateConfigurationDataPlaneGroup'
        api_access:
          $ref: '#/components/schemas/ApiAccess'
      required:
        - control_plane_id
        - control_plane_geo
        - version
        - dataplane_groups
    CreateCustomDomainRequest:
      title: CreateCustomDomainRequest
      description: Request schema for creating a custom domain in the global API.
      type: object
      additionalProperties: false
      properties:
        control_plane_id:
          $ref: '#/components/schemas/ControlPlaneId'
        control_plane_geo:
          $ref: '#/components/schemas/ControlPlaneGeo'
        domain:
          $ref: '#/components/schemas/CustomDomainName'
      required:
        - control_plane_id
        - control_plane_geo
        - domain
    DataPlaneClientCertificate:
      type: object
      properties:
        item:
          x-speakeasy-entity: GatewayDataPlaneClientCertificate
          type: object
          properties:
            id:
              type: string
              description: Unique ID of the certificate entity.
            created_at:
              type: integer
              description: Date certificate was created.
            updated_at:
              type: integer
              description: Date certificate was last updated.
            cert:
              type: string
              description: JSON escaped string of the certificate.
    ACL:
      allOf:
        - $ref: '#/components/schemas/ACLWithoutParents'
        - properties:
            consumer:
              additionalProperties: false
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          type: object
          x-speakeasy-entity: GatewayACL
    ACLPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/ACLPluginConfig'
      x-speakeasy-entity: GatewayPluginACL
    ACLPluginConfig:
      properties:
        config:
          properties:
            allow:
              description: >-
                Arbitrary group names that are allowed to consume the service or
                route. One of `config.allow` or `config.deny` must be specified.
              items:
                type: string
              type: array
            deny:
              description: >-
                Arbitrary group names that are not allowed to consume the
                service or route. One of `config.allow` or `config.deny` must be
                specified.
              items:
                type: string
              type: array
            hide_groups_header:
              default: false
              description: >-
                If enabled (`true`), prevents the `X-Consumer-Groups` header
                from being sent in the request to the upstream service.
              type: boolean
            include_consumer_groups:
              default: false
              type: boolean
          type: object
        name:
          const: acl
          type: string
    ACLWithoutParents:
      properties:
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        group:
          type: string
        id:
          readOnly: true
          type: string
        tags:
          items:
            type: string
          type: array
      type: object
      x-speakeasy-entity: GatewayACL
    AIPromptDecoratorPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/AIPromptDecoratorPluginConfig'
      x-speakeasy-entity: GatewayPluginAIPromptDecorator
    AIPromptDecoratorPluginConfig:
      properties:
        config:
          properties:
            prompts:
              properties:
                append:
                  description: >-
                    Insert chat messages at the end of the chat message array.
                    This array preserves exact order when adding messages.
                  items:
                    properties:
                      content:
                        maxLength: 500
                        minLength: 1
                        type: string
                      role:
                        default: system
                        enum:
                          - system
                          - assistant
                          - user
                        type: string
                    required:
                      - content
                    type: object
                  maxLength: 15
                  type: array
                prepend:
                  description: >-
                    Insert chat messages at the beginning of the chat message
                    array. This array preserves exact order when adding
                    messages.
                  items:
                    properties:
                      content:
                        maxLength: 500
                        minLength: 1
                        type: string
                      role:
                        default: system
                        enum:
                          - system
                          - assistant
                          - user
                        type: string
                    required:
                      - content
                    type: object
                  maxLength: 15
                  type: array
              type: object
          type: object
        name:
          const: ai-prompt-decorator
          type: string
    AIPromptGuardPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/AIPromptGuardPluginConfig'
      x-speakeasy-entity: GatewayPluginAIPromptGuard
    AIPromptGuardPluginConfig:
      properties:
        config:
          properties:
            allow_all_conversation_history:
              default: false
              description: >-
                If true, will ignore all previous chat prompts from the
                conversation history.
              type: boolean
            allow_patterns:
              description: >-
                Array of valid regex patterns, or valid questions from the
                'user' role in chat.
              items:
                maxLength: 500
                minLength: 1
                type: string
              maxLength: 10
              type: array
            deny_patterns:
              description: >-
                Array of invalid regex patterns, or invalid questions from the
                'user' role in chat.
              items:
                maxLength: 500
                minLength: 1
                type: string
              maxLength: 10
              type: array
          type: object
        name:
          const: ai-prompt-guard
          type: string
    AIPromptTemplatePlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/AIPromptTemplatePluginConfig'
      x-speakeasy-entity: GatewayPluginAIPromptTemplate
    AIPromptTemplatePluginConfig:
      properties:
        config:
          properties:
            allow_untemplated_requests:
              default: true
              description: >-
                Set true to allow requests that don't call or match any
                template.
              type: boolean
            log_original_request:
              default: false
              description: >-
                Set true to add the original request to the Kong log plugin(s)
                output.
              type: boolean
            templates:
              description: Array of templates available to the request context.
              items:
                properties:
                  name:
                    description: >-
                      Unique name for the template, can be called with
                      `{template://NAME}`
                    type: string
                  template:
                    description: >-
                      Template string for this request, supports mustache-style
                      `{{placeholders}}`
                    type: string
                required:
                  - name
                  - template
                type: object
              type: array
          type: object
        name:
          const: ai-prompt-template
          type: string
    AIProxyPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/AIProxyPluginConfig'
      x-speakeasy-entity: GatewayPluginAIProxy
    AIProxyPluginConfig:
      properties:
        config:
          properties:
            auth:
              properties:
                azure_client_id:
                  description: >-
                    If azure_use_managed_identity is set to true, and you need
                    to use a different user-assigned identity for this LLM
                    instance, set the client ID.
                  type: string
                azure_client_secret:
                  description: >-
                    If azure_use_managed_identity is set to true, and you need
                    to use a different user-assigned identity for this LLM
                    instance, set the client secret.
                  type: string
                azure_tenant_id:
                  description: >-
                    If azure_use_managed_identity is set to true, and you need
                    to use a different user-assigned identity for this LLM
                    instance, set the tenant ID.
                  type: string
                azure_use_managed_identity:
                  default: false
                  description: >-
                    Set true to use the Azure Cloud Managed Identity (or
                    user-assigned identity) to authenticate with Azure-provider
                    models.
                  type: boolean
                header_name:
                  description: >-
                    If AI model requires authentication via Authorization or API
                    key header, specify its name here.
                  type: string
                header_value:
                  description: >-
                    Specify the full auth header value for 'header_name', for
                    example 'Bearer key' or just 'key'.
                  type: string
                param_location:
                  description: >-
                    Specify whether the 'param_name' and 'param_value' options
                    go in a query string, or the POST form/JSON body.
                  enum:
                    - query
                    - body
                  type: string
                param_name:
                  description: >-
                    If AI model requires authentication via query parameter,
                    specify its name here.
                  type: string
                param_value:
                  description: Specify the full parameter value for 'param_name'.
                  type: string
              type: object
            logging:
              properties:
                log_payloads:
                  default: false
                  description: >-
                    If enabled, will log the request and response body into the
                    Kong log plugin(s) output.
                  type: boolean
                log_statistics:
                  default: false
                  description: >-
                    If enabled and supported by the driver, will add model usage
                    and token metrics into the Kong log plugin(s) output.
                  type: boolean
              type: object
            model:
              properties:
                name:
                  description: Model name to execute.
                  type: string
                options:
                  description: Key/value settings for the model
                  properties:
                    anthropic_version:
                      description: >-
                        Defines the schema/API version, if using Anthropic
                        provider.
                      type: string
                    azure_api_version:
                      default: '2023-05-15'
                      description: '''api-version'' for Azure OpenAI instances.'
                      type: string
                    azure_deployment_id:
                      description: Deployment ID for Azure OpenAI instances.
                      type: string
                    azure_instance:
                      description: Instance name for Azure OpenAI hosted models.
                      type: string
                    llama2_format:
                      description: >-
                        If using llama2 provider, select the upstream message
                        format.
                      enum:
                        - raw
                        - openai
                        - ollama
                      type: string
                    max_tokens:
                      default: 256
                      description: >-
                        Defines the max_tokens, if using chat or completion
                        models.
                      type: integer
                    mistral_format:
                      description: >-
                        If using mistral provider, select the upstream message
                        format.
                      enum:
                        - openai
                        - ollama
                      type: string
                    temperature:
                      description: >-
                        Defines the matching temperature, if using chat or
                        completion models.
                      maximum: 5
                      minimum: 0
                      type: number
                    top_k:
                      description: Defines the top-k most likely tokens, if supported.
                      maximum: 500
                      minimum: 0
                      type: integer
                    top_p:
                      description: Defines the top-p probability mass, if supported.
                      maximum: 1
                      minimum: 0
                      type: number
                    upstream_path:
                      description: >-
                        Manually specify or override the AI operation path, used
                        when e.g. using the 'preserve' route_type.
                      type: string
                    upstream_url:
                      description: >-
                        Manually specify or override the full URL to the AI
                        operation endpoints, when calling (self-)hosted models,
                        or for running via a private endpoint.
                      type: string
                  type: object
                provider:
                  description: >-
                    AI provider request format - Kong translates requests to and
                    from the specified backend compatible formats.
                  enum:
                    - openai
                    - azure
                    - anthropic
                    - cohere
                    - mistral
                    - llama2
                  type: string
              type: object
            response_streaming:
              default: allow
              description: >-
                Whether to 'optionally allow', 'deny', or 'always' (force) the
                streaming of answers via server sent events.
              enum:
                - allow
                - deny
                - always
              type: string
            route_type:
              description: >-
                The model's operation implementation, for this provider. Set to
                `preserve` to pass through without transformation.
              enum:
                - llm/v1/chat
                - llm/v1/completions
                - preserve
              type: string
          type: object
        name:
          const: ai-proxy
          type: string
    AWSLambdaPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/AWSLambdaPluginConfig'
      x-speakeasy-entity: GatewayPluginAWSLambda
    AWSLambdaPluginConfig:
      properties:
        config:
          properties:
            aws_assume_role_arn:
              description: The target AWS IAM role ARN used to invoke the Lambda function.
              type: string
            aws_imds_protocol_version:
              default: v1
              description: >-
                Identifier to select the IMDS protocol version to use: `v1` or
                `v2`.
              enum:
                - v1
                - v2
              type: string
            aws_key:
              description: The AWS key credential to be used when invoking the function.
              type: string
            aws_region:
              description: A string representing a host name, such as example.com.
              type: string
            aws_role_session_name:
              default: kong
              description: The identifier of the assumed role session.
              type: string
            aws_secret:
              description: >-
                The AWS secret credential to be used when invoking the
                function. 
              type: string
            awsgateway_compatible:
              default: false
              description: >-
                An optional value that defines whether the plugin should wrap
                requests into the Amazon API gateway.
              type: boolean
            base64_encode_body:
              default: true
              description: An optional value that Base64-encodes the request body.
              type: boolean
            disable_https:
              default: false
              type: boolean
            forward_request_body:
              default: false
              description: >-
                An optional value that defines whether the request body is sent
                in the request_body field of the JSON-encoded request. If the
                body arguments can be parsed, they are sent in the separate
                request_body_args field of the request. 
              type: boolean
            forward_request_headers:
              default: false
              description: >-
                An optional value that defines whether the original HTTP request
                headers are sent as a map in the request_headers field of the
                JSON-encoded request.
              type: boolean
            forward_request_method:
              default: false
              description: >-
                An optional value that defines whether the original HTTP request
                method verb is sent in the request_method field of the
                JSON-encoded request.
              type: boolean
            forward_request_uri:
              default: false
              description: >-
                An optional value that defines whether the original HTTP request
                URI is sent in the request_uri field of the JSON-encoded
                request.
              type: boolean
            function_name:
              description: >-
                The AWS Lambda function to invoke. Both function name and
                function ARN (including partial) are supported.
              type: string
            host:
              description: A string representing a host name, such as example.com.
              type: string
            invocation_type:
              default: RequestResponse
              description: >-
                The InvocationType to use when invoking the function. Available
                types are RequestResponse, Event, DryRun.
              enum:
                - RequestResponse
                - Event
                - DryRun
              type: string
            is_proxy_integration:
              default: false
              description: >-
                An optional value that defines whether the response format to
                receive from the Lambda to this format.
              type: boolean
            keepalive:
              default: 60000
              description: >-
                An optional value in milliseconds that defines how long an idle
                connection lives before being closed.
              type: number
            log_type:
              default: Tail
              description: >-
                The LogType to use when invoking the function. By default, None
                and Tail are supported.
              enum:
                - Tail
                - None
              type: string
            port:
              default: 443
              description: >-
                An integer representing a port number between 0 and 65535,
                inclusive.
              maximum: 65535
              minimum: 0
              type: integer
            proxy_url:
              description: >-
                A string representing a URL, such as
                https://example.com/path/to/resource?q=search.
              type: string
            qualifier:
              description: The qualifier to use when invoking the function.
              type: string
            skip_large_bodies:
              default: true
              description: >-
                An optional value that defines whether Kong should send large
                bodies that are buffered to disk
              type: boolean
            timeout:
              default: 60000
              description: An optional timeout in milliseconds when invoking the function.
              type: number
            unhandled_status:
              description: >-
                The response status code to use (instead of the default 200,
                202, or 204) in the case of an Unhandled Function Error.
              maximum: 999
              minimum: 100
              type: integer
          type: object
        name:
          const: aws-lambda
          type: string
    BasicAuth:
      allOf:
        - $ref: '#/components/schemas/BasicAuthWithoutParents'
        - properties:
            consumer:
              additionalProperties: false
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          type: object
          x-speakeasy-entity: GatewayBasicAuth
    BasicAuthPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/BasicAuthPluginConfig'
      x-speakeasy-entity: GatewayPluginBasicAuth
    BasicAuthPluginConfig:
      properties:
        config:
          properties:
            anonymous:
              description: >-
                An optional string (Consumer UUID or username) value to use as
                an “anonymous” consumer if authentication fails. If empty
                (default null), the request will fail with an authentication
                failure `4xx`. Please note that this value must refer to the
                Consumer `id` or `username` attribute, and **not** its
                `custom_id`.
              type: string
            hide_credentials:
              default: false
              description: >-
                An optional boolean value telling the plugin to show or hide the
                credential from the upstream service. If `true`, the plugin will
                strip the credential from the request (i.e. the `Authorization`
                header) before proxying it.
              type: boolean
            realm:
              default: service
              description: >-
                When authentication fails the plugin sends `WWW-Authenticate`
                header with `realm` attribute value.
              type: string
          type: object
        name:
          const: basic-auth
          type: string
    BasicAuthWithoutParents:
      properties:
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        id:
          readOnly: true
          type: string
        password:
          type: string
          writeOnly: true
          x-speakeasy-param-sensitive: true
        tags:
          items:
            type: string
          type: array
        username:
          type: string
      type: object
      x-speakeasy-entity: GatewayBasicAuth
    CACertificate:
      properties:
        cert:
          description: PEM-encoded public certificate of the CA.
          type: string
        cert_digest:
          description: >-
            SHA256 hex digest of the public certificate. This field is read-only
            and it cannot be set by the caller, the value is automatically
            computed.
          type: string
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        id:
          readOnly: true
          type: string
        tags:
          description: >-
            An optional set of strings associated with the Certificate for
            grouping and filtering.
          items:
            type: string
          type: array
        updated_at:
          description: Unix epoch when the resource was last updated.
          readOnly: true
          type: integer
      type: object
      x-speakeasy-entity: GatewayCACertificate
    CORSPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/CORSPluginConfig'
      x-speakeasy-entity: GatewayPluginCORS
    CORSPluginConfig:
      properties:
        config:
          properties:
            credentials:
              default: false
              description: >-
                Flag to determine whether the `Access-Control-Allow-Credentials`
                header should be sent with `true` as the value.
              type: boolean
            exposed_headers:
              description: >-
                Value for the `Access-Control-Expose-Headers` header. If not
                specified, no custom headers are exposed.
              items:
                type: string
              type: array
            headers:
              description: Value for the `Access-Control-Allow-Headers` header.
              items:
                type: string
              type: array
            max_age:
              description: >-
                Indicates how long the results of the preflight request can be
                cached, in `seconds`.
              type: number
            methods:
              default:
                - GET
                - HEAD
                - PUT
                - PATCH
                - POST
                - DELETE
                - OPTIONS
                - TRACE
                - CONNECT
              description: >-
                'Value for the `Access-Control-Allow-Methods` header. Available
                options include `GET`, `HEAD`, `PUT`, `PATCH`, `POST`, `DELETE`,
                `OPTIONS`, `TRACE`, `CONNECT`. By default, all options are
                allowed.'
              items:
                enum:
                  - GET
                  - HEAD
                  - PUT
                  - PATCH
                  - POST
                  - DELETE
                  - OPTIONS
                  - TRACE
                  - CONNECT
                type: string
              type: array
            origins:
              description: >-
                List of allowed domains for the `Access-Control-Allow-Origin`
                header. If you want to allow all origins, add `*` as a single
                value to this configuration field. The accepted values can
                either be flat strings or PCRE regexes.
              items:
                type: string
              type: array
            preflight_continue:
              default: false
              description: >-
                A boolean value that instructs the plugin to proxy the `OPTIONS`
                preflight request to the Upstream service.
              type: boolean
            private_network:
              default: false
              description: >-
                Flag to determine whether the
                `Access-Control-Allow-Private-Network` header should be sent
                with `true` as the value.
              type: boolean
          type: object
        name:
          const: cors
          type: string
    Certificate:
      properties:
        cert:
          description: >-
            PEM-encoded public certificate chain of the SSL key pair. This field
            is _referenceable_, which means it can be securely stored as a
            [secret](/gateway/latest/plan-and-deploy/security/secrets-management/getting-started)
            in a vault. References must follow a [specific
            format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).
          type: string
        cert_alt:
          description: >-
            PEM-encoded public certificate chain of the alternate SSL key pair.
            This should only be set if you have both RSA and ECDSA types of
            certificate available and would like Kong to prefer serving using
            ECDSA certs when client advertises support for it. This field is
            _referenceable_, which means it can be securely stored as a
            [secret](/gateway/latest/plan-and-deploy/security/secrets-management/getting-started)
            in a vault. References must follow a [specific
            format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).
          type: string
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        id:
          readOnly: true
          type: string
        key:
          description: >-
            PEM-encoded private key of the SSL key pair. This field is
            _referenceable_, which means it can be securely stored as a
            [secret](/gateway/latest/plan-and-deploy/security/secrets-management/getting-started)
            in a vault. References must follow a [specific
            format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).
          type: string
        key_alt:
          description: >-
            PEM-encoded private key of the alternate SSL key pair. This should
            only be set if you have both RSA and ECDSA types of certificate
            available and would like Kong to prefer serving using ECDSA certs
            when client advertises support for it. This field is
            _referenceable_, which means it can be securely stored as a
            [secret](/gateway/latest/plan-and-deploy/security/secrets-management/getting-started)
            in a vault. References must follow a [specific
            format](/gateway/latest/plan-and-deploy/security/secrets-management/reference-format).
          type: string
        tags:
          description: >-
            An optional set of strings associated with the Certificate for
            grouping and filtering.
          items:
            type: string
          type: array
        updated_at:
          description: Unix epoch when the resource was last updated.
          readOnly: true
          type: integer
      type: object
      x-speakeasy-entity: GatewayCertificate
    Consumer:
      properties:
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        custom_id:
          description: >-
            Field for storing an existing unique ID for the Consumer - useful
            for mapping Kong with users in your existing database. You must send
            either this field or `username` with the request.
          type: string
        id:
          readOnly: true
          type: string
        tags:
          description: >-
            An optional set of strings associated with the Consumer for grouping
            and filtering.
          items:
            type: string
          type: array
        updated_at:
          description: Unix epoch when the resource was last updated.
          readOnly: true
          type: integer
        username:
          description: >-
            The unique username of the Consumer. You must send either this field
            or `custom_id` with the request.
          type: string
      type: object
      x-speakeasy-entity: GatewayConsumer
    ConsumerGroup:
      properties:
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        id:
          readOnly: true
          type: string
        name:
          type: string
        tags:
          items:
            type: string
          type: array
        updated_at:
          description: Unix epoch when the resource was last updated.
          readOnly: true
          type: integer
      type: object
      x-speakeasy-entity: GatewayConsumerGroup
    CorrelationIdPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/CorrelationIdPluginConfig'
      x-speakeasy-entity: GatewayPluginCorrelationId
    CorrelationIdPluginConfig:
      properties:
        config:
          properties:
            echo_downstream:
              default: false
              description: Whether to echo the header back to downstream (the client).
              type: boolean
            generator:
              default: uuid#counter
              description: >-
                The generator to use for the correlation ID. Accepted values are
                `uuid`, `uuid#counter`, and `tracker`. See
                [Generators](#generators).
              enum:
                - uuid
                - uuid#counter
                - tracker
              type: string
            header_name:
              default: Kong-Request-ID
              description: The HTTP header name to use for the correlation ID.
              type: string
          type: object
        name:
          const: correlation-id
          type: string
    CreateACLPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/ACLPluginConfig'
      x-speakeasy-entity: GatewayPluginACL
    CreateAIPromptDecoratorPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/AIPromptDecoratorPluginConfig'
      x-speakeasy-entity: GatewayPluginAIPromptDecorator
    CreateAIPromptGuardPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/AIPromptGuardPluginConfig'
      x-speakeasy-entity: GatewayPluginAIPromptGuard
    CreateAIPromptTemplatePlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/AIPromptTemplatePluginConfig'
      x-speakeasy-entity: GatewayPluginAIPromptTemplate
    CreateAIProxyPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/AIProxyPluginConfig'
      x-speakeasy-entity: GatewayPluginAIProxy
    CreateAWSLambdaPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/AWSLambdaPluginConfig'
      x-speakeasy-entity: GatewayPluginAWSLambda
    CreateBasicAuthPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/BasicAuthPluginConfig'
      x-speakeasy-entity: GatewayPluginBasicAuth
    CreateCORSPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/CORSPluginConfig'
      x-speakeasy-entity: GatewayPluginCORS
    CreateCorrelationIdPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/CorrelationIdPluginConfig'
      x-speakeasy-entity: GatewayPluginCorrelationId
    CreateFileLogPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/FileLogPluginConfig'
      x-speakeasy-entity: GatewayPluginFileLog
    CreateIpRestrictionPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/IpRestrictionPluginConfig'
      x-speakeasy-entity: GatewayPluginIpRestriction
    CreateJQPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/JQPluginConfig'
      x-speakeasy-entity: GatewayPluginJQ
    CreateJWTPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/JWTPluginConfig'
      x-speakeasy-entity: GatewayPluginJWT
    CreateJWTSignerPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/JWTSignerPluginConfig'
      x-speakeasy-entity: GatewayPluginJWTSigner
    CreateKeyAuthPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/KeyAuthPluginConfig'
      x-speakeasy-entity: GatewayPluginKeyAuth
    CreateOauth2Plugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/Oauth2PluginConfig'
      x-speakeasy-entity: GatewayPluginOauth2
    CreateOpenidConnectPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/OpenidConnectPluginConfig'
      x-speakeasy-entity: GatewayPluginOpenidConnect
    CreateOpentelemetryPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/OpentelemetryPluginConfig'
      x-speakeasy-entity: GatewayPluginOpentelemetry
    CreatePreFunctionPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/PreFunctionPluginConfig'
      x-speakeasy-entity: GatewayPluginPreFunction
    CreatePrometheusPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/PrometheusPluginConfig'
      x-speakeasy-entity: GatewayPluginPrometheus
    CreateProxyCachePlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/ProxyCachePluginConfig'
      x-speakeasy-entity: GatewayPluginProxyCache
    CreateRateLimitingAdvancedPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/RateLimitingAdvancedPluginConfig'
      x-speakeasy-entity: GatewayPluginRateLimitingAdvanced
    CreateRateLimitingPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/RateLimitingPluginConfig'
      x-speakeasy-entity: GatewayPluginRateLimiting
    CreateRequestTerminationPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/RequestTerminationPluginConfig'
      x-speakeasy-entity: GatewayPluginRequestTermination
    CreateRequestTransformerAdvancedPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/RequestTransformerAdvancedPluginConfig'
      x-speakeasy-entity: GatewayPluginRequestTransformerAdvanced
    CreateRequestTransformerPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/RequestTransformerPluginConfig'
      x-speakeasy-entity: GatewayPluginRequestTransformer
    CreateResponseTransformerAdvancedPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/ResponseTransformerAdvancedPluginConfig'
      x-speakeasy-entity: GatewayPluginResponseTransformerAdvanced
    CreateResponseTransformerPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/ResponseTransformerPluginConfig'
      x-speakeasy-entity: GatewayPluginResponseTransformer
    CreateSamlPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/SamlPluginConfig'
      x-speakeasy-entity: GatewayPluginSaml
    FileLogPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/FileLogPluginConfig'
      x-speakeasy-entity: GatewayPluginFileLog
    FileLogPluginConfig:
      properties:
        config:
          properties:
            custom_fields_by_lua:
              additionalProperties: true
              description: Lua code as a key-value map
              type: object
            path:
              description: >-
                The file path of the output log file. The plugin creates the log
                file if it doesn't exist yet.
              pattern: ^[^*&%%\`]+$
              type: string
            reopen:
              default: false
              description: >-
                Determines whether the log file is closed and reopened on every
                request.
              type: boolean
          type: object
        name:
          const: file-log
          type: string
    GatewayUnauthorizedError:
      properties:
        message:
          type: string
        status:
          type: integer
      required:
        - message
        - status
      type: object
    HMACAuth:
      allOf:
        - $ref: '#/components/schemas/HMACAuthWithoutParents'
        - properties:
            consumer:
              additionalProperties: false
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          type: object
          x-speakeasy-entity: GatewayHMACAuth
    HMACAuthWithoutParents:
      properties:
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        id:
          readOnly: true
          type: string
        secret:
          type: string
        tags:
          items:
            type: string
          type: array
        username:
          type: string
      type: object
      x-speakeasy-entity: GatewayHMACAuth
    IpRestrictionPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/IpRestrictionPluginConfig'
      x-speakeasy-entity: GatewayPluginIpRestriction
    IpRestrictionPluginConfig:
      properties:
        config:
          properties:
            allow:
              description: >-
                List of IPs or CIDR ranges to allow. One of `config.allow` or
                `config.deny` must be specified.
              items:
                description: >-
                  A string representing an IP address or CIDR block, such as
                  192.168.1.1 or 192.168.0.0/16.
                type: string
              type: array
            deny:
              description: >-
                List of IPs or CIDR ranges to deny. One of `config.allow` or
                `config.deny` must be specified.
              items:
                description: >-
                  A string representing an IP address or CIDR block, such as
                  192.168.1.1 or 192.168.0.0/16.
                type: string
              type: array
            message:
              description: The message to send as a response body to rejected requests.
              type: string
            status:
              description: >-
                The HTTP status of the requests that will be rejected by the
                plugin.
              type: number
          type: object
        name:
          const: ip-restriction
          type: string
    JQPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/JQPluginConfig'
      x-speakeasy-entity: GatewayPluginJQ
    JQPluginConfig:
      properties:
        config:
          properties:
            request_if_media_type:
              default:
                - application/json
              items:
                type: string
              type: array
            request_jq_program:
              type: string
            request_jq_program_options:
              properties:
                ascii_output:
                  default: false
                  type: boolean
                compact_output:
                  default: true
                  type: boolean
                join_output:
                  default: false
                  type: boolean
                raw_output:
                  default: false
                  type: boolean
                sort_keys:
                  default: false
                  type: boolean
              type: object
            response_if_media_type:
              default:
                - application/json
              items:
                type: string
              type: array
            response_if_status_code:
              default:
                - 200
              items:
                maximum: 599
                minimum: 100
                type: integer
              type: array
            response_jq_program:
              type: string
            response_jq_program_options:
              properties:
                ascii_output:
                  default: false
                  type: boolean
                compact_output:
                  default: true
                  type: boolean
                join_output:
                  default: false
                  type: boolean
                raw_output:
                  default: false
                  type: boolean
                sort_keys:
                  default: false
                  type: boolean
              type: object
          type: object
        name:
          const: jq
          type: string
    JWT:
      allOf:
        - $ref: '#/components/schemas/JWTWithoutParents'
        - properties:
            consumer:
              additionalProperties: false
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          type: object
          x-speakeasy-entity: GatewayJWT
    JWTPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/JWTPluginConfig'
      x-speakeasy-entity: GatewayPluginJWT
    JWTPluginConfig:
      properties:
        config:
          properties:
            anonymous:
              description: >-
                An optional string (consumer UUID or username) value to use as
                an “anonymous” consumer if authentication fails.
              type: string
            claims_to_verify:
              description: >-
                A list of registered claims (according to RFC 7519) that Kong
                can verify as well. Accepted values: one of exp or nbf.
              items:
                enum:
                  - exp
                  - nbf
                type: string
              type: array
            cookie_names:
              default: []
              description: A list of cookie names that Kong will inspect to retrieve JWTs.
              items:
                type: string
              type: array
            header_names:
              default:
                - authorization
              description: >-
                A list of HTTP header names that Kong will inspect to retrieve
                JWTs.
              items:
                type: string
              type: array
            key_claim_name:
              default: iss
              description: >-
                The name of the claim in which the key identifying the secret
                must be passed. The plugin will attempt to read this claim from
                the JWT payload and the header, in that order.
              type: string
            maximum_expiration:
              default: 0
              description: >-
                A value between 0 and 31536000 (365 days) limiting the lifetime
                of the JWT to maximum_expiration seconds in the future.
              maximum: 31536000
              minimum: 0
              type: number
            run_on_preflight:
              default: true
              description: >-
                A boolean value that indicates whether the plugin should run
                (and try to authenticate) on OPTIONS preflight requests. If set
                to false, then OPTIONS requests will always be allowed.
              type: boolean
            secret_is_base64:
              default: false
              description: >-
                If true, the plugin assumes the credential’s secret to be base64
                encoded. You will need to create a base64-encoded secret for
                your Consumer, and sign your JWT with the original secret.
              type: boolean
            uri_param_names:
              default:
                - jwt
              description: >-
                A list of querystring parameters that Kong will inspect to
                retrieve JWTs.
              items:
                type: string
              type: array
          type: object
        name:
          const: jwt
          type: string
    JWTSignerPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/JWTSignerPluginConfig'
      x-speakeasy-entity: GatewayPluginJWTSigner
    JWTSignerPluginConfig:
      properties:
        config:
          properties:
            access_token_consumer_by:
              default:
                - username
                - custom_id
              description: >-
                When the plugin tries to apply an access token to a Kong
                consumer mapping, it tries to find a matching Kong consumer from
                properties defined using this configuration parameter. The
                parameter can take an array of alues. Valid values are `id`,
                `username`, and `custom_id`.
              items:
                enum:
                  - id
                  - username
                  - custom_id
                type: string
              type: array
            access_token_consumer_claim:
              description: >-
                When you set a value for this parameter, the plugin tries to map
                an arbitrary claim specified with this configuration parameter
                (for example, `sub` or `username`) in an access token to Kong
                consumer entity.
              items:
                type: string
              type: array
            access_token_introspection_authorization:
              description: >-
                If the introspection endpoint requires client authentication
                (client being the JWT Signer plugin), you can specify the
                `Authorization` header's value with this configuration
                parameter.
              type: string
            access_token_introspection_body_args:
              description: >-
                This parameter allows you to pass URL encoded request body
                arguments. For example: `resource=` or `a=1&b=&c`.
              type: string
            access_token_introspection_consumer_by:
              default:
                - username
                - custom_id
              description: >-
                When the plugin tries to do access token introspection results
                to Kong consumer mapping, it tries to find a matching Kong
                consumer from properties defined using this configuration
                parameter. The parameter can take an array of values.
              items:
                enum:
                  - id
                  - username
                  - custom_id
                type: string
              type: array
            access_token_introspection_consumer_claim:
              description: >-
                When you set a value for this parameter, the plugin tries to map
                an arbitrary claim specified with this configuration parameter
                (such as `sub` or `username`) in access token introspection
                results to the Kong consumer entity.
              items:
                type: string
              type: array
            access_token_introspection_endpoint:
              description: >-
                When you use `opaque` access tokens and you want to turn on
                access token introspection, you need to specify the OAuth 2.0
                introspection endpoint URI with this configuration parameter.
              type: string
            access_token_introspection_hint:
              default: access_token
              description: >-
                If you need to give `hint` parameter when introspecting an
                access token, use this parameter to specify the value. By
                default, the plugin sends `hint=access_token`.
              type: string
            access_token_introspection_jwt_claim:
              description: >-
                If your introspection endpoint returns an access token in one of
                the keys (or claims) within the introspection results (`JSON`).
                If the key cannot be found, the plugin responds with `401
                Unauthorized`. Also if the key is found but cannot be decoded as
                JWT, it also responds with `401 Unauthorized`.
              items:
                type: string
              type: array
            access_token_introspection_leeway:
              default: 0
              description: >-
                Adjusts clock skew between the token issuer introspection
                results and Kong. The value is added to introspection results
                (`JSON`) `exp` claim/property before checking token expiry
                against Kong servers current time in seconds. You can disable
                access token introspection `expiry` verification altogether with
                `config.verify_access_token_introspection_expiry`.
              type: number
            access_token_introspection_scopes_claim:
              default:
                - scope
              description: >-
                Specify the claim/property in access token introspection results
                (`JSON`) to be verified against values of
                `config.access_token_introspection_scopes_required`. This
                supports nested claims. For example, with Keycloak you could use
                `[ "realm_access", "roles" ]`, hich can be given as
                `realm_access,roles` (form post). If the claim is not found in
                access token introspection results, and you have specified
                `config.access_token_introspection_scopes_required`, the plugin
                responds with `403 Forbidden`.
              items:
                type: string
              type: array
            access_token_introspection_scopes_required:
              description: >-
                Specify the required values (or scopes) that are checked by an
                introspection claim/property specified by
                `config.access_token_introspection_scopes_claim`.
              items:
                type: string
              type: array
            access_token_introspection_timeout:
              description: >-
                Timeout in milliseconds for an introspection request. The plugin
                tries to introspect twice if the first request fails for some
                reason. If both requests timeout, then the plugin runs two times
                the `config.access_token_introspection_timeout` on access token
                introspection.
              type: number
            access_token_issuer:
              default: kong
              description: >-
                The `iss` claim of a signed or re-signed access token is set to
                this value. Original `iss` claim of the incoming token (possibly
                introspected) is stored in `original_iss` claim of the newly
                signed access token.
              type: string
            access_token_jwks_uri:
              description: >-
                Specify the URI where the plugin can fetch the public keys
                (JWKS) to verify the signature of the access token.
              type: string
            access_token_jwks_uri_client_certificate:
              description: >-
                The client certificate that will be used to authenticate Kong if
                `access_token_jwks_uri` is an https uri that requires mTLS Auth.
              type: string
            access_token_jwks_uri_client_password:
              description: >-
                The client password that will be used to authenticate Kong if
                `access_token_jwks_uri` is a uri that requires Basic Auth.
                Should be configured together with
                `access_token_jwks_uri_client_username`
              type: string
            access_token_jwks_uri_client_username:
              description: >-
                The client username that will be used to authenticate Kong if
                `access_token_jwks_uri` is a uri that requires Basic Auth.
                Should be configured together with
                `access_token_jwks_uri_client_password`
              type: string
            access_token_jwks_uri_rotate_period:
              default: 0
              description: >-
                Specify the period (in seconds) to auto-rotate the jwks for
                `access_token_jwks_uri`. The default value 0 means no
                auto-rotation.
              type: number
            access_token_keyset:
              default: kong
              description: The name of the keyset containing signing keys.
              type: string
            access_token_keyset_client_certificate:
              description: >-
                The client certificate that will be used to authenticate Kong if
                `access_token_keyset` is an https uri that requires mTLS Auth.
              type: string
            access_token_keyset_client_password:
              description: >-
                The client password that will be used to authenticate Kong if
                `access_token_keyset` is a uri that requires Basic Auth. Should
                be configured together with
                `access_token_keyset_client_username`
              type: string
            access_token_keyset_client_username:
              description: >-
                The client username that will be used to authenticate Kong if
                `access_token_keyset` is a uri that requires Basic Auth. Should
                be configured together with
                `access_token_keyset_client_password`
              type: string
            access_token_keyset_rotate_period:
              default: 0
              description: >-
                Specify the period (in seconds) to auto-rotate the jwks for
                `access_token_keyset`. The default value 0 means no
                auto-rotation.
              type: number
            access_token_leeway:
              default: 0
              description: >-
                Adjusts clock skew between the token issuer and Kong. The value
                is added to the token's `exp` claim before checking token expiry
                against Kong servers' current time in seconds. You can disable
                access token `expiry` verification altogether with
                `config.verify_access_token_expiry`.
              type: number
            access_token_optional:
              default: false
              description: >-
                If an access token is not provided or no
                `config.access_token_request_header` is specified, the plugin
                cannot verify the access token. In that case, the plugin
                normally responds with `401 Unauthorized` (client didn't send a
                token) or `500 Unexpected` (a configuration error). Use this
                parameter to allow the request to proceed even when there is no
                token to check. If the token is provided, then this parameter
                has no effect
              type: boolean
            access_token_request_header:
              default: Authorization
              description: >-
                This parameter tells the name of the header where to look for
                the access token.
              type: string
            access_token_scopes_claim:
              default:
                - scope
              description: >-
                Specify the claim in an access token to verify against values of
                `config.access_token_scopes_required`.
              items:
                type: string
              type: array
            access_token_scopes_required:
              description: >-
                Specify the required values (or scopes) that are checked by a
                claim specified by `config.access_token_scopes_claim`.
              items:
                type: string
              type: array
            access_token_signing_algorithm:
              default: RS256
              description: >-
                When this plugin sets the upstream header as specified with
                `config.access_token_upstream_header`, re-signs the original
                access token using the private keys of the JWT Signer plugin.
                Specify the algorithm that is used to sign the token. The
                `config.access_token_issuer` specifies which `keyset` is used to
                sign the new token issued by Kong using the specified signing
                algorithm.
              enum:
                - HS256
                - HS384
                - HS512
                - RS256
                - RS512
                - ES256
                - ES384
                - ES512
                - PS256
                - PS384
                - PS512
                - EdDSA
              type: string
            access_token_upstream_header:
              default: Authorization:Bearer
              description: >-
                Removes the `config.access_token_request_header` from the
                request after reading its value. With
                `config.access_token_upstream_header`, you can specify the
                upstream header where the plugin adds the Kong signed token. If
                you don't specify a value, such as use `null` or `""` (empty
                string), the plugin does not even try to sign or re-sign the
                token.
              type: string
            access_token_upstream_leeway:
              default: 0
              description: >-
                If you want to add or subtract (using a negative value) expiry
                time (in seconds) of the original access token, you can specify
                a value that is added to the original access token's `exp`
                claim.
              type: number
            add_access_token_claims:
              additionalProperties: true
              description: >-
                Add customized claims if they are not present yet. Value can be
                a regular or JSON string; if JSON, decoded data is used as the
                claim's value.
              type: object
            add_channel_token_claims:
              additionalProperties: true
              description: >-
                Add customized claims if they are not present yet. Value can be
                a regular or JSON string; if JSON, decoded data is used as the
                claim's value.
              type: object
            add_claims:
              additionalProperties: true
              description: >-
                Add customized claims to both tokens if they are not present
                yet. Value can be a regular or JSON string; if JSON, decoded
                data is used as the claim's value.
              type: object
            cache_access_token_introspection:
              default: true
              description: Whether to cache access token introspection results.
              type: boolean
            cache_channel_token_introspection:
              default: true
              description: Whether to cache channel token introspection results.
              type: boolean
            channel_token_consumer_by:
              default:
                - username
                - custom_id
              description: >-
                When the plugin tries to do channel token to Kong consumer
                mapping, it tries to find a matching Kong consumer from
                properties defined using this configuration parameter. The
                parameter can take an array of valid values: `id`, `username`,
                and `custom_id`.
              items:
                enum:
                  - id
                  - username
                  - custom_id
                type: string
              type: array
            channel_token_consumer_claim:
              description: >-
                When you set a value for this parameter, the plugin tries to map
                an arbitrary claim specified with this configuration parameter.
                Kong consumers have an `id`, a `username`, and a `custom_id`. If
                this parameter is enabled but the mapping fails, such as when
                there's a non-existent Kong consumer, the plugin responds with
                `403 Forbidden`.
              items:
                type: string
              type: array
            channel_token_introspection_authorization:
              description: >-
                When using `opaque` channel tokens, and you want to turn on
                channel token introspection, you need to specify the OAuth 2.0
                introspection endpoint URI with this configuration parameter.
                Otherwise the plugin will not try introspection, and instead
                returns `401 Unauthorized` when using opaque channel tokens.
              items:
                type: string
              type: string
            channel_token_introspection_body_args:
              description: >-
                If you need to pass additional body arguments to introspection
                endpoint when the plugin introspects the opaque channel token,
                you can use this config parameter to specify them. You should
                URL encode the value. For example: `resource=` or `a=1&b=&c`.
              items:
                type: string
              type: string
            channel_token_introspection_consumer_by:
              default:
                - username
                - custom_id
              description: >-
                When the plugin tries to do channel token introspection results
                to Kong consumer mapping, it tries to find a matching Kong
                consumer from properties defined using this configuration
                parameter. The parameter can take an array of values. Valid
                values are `id`, `username` and `custom_id`.
              items:
                enum:
                  - id
                  - username
                  - custom_id
                type: string
              type: array
            channel_token_introspection_consumer_claim:
              description: >-
                When you set a value for this parameter, the plugin tries to map
                an arbitrary claim specified with this configuration parameter
                (such as `sub` or `username`) in channel token introspection
                results to Kong consumer entity
              items:
                type: string
              type: array
            channel_token_introspection_endpoint:
              description: >-
                When you use `opaque` access tokens and you want to turn on
                access token introspection, you need to specify the OAuth 2.0
                introspection endpoint URI with this configuration parameter.
                Otherwise, the plugin does not try introspection and returns
                `401 Unauthorized` instead.
              type: string
            channel_token_introspection_hint:
              description: >-
                If you need to give `hint` parameter when introspecting a
                channel token, you can use this parameter to specify the value
                of such parameter. By default, a `hint` isn't sent with channel
                token introspection.
              items:
                type: string
              type: string
            channel_token_introspection_jwt_claim:
              description: >-
                If your introspection endpoint returns a channel token in one of
                the keys (or claims) in the introspection results (`JSON`), the
                plugin can use that value instead of the introspection results
                when doing expiry verification and signing of the new token
                issued by Kong.
              items:
                type: string
              type: array
            channel_token_introspection_leeway:
              default: 0
              description: >-
                You can use this parameter to adjust clock skew between the
                token issuer introspection results and Kong. The value will be
                added to introspection results (`JSON`) `exp` claim/property
                before checking token expiry against Kong servers current time
                (in seconds). You can disable channel token introspection
                `expiry` verification altogether with
                `config.verify_channel_token_introspection_expiry`.
              type: number
            channel_token_introspection_scopes_claim:
              default:
                - scope
              description: >-
                Use this parameter to specify the claim/property in channel
                token introspection results (`JSON`) to be verified against
                values of `config.channel_token_introspection_scopes_required`.
                This supports nested claims.
              items:
                type: string
              type: array
            channel_token_introspection_scopes_required:
              description: >-
                Use this parameter to specify the required values (or scopes)
                that are checked by an introspection claim/property specified by
                `config.channel_token_introspection_scopes_claim`.
              items:
                type: string
              type: array
            channel_token_introspection_timeout:
              description: >-
                Timeout in milliseconds for an introspection request. The plugin
                tries to introspect twice if the first request fails for some
                reason. If both requests timeout, then the plugin runs two times
                the `config.access_token_introspection_timeout` on channel token
                introspection.
              type: number
            channel_token_issuer:
              default: kong
              description: >-
                The `iss` claim of the re-signed channel token is set to this
                value, which is `kong` by default. The original `iss` claim of
                the incoming token (possibly introspected) is stored in the
                `original_iss` claim of the newly signed channel token.
              type: string
            channel_token_jwks_uri:
              description: >-
                If you want to use `config.verify_channel_token_signature`, you
                must specify the URI where the plugin can fetch the public keys
                (JWKS) to verify the signature of the channel token. If you
                don't specify a URI and you pass a JWT token to the plugin, then
                the plugin responds with `401 Unauthorized`.
              type: string
            channel_token_jwks_uri_client_certificate:
              description: >-
                The client certificate that will be used to authenticate Kong if
                `access_token_jwks_uri` is an https uri that requires mTLS Auth.
              type: string
            channel_token_jwks_uri_client_password:
              description: >-
                The client password that will be used to authenticate Kong if
                `channel_token_jwks_uri` is a uri that requires Basic Auth.
                Should be configured together with
                `channel_token_jwks_uri_client_username`
              type: string
            channel_token_jwks_uri_client_username:
              description: >-
                The client username that will be used to authenticate Kong if
                `channel_token_jwks_uri` is a uri that requires Basic Auth.
                Should be configured together with
                `channel_token_jwks_uri_client_password`
              type: string
            channel_token_jwks_uri_rotate_period:
              default: 0
              description: >-
                Specify the period (in seconds) to auto-rotate the jwks for
                `channel_token_jwks_uri`. The default value 0 means no
                auto-rotation.
              type: number
            channel_token_keyset:
              default: kong
              description: The name of the keyset containing signing keys.
              type: string
            channel_token_keyset_client_certificate:
              description: >-
                The client certificate that will be used to authenticate Kong if
                `channel_token_keyset` is an https uri that requires mTLS Auth.
              type: string
            channel_token_keyset_client_password:
              description: >-
                The client password that will be used to authenticate Kong if
                `channel_token_keyset` is a uri that requires Basic Auth. Should
                be configured together with
                `channel_token_keyset_client_username`
              type: string
            channel_token_keyset_client_username:
              description: >-
                The client username that will be used to authenticate Kong if
                `channel_token_keyset` is a uri that requires Basic Auth. Should
                be configured together with
                `channel_token_keyset_client_password`
              type: string
            channel_token_keyset_rotate_period:
              default: 0
              description: >-
                Specify the period (in seconds) to auto-rotate the jwks for
                `channel_token_keyset`. The default value 0 means no
                auto-rotation.
              type: number
            channel_token_leeway:
              default: 0
              description: >-
                Adjusts clock skew between the token issuer and Kong. The value
                will be added to token's `exp` claim before checking token
                expiry against Kong servers current time in seconds. You can
                disable channel token `expiry` verification altogether with
                `config.verify_channel_token_expiry`.
              type: number
            channel_token_optional:
              default: false
              description: >-
                If a channel token is not provided or no
                `config.channel_token_request_header` is specified, the plugin
                cannot verify the channel token. In that case, the plugin
                normally responds with `401 Unauthorized` (client didn't send a
                token) or `500 Unexpected` (a configuration error). Enable this
                parameter to allow the request to proceed even when there is no
                channel token to check. If the channel token is provided, then
                this parameter has no effect
              type: boolean
            channel_token_request_header:
              description: >-
                This parameter tells the name of the header where to look for
                the channel token. If you don't want to do anything with the
                channel token, then you can set this to `null` or `""` (empty
                string).
              type: string
            channel_token_scopes_claim:
              default:
                - scope
              description: >-
                Specify the claim in a channel token to verify against values of
                `config.channel_token_scopes_required`. This supports nested
                claims.
              items:
                type: string
              type: array
            channel_token_scopes_required:
              description: >-
                Specify the required values (or scopes) that are checked by a
                claim specified by `config.channel_token_scopes_claim`.
              items:
                type: string
              type: array
            channel_token_signing_algorithm:
              default: RS256
              description: >-
                When this plugin sets the upstream header as specified with
                `config.channel_token_upstream_header`, it also re-signs the
                original channel token using private keys of this plugin.
                Specify the algorithm that is used to sign the token.
              enum:
                - HS256
                - HS384
                - HS512
                - RS256
                - RS512
                - ES256
                - ES384
                - ES512
                - PS256
                - PS384
                - PS512
                - EdDSA
              type: string
            channel_token_upstream_header:
              description: >-
                This plugin removes the `config.channel_token_request_header`
                from the request after reading its value.
              type: string
            channel_token_upstream_leeway:
              default: 0
              description: >-
                If you want to add or perhaps subtract (using negative value)
                expiry time of the original channel token, you can specify a
                value that is added to the original channel token's `exp` claim.
              type: number
            enable_access_token_introspection:
              default: true
              description: >-
                If you don't want to support opaque access tokens, change this
                configuration parameter to `false` to disable introspection.
              type: boolean
            enable_channel_token_introspection:
              default: true
              description: >-
                If you don't want to support opaque channel tokens, disable
                introspection by changing this configuration parameter to
                `false`.
              type: boolean
            enable_hs_signatures:
              default: false
              description: >-
                Tokens signed with HMAC algorithms such as `HS256`, `HS384`, or
                `HS512` are not accepted by default. If you need to accept such
                tokens for verification, enable this setting.
              type: boolean
            enable_instrumentation:
              default: false
              description: >-
                Writes log entries with some added information using `ngx.CRIT`
                (CRITICAL) level.
              type: boolean
            original_access_token_upstream_header:
              description: The HTTP header name used to store the original access token.
              type: string
            original_channel_token_upstream_header:
              description: The HTTP header name used to store the original channel token.
              type: string
            realm:
              description: >-
                When authentication or authorization fails, or there is an
                unexpected error, the plugin sends an `WWW-Authenticate` header
                with the `realm` attribute value.
              type: string
            remove_access_token_claims:
              default: []
              description: >-
                remove claims. It should be an array, and each element is a
                claim key string.
              items:
                type: string
              type: array
            remove_channel_token_claims:
              default: []
              description: >-
                remove claims. It should be an array, and each element is a
                claim key string.
              items:
                type: string
              type: array
            set_access_token_claims:
              additionalProperties: true
              description: >-
                Set customized claims. If a claim is already present, it will be
                overwritten. Value can be a regular or JSON string; if JSON,
                decoded data is used as the claim's value.
              type: object
            set_channel_token_claims:
              additionalProperties: true
              description: >-
                Set customized claims. If a claim is already present, it will be
                overwritten. Value can be a regular or JSON string; if JSON,
                decoded data is used as the claim's value.
              type: object
            set_claims:
              additionalProperties: true
              description: >-
                Set customized claims to both tokens. If a claim is already
                present, it will be overwritten. Value can be a regular or JSON
                string; if JSON, decoded data is used as the claim's value.
              type: object
            trust_access_token_introspection:
              default: true
              description: >-
                Use this parameter to enable and disable further checks on a
                payload before the new token is signed. If you set this to
                `true`, the expiry or scopes are not checked on a payload.
              type: boolean
            trust_channel_token_introspection:
              default: true
              description: >-
                Providing an opaque channel token for plugin introspection, and
                verifying expiry and scopes on introspection results may make
                further payload checks unnecessary before the plugin signs a new
                token. This also applies when using a JWT token with
                introspection JSON as per
                config.channel_token_introspection_jwt_claim. Use this parameter
                to manage additional payload checks before signing a new token.
                With true (default), payload's expiry or scopes aren't checked.
              type: boolean
            verify_access_token_expiry:
              default: true
              description: >-
                Quickly turn access token expiry verification off and on as
                needed.
              type: boolean
            verify_access_token_introspection_expiry:
              default: true
              description: >-
                Quickly turn access token introspection expiry verification off
                and on as needed.
              type: boolean
            verify_access_token_introspection_scopes:
              default: true
              description: >-
                Quickly turn off and on the access token introspection scopes
                verification, specified with
                `config.access_token_introspection_scopes_required`.
              type: boolean
            verify_access_token_scopes:
              default: true
              description: >-
                Quickly turn off and on the access token required scopes
                verification, specified with
                `config.access_token_scopes_required`.
              type: boolean
            verify_access_token_signature:
              default: true
              description: >-
                Quickly turn access token signature verification off and on as
                needed.
              type: boolean
            verify_channel_token_expiry:
              default: true
              type: boolean
            verify_channel_token_introspection_expiry:
              default: true
              description: >-
                Quickly turn on/off the channel token introspection expiry
                verification.
              type: boolean
            verify_channel_token_introspection_scopes:
              default: true
              description: >-
                Quickly turn on/off the channel token introspection scopes
                verification specified with
                `config.channel_token_introspection_scopes_required`.
              type: boolean
            verify_channel_token_scopes:
              default: true
              description: >-
                Quickly turn on/off the channel token required scopes
                verification specified with
                `config.channel_token_scopes_required`.
              type: boolean
            verify_channel_token_signature:
              default: true
              description: Quickly turn on/off the channel token signature verification.
              type: boolean
          type: object
        name:
          const: jwt-signer
          type: string
    JWTWithoutParents:
      properties:
        algorithm:
          default: HS256
          enum:
            - HS256
            - HS384
            - HS512
            - RS256
            - RS384
            - RS512
            - ES256
            - ES384
            - ES512
            - PS256
            - PS384
            - PS512
            - EdDSA
          type: string
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        id:
          readOnly: true
          type: string
        key:
          type: string
        rsa_public_key:
          type: string
        secret:
          type: string
        tags:
          items:
            type: string
          type: array
      type: object
      x-speakeasy-entity: GatewayJWT
    Key:
      properties:
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        id:
          readOnly: true
          type: string
        jwk:
          description: A JSON Web Key represented as a string.
          type: string
        kid:
          description: A unique identifier for a key.
          type: string
        name:
          description: The name to associate with the given keys.
          type: string
        pem:
          description: A keypair in PEM format.
          properties:
            private_key:
              type: string
            public_key:
              type: string
          type: object
        set:
          additionalProperties: false
          description: The id (an UUID) of the key-set with which to associate the key.
          properties:
            id:
              type: string
          type: object
          x-foreign: true
        tags:
          description: >-
            An optional set of strings associated with the Key for grouping and
            filtering.
          items:
            type: string
          type: array
        updated_at:
          description: Unix epoch when the resource was last updated.
          readOnly: true
          type: integer
      type: object
      x-speakeasy-entity: GatewayKey
    KeyAuth:
      allOf:
        - $ref: '#/components/schemas/KeyAuthWithoutParents'
        - properties:
            consumer:
              additionalProperties: false
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          type: object
          x-speakeasy-entity: GatewayKeyAuth
    KeyAuthPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/KeyAuthPluginConfig'
      x-speakeasy-entity: GatewayPluginKeyAuth
    KeyAuthPluginConfig:
      properties:
        config:
          properties:
            anonymous:
              description: >-
                An optional string (consumer UUID or username) value to use as
                an “anonymous” consumer if authentication fails. If empty
                (default null), the request will fail with an authentication
                failure `4xx`.
              type: string
            hide_credentials:
              default: false
              description: >-
                An optional boolean value telling the plugin to show or hide the
                credential from the upstream service. If `true`, the plugin
                strips the credential from the request.
              type: boolean
            key_in_body:
              default: false
              description: >-
                If enabled, the plugin reads the request body. Supported MIME
                types: `application/www-form-urlencoded`, `application/json`,
                and `multipart/form-data`.
              type: boolean
            key_in_header:
              default: true
              description: >-
                If enabled (default), the plugin reads the request header and
                tries to find the key in it.
              type: boolean
            key_in_query:
              default: true
              description: >-
                If enabled (default), the plugin reads the query parameter in
                the request and tries to find the key in it.
              type: boolean
            key_names:
              default:
                - apikey
              description: >-
                Describes an array of parameter names where the plugin will look
                for a key. The key names may only contain [a-z], [A-Z], [0-9],
                [_] underscore, and [-] hyphen.
              items:
                description: A string representing an HTTP header name.
                type: string
              type: array
            realm:
              description: >-
                When authentication fails the plugin sends `WWW-Authenticate`
                header with `realm` attribute value.
              type: string
            run_on_preflight:
              default: true
              description: >-
                A boolean value that indicates whether the plugin should run
                (and try to authenticate) on `OPTIONS` preflight requests. If
                set to `false`, then `OPTIONS` requests are always allowed.
              type: boolean
          type: object
        name:
          const: key-auth
          type: string
    KeyAuthWithoutParents:
      properties:
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        id:
          readOnly: true
          type: string
        key:
          type: string
        tags:
          items:
            type: string
          type: array
      type: object
      x-speakeasy-entity: GatewayKeyAuth
    KeySet:
      properties:
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        id:
          readOnly: true
          type: string
        name:
          type: string
        tags:
          items:
            type: string
          type: array
        updated_at:
          description: Unix epoch when the resource was last updated.
          readOnly: true
          type: integer
      type: object
      x-speakeasy-entity: GatewayKeySet
    Oauth2Plugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/Oauth2PluginConfig'
      x-speakeasy-entity: GatewayPluginOauth2
    Oauth2PluginConfig:
      properties:
        config:
          properties:
            accept_http_if_already_terminated:
              default: false
              description: >-
                Accepts HTTPs requests that have already been terminated by a
                proxy or load balancer.
              type: boolean
            anonymous:
              description: >-
                An optional string (consumer UUID or username) value to use as
                an “anonymous” consumer if authentication fails.
              type: string
            auth_header_name:
              default: authorization
              description: >-
                The name of the header that is supposed to carry the access
                token.
              type: string
            enable_authorization_code:
              default: false
              description: >-
                An optional boolean value to enable the three-legged
                Authorization Code flow (RFC 6742 Section 4.1).
              type: boolean
            enable_client_credentials:
              default: false
              description: >-
                An optional boolean value to enable the Client Credentials Grant
                flow (RFC 6742 Section 4.4).
              type: boolean
            enable_implicit_grant:
              default: false
              description: >-
                An optional boolean value to enable the Implicit Grant flow
                which allows to provision a token as a result of the
                authorization process (RFC 6742 Section 4.2).
              type: boolean
            enable_password_grant:
              default: false
              description: >-
                An optional boolean value to enable the Resource Owner Password
                Credentials Grant flow (RFC 6742 Section 4.3).
              type: boolean
            global_credentials:
              default: false
              description: >-
                An optional boolean value that allows using the same OAuth
                credentials generated by the plugin with any other service whose
                OAuth 2.0 plugin configuration also has
                `config.global_credentials=true`.
              type: boolean
            hide_credentials:
              default: false
              description: >-
                An optional boolean value telling the plugin to show or hide the
                credential from the upstream service.
              type: boolean
            mandatory_scope:
              default: false
              description: >-
                An optional boolean value telling the plugin to require at least
                one `scope` to be authorized by the end user.
              type: boolean
            persistent_refresh_token:
              default: false
              type: boolean
            pkce:
              default: lax
              description: >-
                Specifies a mode of how the Proof Key for Code Exchange (PKCE)
                should be handled by the plugin.
              enum:
                - none
                - lax
                - strict
              type: string
            provision_key:
              description: >-
                The unique key the plugin has generated when it has been added
                to the Service.
              type: string
            refresh_token_ttl:
              default: 1209600
              description: Time-to-live value for data
              maximum: 100000000
              minimum: 0
              type: number
            reuse_refresh_token:
              default: false
              description: >-
                An optional boolean value that indicates whether an OAuth
                refresh token is reused when refreshing an access token.
              type: boolean
            scopes:
              description: >-
                Describes an array of scope names that will be available to the
                end user. If `mandatory_scope` is set to `true`, then `scopes`
                are required.
              items:
                type: string
              type: array
            token_expiration:
              default: 7200
              description: >-
                An optional integer value telling the plugin how many seconds a
                token should last, after which the client will need to refresh
                the token. Set to `0` to disable the expiration.
              type: number
          type: object
        name:
          const: oauth2
          type: string
    OpenidConnectPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/OpenidConnectPluginConfig'
      x-speakeasy-entity: GatewayPluginOpenidConnect
    OpenidConnectPluginConfig:
      properties:
        config:
          properties:
            anonymous:
              description: >-
                An optional string (consumer UUID or username) value that
                functions as an “anonymous” consumer if authentication fails. If
                empty (default null), requests that fail authentication will
                return a `4xx` HTTP status code. This value must refer to the
                consumer `id` or `username` attribute, and **not** its
                `custom_id`.
              type: string
            audience:
              description: The audience passed to the authorization endpoint.
              items:
                type: string
              type: array
            audience_claim:
              default:
                - aud
              description: >-
                The claim that contains the audience. If multiple values are
                set, it means the claim is inside a nested object of the token
                payload.
              items:
                type: string
              type: array
            audience_required:
              description: >-
                The audiences (`audience_claim` claim) required to be present in
                the access token (or introspection results) for successful
                authorization. This config parameter works in both **AND** /
                **OR** cases.
              items:
                type: string
              type: array
            auth_methods:
              default:
                - password
                - client_credentials
                - authorization_code
                - bearer
                - introspection
                - userinfo
                - kong_oauth2
                - refresh_token
                - session
              description: Types of credentials/grants to enable.
              items:
                enum:
                  - password
                  - client_credentials
                  - authorization_code
                  - bearer
                  - introspection
                  - userinfo
                  - kong_oauth2
                  - refresh_token
                  - session
                type: string
              type: array
            authenticated_groups_claim:
              description: >-
                The claim that contains authenticated groups. This setting can
                be used together with ACL plugin, but it also enables IdP
                managed groups with other applications and integrations. If
                multiple values are set, it means the claim is inside a nested
                object of the token payload.
              items:
                type: string
              type: array
            authorization_cookie_domain:
              description: The authorization cookie Domain flag.
              type: string
            authorization_cookie_http_only:
              default: true
              description: >-
                Forbids JavaScript from accessing the cookie, for example,
                through the `Document.cookie` property.
              type: boolean
            authorization_cookie_name:
              default: authorization
              description: The authorization cookie name.
              type: string
            authorization_cookie_path:
              default: /
              description: The authorization cookie Path flag.
              type: string
            authorization_cookie_same_site:
              default: Default
              description: >-
                Controls whether a cookie is sent with cross-origin requests,
                providing some protection against cross-site request forgery
                attacks.
              enum:
                - Strict
                - Lax
                - None
                - Default
              type: string
            authorization_cookie_secure:
              description: >-
                Cookie is only sent to the server when a request is made with
                the https: scheme (except on localhost), and therefore is more
                resistant to man-in-the-middle attacks.
              type: boolean
            authorization_endpoint:
              description: >-
                The authorization endpoint. If set it overrides the value in
                `authorization_endpoint` returned by the discovery endpoint.
              type: string
            authorization_query_args_client:
              description: >-
                Extra query arguments passed from the client to the
                authorization endpoint.
              items:
                type: string
              type: array
            authorization_query_args_names:
              description: Extra query argument names passed to the authorization endpoint.
              items:
                type: string
              type: array
            authorization_query_args_values:
              description: >-
                Extra query argument values passed to the authorization
                endpoint.
              items:
                type: string
              type: array
            authorization_rolling_timeout:
              default: 600
              description: >-
                Specifies how long the session used for the authorization code
                flow can be used in seconds until it needs to be renewed. 0
                disables the checks and rolling.
              type: number
            bearer_token_cookie_name:
              description: The name of the cookie in which the bearer token is passed.
              type: string
            bearer_token_param_type:
              default:
                - header
                - query
                - body
              description: >-
                Where to look for the bearer token: - `header`: search the HTTP
                headers - `query`: search the URL's query string - `body`:
                search the HTTP request body - `cookie`: search the HTTP request
                cookies specified with `config.bearer_token_cookie_name`.
              items:
                enum:
                  - header
                  - cookie
                  - query
                  - body
                type: string
              type: array
            by_username_ignore_case:
              default: false
              description: >-
                If `consumer_by` is set to `username`, specify whether
                `username` can match consumers case-insensitively.
              type: boolean
            cache_introspection:
              default: true
              description: Cache the introspection endpoint requests.
              type: boolean
            cache_token_exchange:
              default: true
              description: Cache the token exchange endpoint requests.
              type: boolean
            cache_tokens:
              default: true
              description: Cache the token endpoint requests.
              type: boolean
            cache_tokens_salt:
              description: >-
                Salt used for generating the cache key that is used for caching
                the token endpoint requests.
              type: string
            cache_ttl:
              default: 3600
              description: >-
                The default cache ttl in seconds that is used in case the cached
                object does not specify the expiry.
              type: number
            cache_ttl_max:
              description: The maximum cache ttl in seconds (enforced).
              type: number
            cache_ttl_min:
              description: The minimum cache ttl in seconds (enforced).
              type: number
            cache_ttl_neg:
              description: The negative cache ttl in seconds.
              type: number
            cache_ttl_resurrect:
              description: The resurrection ttl in seconds.
              type: number
            cache_user_info:
              default: true
              description: Cache the user info requests.
              type: boolean
            client_alg:
              description: >-
                The algorithm to use for client_secret_jwt (only HS***) or
                private_key_jwt authentication.
              items:
                enum:
                  - HS256
                  - HS384
                  - HS512
                  - RS256
                  - RS384
                  - RS512
                  - ES256
                  - ES384
                  - ES512
                  - PS256
                  - PS384
                  - PS512
                  - EdDSA
                type: string
              type: array
            client_arg:
              default: client_id
              description: >-
                The client to use for this request (the selection is made with a
                request parameter with the same name).
              type: string
            client_auth:
              description: >-
                The default OpenID Connect client authentication method is
                'client_secret_basic' (using 'Authorization: Basic' header),
                'client_secret_post' (credentials in body), 'client_secret_jwt'
                (signed client assertion in body), 'private_key_jwt' (private
                key-signed assertion), 'tls_client_auth' (client certificate),
                'self_signed_tls_client_auth' (self-signed client certificate),
                and 'none' (no authentication).
              items:
                enum:
                  - client_secret_basic
                  - client_secret_post
                  - client_secret_jwt
                  - private_key_jwt
                  - tls_client_auth
                  - self_signed_tls_client_auth
                  - none
                type: string
              type: array
            client_credentials_param_type:
              default:
                - header
                - query
                - body
              description: >-
                Where to look for the client credentials: - `header`: search the
                HTTP headers - `query`: search the URL's query string - `body`:
                search from the HTTP request body.
              items:
                enum:
                  - header
                  - query
                  - body
                type: string
              type: array
            client_id:
              description: >-
                The client id(s) that the plugin uses when it calls
                authenticated endpoints on the identity provider.
              items:
                type: string
              type: array
            client_jwk:
              description: The JWK used for the private_key_jwt authentication.
              items:
                properties:
                  alg:
                    type: string
                  crv:
                    type: string
                  d:
                    type: string
                  dp:
                    type: string
                  dq:
                    type: string
                  e:
                    type: string
                  issuer:
                    type: string
                  k:
                    type: string
                  key_ops:
                    items:
                      type: string
                    type: array
                  kid:
                    type: string
                  kty:
                    type: string
                  'n':
                    type: string
                  oth:
                    type: string
                  p:
                    type: string
                  q:
                    type: string
                  qi:
                    type: string
                  r:
                    type: string
                  t:
                    type: string
                  use:
                    type: string
                  x:
                    type: string
                  x5c:
                    items:
                      type: string
                    type: array
                  x5t:
                    type: string
                  x5t#S256:
                    type: string
                  x5u:
                    type: string
                  'y':
                    type: string
                type: object
              type: array
            client_secret:
              description: The client secret.
              items:
                type: string
              type: array
            consumer_by:
              default:
                - username
                - custom_id
              description: >-
                Consumer fields used for mapping: - `id`: try to find the
                matching Consumer by `id` - `username`: try to find the matching
                Consumer by `username` - `custom_id`: try to find the matching
                Consumer by `custom_id`.
              items:
                enum:
                  - id
                  - username
                  - custom_id
                type: string
              type: array
            consumer_claim:
              description: >-
                The claim used for consumer mapping. If multiple values are set,
                it means the claim is inside a nested object of the token
                payload.
              items:
                type: string
              type: array
            consumer_optional:
              default: false
              description: Do not terminate the request if consumer mapping fails.
              type: boolean
            credential_claim:
              default:
                - sub
              description: >-
                The claim used to derive virtual credentials (e.g. to be
                consumed by the rate-limiting plugin), in case the consumer
                mapping is not used. If multiple values are set, it means the
                claim is inside a nested object of the token payload.
              items:
                type: string
              type: array
            disable_session:
              description: Disable issuing the session cookie with the specified grants.
              items:
                enum:
                  - password
                  - client_credentials
                  - authorization_code
                  - bearer
                  - introspection
                  - userinfo
                  - kong_oauth2
                  - refresh_token
                  - session
                type: string
              type: array
            discovery_headers_names:
              description: Extra header names passed to the discovery endpoint.
              items:
                type: string
              type: array
            discovery_headers_values:
              description: Extra header values passed to the discovery endpoint.
              items:
                type: string
              type: array
            display_errors:
              default: false
              description: Display errors on failure responses.
              type: boolean
            domains:
              description: The allowed values for the `hd` claim.
              items:
                type: string
              type: array
            downstream_access_token_header:
              description: The downstream access token header.
              type: string
            downstream_access_token_jwk_header:
              description: The downstream access token JWK header.
              type: string
            downstream_headers_claims:
              description: >-
                The downstream header claims. If multiple values are set, it
                means the claim is inside a nested object of the token payload.
              items:
                type: string
              type: array
            downstream_headers_names:
              description: The downstream header names for the claim values.
              items:
                type: string
              type: array
            downstream_id_token_header:
              description: The downstream id token header.
              type: string
            downstream_id_token_jwk_header:
              description: The downstream id token JWK header.
              type: string
            downstream_introspection_header:
              description: The downstream introspection header.
              type: string
            downstream_introspection_jwt_header:
              description: The downstream introspection JWT header.
              type: string
            downstream_refresh_token_header:
              description: The downstream refresh token header.
              type: string
            downstream_session_id_header:
              description: The downstream session id header.
              type: string
            downstream_user_info_header:
              description: The downstream user info header.
              type: string
            downstream_user_info_jwt_header:
              description: >-
                The downstream user info JWT header (in case the user info
                returns a JWT response).
              type: string
            dpop_proof_lifetime:
              default: 300
              description: >-
                Specifies the lifetime in seconds of the DPoP proof. It
                determines how long the same proof can be used after creation.
                The creation time is determined by the nonce creation time if a
                nonce is used, and the iat claim otherwise.
              type: number
            dpop_use_nonce:
              default: false
              description: >-
                Specifies whether to challenge the client with a nonce value for
                DPoP proof. When enabled it will also be used to calculate the
                DPoP proof lifetime.
              type: boolean
            enable_hs_signatures:
              default: false
              description: >-
                Enable shared secret, for example, HS256, signatures (when
                disabled they will not be accepted).
              type: boolean
            end_session_endpoint:
              description: >-
                The end session endpoint. If set it overrides the value in
                `end_session_endpoint` returned by the discovery endpoint.
              type: string
            expose_error_code:
              default: true
              description: >-
                Specifies whether to expose the error code header, as defined in
                RFC 6750. If an authorization request fails, this header is sent
                in the response. Set to `false` to disable.
              type: boolean
            extra_jwks_uris:
              description: >-
                JWKS URIs whose public keys are trusted (in addition to the keys
                found with the discovery).
              items:
                description: >-
                  A string representing a URL, such as
                  https://example.com/path/to/resource?q=search.
                type: string
              type: array
            forbidden_destroy_session:
              default: true
              description: Destroy any active session for the forbidden requests.
              type: boolean
            forbidden_error_message:
              default: Forbidden
              description: >-
                The error message for the forbidden requests (when not using the
                redirection).
              type: string
            forbidden_redirect_uri:
              description: Where to redirect the client on forbidden requests.
              items:
                description: >-
                  A string representing a URL, such as
                  https://example.com/path/to/resource?q=search.
                type: string
              type: array
            groups_claim:
              default:
                - groups
              description: >-
                The claim that contains the groups. If multiple values are set,
                it means the claim is inside a nested object of the token
                payload.
              items:
                type: string
              type: array
            groups_required:
              description: >-
                The groups (`groups_claim` claim) required to be present in the
                access token (or introspection results) for successful
                authorization. This config parameter works in both **AND** /
                **OR** cases.
              items:
                type: string
              type: array
            hide_credentials:
              default: false
              description: >-
                Remove the credentials used for authentication from the request.
                If multiple credentials are sent with the same request, the
                plugin will remove those that were used for successful
                authentication.
              type: boolean
            http_proxy:
              description: The HTTP proxy.
              type: string
            http_proxy_authorization:
              description: The HTTP proxy authorization.
              type: string
            http_version:
              default: 1.1
              description: >-
                The HTTP version used for the requests by this plugin: - `1.1`:
                HTTP 1.1 (the default) - `1.0`: HTTP 1.0.
              type: number
            https_proxy:
              description: The HTTPS proxy.
              type: string
            https_proxy_authorization:
              description: The HTTPS proxy authorization.
              type: string
            id_token_param_name:
              description: The name of the parameter used to pass the id token.
              type: string
            id_token_param_type:
              default:
                - header
                - query
                - body
              description: >-
                Where to look for the id token: - `header`: search the HTTP
                headers - `query`: search the URL's query string - `body`:
                search the HTTP request body.
              items:
                enum:
                  - header
                  - query
                  - body
                type: string
              type: array
            ignore_signature:
              default: []
              description: >-
                Skip the token signature verification on certain grants: -
                `password`: OAuth password grant - `client_credentials`: OAuth
                client credentials grant - `authorization_code`: authorization
                code flow - `refresh_token`: OAuth refresh token grant -
                `session`: session cookie authentication - `introspection`:
                OAuth introspection - `userinfo`: OpenID Connect user info
                endpoint authentication.
              items:
                enum:
                  - password
                  - client_credentials
                  - authorization_code
                  - refresh_token
                  - session
                  - introspection
                  - userinfo
                type: string
              type: array
            introspect_jwt_tokens:
              default: false
              description: >-
                Specifies whether to introspect the JWT access tokens (can be
                used to check for revocations).
              type: boolean
            introspection_accept:
              default: application/json
              description: >-
                The value of `Accept` header for introspection requests: -
                `application/json`: introspection response as JSON -
                `application/token-introspection+jwt`: introspection response as
                JWT (from the current IETF draft document) - `application/jwt`:
                introspection response as JWT (from the obsolete IETF draft
                document).
              enum:
                - application/json
                - application/token-introspection+jwt
                - application/jwt
              type: string
            introspection_check_active:
              default: true
              description: >-
                Check that the introspection response has an `active` claim with
                a value of `true`.
              type: boolean
            introspection_endpoint:
              description: >-
                The introspection endpoint. If set it overrides the value in
                `introspection_endpoint` returned by the discovery endpoint.
              type: string
            introspection_endpoint_auth_method:
              description: >-
                The introspection endpoint authentication method: :
                `client_secret_basic`, `client_secret_post`,
                `client_secret_jwt`, `private_key_jwt`, `tls_client_auth`,
                `self_signed_tls_client_auth`, or `none`: do not authenticate
              enum:
                - client_secret_basic
                - client_secret_post
                - client_secret_jwt
                - private_key_jwt
                - tls_client_auth
                - self_signed_tls_client_auth
                - none
              type: string
            introspection_headers_client:
              description: >-
                Extra headers passed from the client to the introspection
                endpoint.
              items:
                type: string
              type: array
            introspection_headers_names:
              description: Extra header names passed to the introspection endpoint.
              items:
                type: string
              type: array
            introspection_headers_values:
              description: Extra header values passed to the introspection endpoint.
              items:
                type: string
              type: array
            introspection_hint:
              default: access_token
              description: >-
                Introspection hint parameter value passed to the introspection
                endpoint.
              type: string
            introspection_post_args_client:
              description: >-
                Extra post arguments passed from the client to the introspection
                endpoint.
              items:
                type: string
              type: array
            introspection_post_args_names:
              description: Extra post argument names passed to the introspection endpoint.
              items:
                type: string
              type: array
            introspection_post_args_values:
              description: Extra post argument values passed to the introspection endpoint.
              items:
                type: string
              type: array
            introspection_token_param_name:
              default: token
              description: Designate token's parameter name for introspection.
              type: string
            issuer:
              description: >-
                The discovery endpoint (or the issuer identifier). When there is
                no discovery endpoint, please also configure
                `config.using_pseudo_issuer=true`.
              type: string
            issuers_allowed:
              description: The issuers allowed to be present in the tokens (`iss` claim).
              items:
                type: string
              type: array
            jwt_session_claim:
              default: sid
              description: The claim to match against the JWT session cookie.
              type: string
            jwt_session_cookie:
              description: The name of the JWT session cookie.
              type: string
            keepalive:
              default: true
              description: Use keepalive with the HTTP client.
              type: boolean
            leeway:
              default: 0
              description: >-
                Defines leeway time (in seconds) for `auth_time`, `exp`, `iat`,
                and `nbf` claims
              type: number
            login_action:
              default: upstream
              description: >-
                What to do after successful login: - `upstream`: proxy request
                to upstream service - `response`: terminate request with a
                response - `redirect`: redirect to a different location.
              enum:
                - upstream
                - response
                - redirect
              type: string
            login_methods:
              default:
                - authorization_code
              description: Enable login functionality with specified grants.
              items:
                enum:
                  - password
                  - client_credentials
                  - authorization_code
                  - bearer
                  - introspection
                  - userinfo
                  - kong_oauth2
                  - refresh_token
                  - session
                type: string
              type: array
            login_redirect_mode:
              default: fragment
              description: >-
                Where to place `login_tokens` when using `redirect`
                `login_action`: - `query`: place tokens in query string -
                `fragment`: place tokens in url fragment (not readable by
                servers).
              enum:
                - query
                - fragment
              type: string
            login_redirect_uri:
              description: >-
                Where to redirect the client when `login_action` is set to
                `redirect`.
              items:
                description: >-
                  A string representing a URL, such as
                  https://example.com/path/to/resource?q=search.
                type: string
              type: array
            login_tokens:
              default:
                - id_token
              description: >-
                What tokens to include in `response` body or `redirect` query
                string or fragment: - `id_token`: include id token -
                `access_token`: include access token - `refresh_token`: include
                refresh token - `tokens`: include the full token endpoint
                response - `introspection`: include introspection response.
              items:
                enum:
                  - id_token
                  - access_token
                  - refresh_token
                  - tokens
                  - introspection
                type: string
              type: array
            logout_methods:
              default:
                - POST
                - DELETE
              description: >-
                The request methods that can activate the logout: - `POST`: HTTP
                POST method - `GET`: HTTP GET method - `DELETE`: HTTP DELETE
                method.
              items:
                enum:
                  - POST
                  - GET
                  - DELETE
                type: string
              type: array
            logout_post_arg:
              description: The request body argument that activates the logout.
              type: string
            logout_query_arg:
              description: The request query argument that activates the logout.
              type: string
            logout_redirect_uri:
              description: Where to redirect the client after the logout.
              items:
                description: >-
                  A string representing a URL, such as
                  https://example.com/path/to/resource?q=search.
                type: string
              type: array
            logout_revoke:
              default: false
              description: >-
                Revoke tokens as part of the logout.


                For more granular token revocation, you can also adjust the
                `logout_revoke_access_token` and `logout_revoke_refresh_token`
                parameters.
              type: boolean
            logout_revoke_access_token:
              default: true
              description: >-
                Revoke the access token as part of the logout. Requires
                `logout_revoke` to be set to `true`.
              type: boolean
            logout_revoke_refresh_token:
              default: true
              description: >-
                Revoke the refresh token as part of the logout. Requires
                `logout_revoke` to be set to `true`.
              type: boolean
            logout_uri_suffix:
              description: The request URI suffix that activates the logout.
              type: string
            max_age:
              description: The maximum age (in seconds) compared to the `auth_time` claim.
              type: number
            mtls_introspection_endpoint:
              description: >-
                Alias for the introspection endpoint to be used for mTLS client
                authentication. If set it overrides the value in
                `mtls_endpoint_aliases` returned by the discovery endpoint.
              type: string
            mtls_revocation_endpoint:
              description: >-
                Alias for the introspection endpoint to be used for mTLS client
                authentication. If set it overrides the value in
                `mtls_endpoint_aliases` returned by the discovery endpoint.
              type: string
            mtls_token_endpoint:
              description: >-
                Alias for the token endpoint to be used for mTLS client
                authentication. If set it overrides the value in
                `mtls_endpoint_aliases` returned by the discovery endpoint.
              type: string
            no_proxy:
              description: Do not use proxy with these hosts.
              type: string
            password_param_type:
              default:
                - header
                - query
                - body
              description: >-
                Where to look for the username and password: - `header`: search
                the HTTP headers - `query`: search the URL's query string -
                `body`: search the HTTP request body.
              items:
                enum:
                  - header
                  - query
                  - body
                type: string
              type: array
            preserve_query_args:
              default: false
              description: >-
                With this parameter, you can preserve request query arguments
                even when doing authorization code flow.
              type: boolean
            proof_of_possession_auth_methods_validation:
              default: true
              description: >-
                If set to true, only the auth_methods that are compatible with
                Proof of Possession (PoP) can be configured when PoP is enabled.
                If set to false, all auth_methods will be configurable and PoP
                checks will be silently skipped for those auth_methods that are
                not compatible with PoP.
              type: boolean
            proof_of_possession_dpop:
              default: 'off'
              description: >-
                Enable Demonstrating Proof-of-Possession (DPoP). If set to
                strict, all request are verified despite the presence of the
                DPoP key claim (cnf.jkt). If set to optional, only tokens bound
                with DPoP's key are verified with the proof.
              enum:
                - 'off'
                - strict
                - optional
              type: string
            proof_of_possession_mtls:
              default: 'off'
              description: >-
                Enable mtls proof of possession. If set to strict, all tokens
                (from supported auth_methods: bearer, introspection, and session
                granted with bearer or introspection) are verified, if set to
                optional, only tokens that contain the certificate hash claim
                are verified. If the verification fails, the request will be
                rejected with 401.
              enum:
                - 'off'
                - strict
                - optional
              type: string
            pushed_authorization_request_endpoint:
              description: >-
                The pushed authorization endpoint. If set it overrides the value
                in `pushed_authorization_request_endpoint` returned by the
                discovery endpoint.
              type: string
            pushed_authorization_request_endpoint_auth_method:
              description: >-
                The pushed authorization request endpoint authentication method:
                `client_secret_basic`, `client_secret_post`,
                `client_secret_jwt`, `private_key_jwt`, `tls_client_auth`,
                `self_signed_tls_client_auth`, or `none`: do not authenticate
              enum:
                - client_secret_basic
                - client_secret_post
                - client_secret_jwt
                - private_key_jwt
                - tls_client_auth
                - self_signed_tls_client_auth
                - none
              type: string
            redirect_uri:
              description: >-
                The redirect URI passed to the authorization and token
                endpoints.
              items:
                description: >-
                  A string representing a URL, such as
                  https://example.com/path/to/resource?q=search.
                type: string
              type: array
            rediscovery_lifetime:
              default: 30
              description: >-
                Specifies how long (in seconds) the plugin waits between
                discovery attempts. Discovery is still triggered on an as-needed
                basis.
              type: number
            refresh_token_param_name:
              description: The name of the parameter used to pass the refresh token.
              type: string
            refresh_token_param_type:
              default:
                - header
                - query
                - body
              description: >-
                Where to look for the refresh token: - `header`: search the HTTP
                headers - `query`: search the URL's query string - `body`:
                search the HTTP request body.
              items:
                enum:
                  - header
                  - query
                  - body
                type: string
              type: array
            refresh_tokens:
              default: true
              description: >-
                Specifies whether the plugin should try to refresh (soon to be)
                expired access tokens if the plugin has a `refresh_token`
                available.
              type: boolean
            require_proof_key_for_code_exchange:
              description: >-
                Forcibly enable or disable the proof key for code exchange. When
                not set the value is determined through the discovery using the
                value of `code_challenge_methods_supported`, and enabled
                automatically (in case the `code_challenge_methods_supported` is
                missing, the PKCE will not be enabled).
              type: boolean
            require_pushed_authorization_requests:
              description: >-
                Forcibly enable or disable the pushed authorization requests.
                When not set the value is determined through the discovery using
                the value of `require_pushed_authorization_requests` (which
                defaults to `false`).
              type: boolean
            require_signed_request_object:
              description: >-
                Forcibly enable or disable the usage of signed request object on
                authorization or pushed authorization endpoint. When not set the
                value is determined through the discovery using the value of
                `require_signed_request_object`, and enabled automatically (in
                case the `require_signed_request_object` is missing, the feature
                will not be enabled).
              type: boolean
            resolve_distributed_claims:
              default: false
              description: >-
                Distributed claims are represented by the `_claim_names` and
                `_claim_sources` members of the JSON object containing the
                claims. If this parameter is set to `true`, the plugin
                explicitly resolves these distributed claims.
              type: boolean
            response_mode:
              default: query
              description: >-
                Response mode passed to the authorization endpoint: - `query`:
                for parameters in query string - `form_post`: for parameters in
                request body - `fragment`: for parameters in uri fragment
                (rarely useful as the plugin itself cannot read it) -
                `query.jwt`, `form_post.jwt`, `fragment.jwt`: similar to
                `query`, `form_post` and `fragment` but the parameters are
                encoded in a JWT - `jwt`: shortcut that indicates the default
                encoding for the requested response type.
              enum:
                - query
                - form_post
                - fragment
                - query.jwt
                - form_post.jwt
                - fragment.jwt
                - jwt
              type: string
            response_type:
              default:
                - code
              description: The response type passed to the authorization endpoint.
              items:
                type: string
              type: array
            reverify:
              default: false
              description: Specifies whether to always verify tokens stored in the session.
              type: boolean
            revocation_endpoint:
              description: >-
                The revocation endpoint. If set it overrides the value in
                `revocation_endpoint` returned by the discovery endpoint.
              type: string
            revocation_endpoint_auth_method:
              description: >-
                The revocation endpoint authentication method: :
                `client_secret_basic`, `client_secret_post`,
                `client_secret_jwt`, `private_key_jwt`, `tls_client_auth`,
                `self_signed_tls_client_auth`, or `none`: do not authenticate
              enum:
                - client_secret_basic
                - client_secret_post
                - client_secret_jwt
                - private_key_jwt
                - tls_client_auth
                - self_signed_tls_client_auth
                - none
              type: string
            revocation_token_param_name:
              default: token
              description: Designate token's parameter name for revocation.
              type: string
            roles_claim:
              default:
                - roles
              description: >-
                The claim that contains the roles. If multiple values are set,
                it means the claim is inside a nested object of the token
                payload.
              items:
                type: string
              type: array
            roles_required:
              description: >-
                The roles (`roles_claim` claim) required to be present in the
                access token (or introspection results) for successful
                authorization. This config parameter works in both **AND** /
                **OR** cases.
              items:
                type: string
              type: array
            run_on_preflight:
              default: true
              description: >-
                Specifies whether to run this plugin on pre-flight (`OPTIONS`)
                requests.
              type: boolean
            scopes:
              default:
                - openid
              description: The scopes passed to the authorization and token endpoints.
              items:
                type: string
              type: array
            scopes_claim:
              default:
                - scope
              description: >-
                The claim that contains the scopes. If multiple values are set,
                it means the claim is inside a nested object of the token
                payload.
              items:
                type: string
              type: array
            scopes_required:
              description: >-
                The scopes (`scopes_claim` claim) required to be present in the
                access token (or introspection results) for successful
                authorization. This config parameter works in both **AND** /
                **OR** cases.
              items:
                type: string
              type: array
            search_user_info:
              default: false
              description: >-
                Specify whether to use the user info endpoint to get additional
                claims for consumer mapping, credential mapping, authenticated
                groups, and upstream and downstream headers.
              type: boolean
            session_absolute_timeout:
              default: 86400
              description: >-
                Limits how long the session can be renewed in seconds, until
                re-authentication is required. 0 disables the checks.
              type: number
            session_audience:
              default: default
              description: >-
                The session audience, which is the intended target application.
                For example `"my-application"`.
              type: string
            session_cookie_domain:
              description: The session cookie Domain flag.
              type: string
            session_cookie_http_only:
              default: true
              description: >-
                Forbids JavaScript from accessing the cookie, for example,
                through the `Document.cookie` property.
              type: boolean
            session_cookie_name:
              default: session
              description: The session cookie name.
              type: string
            session_cookie_path:
              default: /
              description: The session cookie Path flag.
              type: string
            session_cookie_same_site:
              default: Lax
              description: >-
                Controls whether a cookie is sent with cross-origin requests,
                providing some protection against cross-site request forgery
                attacks.
              enum:
                - Strict
                - Lax
                - None
                - Default
              type: string
            session_cookie_secure:
              description: >-
                Cookie is only sent to the server when a request is made with
                the https: scheme (except on localhost), and therefore is more
                resistant to man-in-the-middle attacks.
              type: boolean
            session_enforce_same_subject:
              default: false
              description: >-
                When set to `true`, audiences are forced to share the same
                subject.
              type: boolean
            session_hash_storage_key:
              default: false
              description: >-
                When set to `true`, the storage key (session ID) is hashed for
                extra security. Hashing the storage key means it is impossible
                to decrypt data from the storage without a cookie.
              type: boolean
            session_hash_subject:
              default: false
              description: >-
                When set to `true`, the value of subject is hashed before being
                stored. Only applies when `session_store_metadata` is enabled.
              type: boolean
            session_idling_timeout:
              default: 900
              description: >-
                Specifies how long the session can be inactive until it is
                considered invalid in seconds. 0 disables the checks and
                touching.
              type: number
            session_memcached_host:
              default: 127.0.0.1
              description: The memcached host.
              type: string
            session_memcached_port:
              default: 11211
              description: The memcached port.
              maximum: 65535
              minimum: 0
              type: integer
            session_memcached_prefix:
              description: The memcached session key prefix.
              type: string
            session_memcached_socket:
              description: The memcached unix socket path.
              type: string
            session_redis_cluster_max_redirections:
              description: The Redis cluster maximum redirects.
              type: integer
            session_redis_cluster_nodes:
              description: >-
                The Redis cluster node host. Takes an array of host records,
                with either `ip` or `host`, and `port` values.
              items:
                properties:
                  ip:
                    default: 127.0.0.1
                    description: A string representing a host name, such as example.com.
                    type: string
                  port:
                    default: 6379
                    description: >-
                      An integer representing a port number between 0 and 65535,
                      inclusive.
                    maximum: 65535
                    minimum: 0
                    type: integer
                type: object
              type: array
            session_redis_connect_timeout:
              description: Session redis connection timeout in milliseconds.
              type: integer
            session_redis_host:
              default: 127.0.0.1
              description: The Redis host.
              type: string
            session_redis_password:
              description: >-
                Password to use for Redis connection when the `redis` session
                storage is defined. If undefined, no AUTH commands are sent to
                Redis.
              type: string
            session_redis_port:
              default: 6379
              description: The Redis port.
              maximum: 65535
              minimum: 0
              type: integer
            session_redis_prefix:
              description: The Redis session key prefix.
              type: string
            session_redis_read_timeout:
              description: Session redis read timeout in milliseconds.
              type: integer
            session_redis_send_timeout:
              description: Session redis send timeout in milliseconds.
              type: integer
            session_redis_server_name:
              description: The SNI used for connecting the Redis server.
              type: string
            session_redis_socket:
              description: The Redis unix socket path.
              type: string
            session_redis_ssl:
              default: false
              description: Use SSL/TLS for Redis connection.
              type: boolean
            session_redis_ssl_verify:
              default: false
              description: Verify identity provider server certificate.
              type: boolean
            session_redis_username:
              description: >-
                Username to use for Redis connection when the `redis` session
                storage is defined and ACL authentication is desired. If
                undefined, ACL authentication will not be performed. This
                requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you
                can set it to `default`.
              type: string
            session_remember:
              default: false
              description: Enables or disables persistent sessions.
              type: boolean
            session_remember_absolute_timeout:
              default: 2592000
              description: >-
                Limits how long the persistent session can be renewed in
                seconds, until re-authentication is required. 0 disables the
                checks.
              type: number
            session_remember_cookie_name:
              default: remember
              description: >-
                Persistent session cookie name. Use with the `remember`
                configuration parameter.
              type: string
            session_remember_rolling_timeout:
              default: 604800
              description: >-
                Specifies how long the persistent session is considered valid in
                seconds. 0 disables the checks and rolling.
              type: number
            session_request_headers:
              description: >-
                Set of headers to send to upstream, use id, audience, subject,
                timeout, idling-timeout, rolling-timeout, absolute-timeout. E.g.
                `[ "id", "timeout" ]` will set Session-Id and Session-Timeout
                request headers.
              items:
                enum:
                  - id
                  - audience
                  - subject
                  - timeout
                  - idling-timeout
                  - rolling-timeout
                  - absolute-timeout
                type: string
              type: array
            session_response_headers:
              description: >-
                Set of headers to send to downstream, use id, audience, subject,
                timeout, idling-timeout, rolling-timeout, absolute-timeout. E.g.
                `[ "id", "timeout" ]` will set Session-Id and Session-Timeout
                response headers.
              items:
                enum:
                  - id
                  - audience
                  - subject
                  - timeout
                  - idling-timeout
                  - rolling-timeout
                  - absolute-timeout
                type: string
              type: array
            session_rolling_timeout:
              default: 3600
              description: >-
                Specifies how long the session can be used in seconds until it
                needs to be renewed. 0 disables the checks and rolling.
              type: number
            session_secret:
              description: The session secret.
              type: string
            session_storage:
              default: cookie
              description: >-
                The session storage for session data: - `cookie`: stores session
                data with the session cookie (the session cannot be invalidated
                or revoked without changing session secret, but is stateless,
                and doesn't require a database) - `memcache`: stores session
                data in memcached - `redis`: stores session data in Redis.
              enum:
                - cookie
                - memcache
                - memcached
                - redis
              type: string
            session_store_metadata:
              default: false
              description: >-
                Configures whether or not session metadata should be stored.
                This metadata includes information about the active sessions for
                a specific audience belonging to a specific subject.
              type: boolean
            ssl_verify:
              default: false
              description: >-
                Verify identity provider server certificate. If set to `true`,
                the plugin uses the CA certificate set in the `kong.conf` config
                parameter `lua_ssl_trusted_certificate`.
              type: boolean
            timeout:
              default: 10000
              description: Network IO timeout in milliseconds.
              type: number
            tls_client_auth_cert_id:
              description: >-
                ID of the Certificate entity representing the client certificate
                to use for mTLS client authentication for connections between
                Kong and the Auth Server.
              type: string
              uuid: true
            tls_client_auth_ssl_verify:
              default: true
              description: >-
                Verify identity provider server certificate during mTLS client
                authentication.
              type: boolean
            token_cache_key_include_scope:
              default: false
              description: >-
                Include the scope in the token cache key, so token with
                different scopes are considered diffrent tokens.
              type: boolean
            token_endpoint:
              description: >-
                The token endpoint. If set it overrides the value in
                `token_endpoint` returned by the discovery endpoint.
              type: string
            token_endpoint_auth_method:
              description: >-
                The token endpoint authentication method: `client_secret_basic`,
                `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
                `tls_client_auth`, `self_signed_tls_client_auth`, or `none`: do
                not authenticate
              enum:
                - client_secret_basic
                - client_secret_post
                - client_secret_jwt
                - private_key_jwt
                - tls_client_auth
                - self_signed_tls_client_auth
                - none
              type: string
            token_exchange_endpoint:
              description: The token exchange endpoint.
              type: string
            token_headers_client:
              description: Extra headers passed from the client to the token endpoint.
              items:
                type: string
              type: array
            token_headers_grants:
              description: >-
                Enable the sending of the token endpoint response headers only
                with certain grants: - `password`: with OAuth password grant -
                `client_credentials`: with OAuth client credentials grant -
                `authorization_code`: with authorization code flow -
                `refresh_token` with refresh token grant.
              items:
                enum:
                  - password
                  - client_credentials
                  - authorization_code
                  - refresh_token
                type: string
              type: array
            token_headers_names:
              description: Extra header names passed to the token endpoint.
              items:
                type: string
              type: array
            token_headers_prefix:
              description: >-
                Add a prefix to the token endpoint response headers before
                forwarding them to the downstream client.
              type: string
            token_headers_replay:
              description: >-
                The names of token endpoint response headers to forward to the
                downstream client.
              items:
                type: string
              type: array
            token_headers_values:
              description: Extra header values passed to the token endpoint.
              items:
                type: string
              type: array
            token_post_args_client:
              description: >-
                Pass extra arguments from the client to the OpenID-Connect
                plugin. If arguments exist, the client can pass them using: -
                Query parameters - Request Body - Request Header  This parameter
                can be used with `scope` values, like this: 
                `config.token_post_args_client=scope`  In this case, the token
                would take the `scope` value from the query parameter or from
                the request body or from the header and send it to the token
                endpoint.
              items:
                type: string
              type: array
            token_post_args_names:
              description: Extra post argument names passed to the token endpoint.
              items:
                type: string
              type: array
            token_post_args_values:
              description: Extra post argument values passed to the token endpoint.
              items:
                type: string
              type: array
            unauthorized_destroy_session:
              default: true
              description: Destroy any active session for the unauthorized requests.
              type: boolean
            unauthorized_error_message:
              default: Unauthorized
              description: >-
                The error message for the unauthorized requests (when not using
                the redirection).
              type: string
            unauthorized_redirect_uri:
              description: Where to redirect the client on unauthorized requests.
              items:
                description: >-
                  A string representing a URL, such as
                  https://example.com/path/to/resource?q=search.
                type: string
              type: array
            unexpected_redirect_uri:
              description: >-
                Where to redirect the client when unexpected errors happen with
                the requests.
              items:
                description: >-
                  A string representing a URL, such as
                  https://example.com/path/to/resource?q=search.
                type: string
              type: array
            upstream_access_token_header:
              default: authorization:bearer
              description: The upstream access token header.
              type: string
            upstream_access_token_jwk_header:
              description: The upstream access token JWK header.
              type: string
            upstream_headers_claims:
              description: >-
                The upstream header claims. If multiple values are set, it means
                the claim is inside a nested object of the token payload.
              items:
                type: string
              type: array
            upstream_headers_names:
              description: The upstream header names for the claim values.
              items:
                type: string
              type: array
            upstream_id_token_header:
              description: The upstream id token header.
              type: string
            upstream_id_token_jwk_header:
              description: The upstream id token JWK header.
              type: string
            upstream_introspection_header:
              description: The upstream introspection header.
              type: string
            upstream_introspection_jwt_header:
              description: The upstream introspection JWT header.
              type: string
            upstream_refresh_token_header:
              description: The upstream refresh token header.
              type: string
            upstream_session_id_header:
              description: The upstream session id header.
              type: string
            upstream_user_info_header:
              description: The upstream user info header.
              type: string
            upstream_user_info_jwt_header:
              description: >-
                The upstream user info JWT header (in case the user info returns
                a JWT response).
              type: string
            userinfo_accept:
              default: application/json
              description: >-
                The value of `Accept` header for user info requests: -
                `application/json`: user info response as JSON -
                `application/jwt`: user info response as JWT (from the obsolete
                IETF draft document).
              enum:
                - application/json
                - application/jwt
              type: string
            userinfo_endpoint:
              description: >-
                The user info endpoint. If set it overrides the value in
                `userinfo_endpoint` returned by the discovery endpoint.
              type: string
            userinfo_headers_client:
              description: Extra headers passed from the client to the user info endpoint.
              items:
                type: string
              type: array
            userinfo_headers_names:
              description: Extra header names passed to the user info endpoint.
              items:
                type: string
              type: array
            userinfo_headers_values:
              description: Extra header values passed to the user info endpoint.
              items:
                type: string
              type: array
            userinfo_query_args_client:
              description: >-
                Extra query arguments passed from the client to the user info
                endpoint.
              items:
                type: string
              type: array
            userinfo_query_args_names:
              description: Extra query argument names passed to the user info endpoint.
              items:
                type: string
              type: array
            userinfo_query_args_values:
              description: Extra query argument values passed to the user info endpoint.
              items:
                type: string
              type: array
            using_pseudo_issuer:
              default: false
              description: >-
                If the plugin uses a pseudo issuer. When set to true, the plugin
                will not discover the configuration from the issuer URL
                specified with `config.issuer`.
              type: boolean
            verify_claims:
              default: true
              description: Verify tokens for standard claims.
              type: boolean
            verify_nonce:
              default: true
              description: Verify nonce on authorization code flow.
              type: boolean
            verify_parameters:
              default: false
              description: Verify plugin configuration against discovery.
              type: boolean
            verify_signature:
              default: true
              description: Verify signature of tokens.
              type: boolean
          shorthand_fields:
            authorization_cookie_httponly:
              type: boolean
            authorization_cookie_lifetime:
              type: number
            authorization_cookie_samesite:
              type: string
            session_compressor:
              type: string
            session_cookie_httponly:
              type: boolean
            session_cookie_idletime:
              type: number
            session_cookie_lifetime:
              type: number
            session_cookie_maxsize:
              type: integer
            session_cookie_renew:
              type: number
            session_cookie_samesite:
              type: string
            session_memcache_host:
              type: string
            session_memcache_port:
              type: integer
            session_memcache_prefix:
              type: string
            session_memcache_socket:
              type: string
            session_redis_cluster_maxredirections:
              type: integer
            session_strategy:
              type: string
          type: object
        name:
          const: openid-connect
          type: string
    OpentelemetryPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/OpentelemetryPluginConfig'
      x-speakeasy-entity: GatewayPluginOpentelemetry
    OpentelemetryPluginConfig:
      properties:
        config:
          properties:
            batch_flush_delay:
              description: The delay, in seconds, between two consecutive batches.
              type: integer
            batch_span_count:
              description: The number of spans to be sent in a single batch.
              type: integer
            connect_timeout:
              default: 1000
              description: >-
                An integer representing a timeout in milliseconds. Must be
                between 0 and 2^31-2.
              maximum: 2147483646
              minimum: 0
              type: integer
            endpoint:
              description: >-
                A string representing a URL, such as
                https://example.com/path/to/resource?q=search.
              type: string
            header_type:
              default: preserve
              enum:
                - preserve
                - ignore
                - b3
                - b3-single
                - w3c
                - jaeger
                - ot
                - aws
                - gcp
                - datadog
              type: string
            headers:
              additionalProperties: true
              description: >-
                The custom headers to be added in the HTTP request sent to the
                OTLP server. This setting is useful for adding the
                authentication headers (token) for the APM backend.
              type: object
            http_response_header_for_traceid:
              type: string
            propagation:
              default:
                default_format: w3c
              properties:
                clear:
                  description: >-
                    Header names to clear after context extraction. This allows
                    to extract the context from a certain header and then remove
                    it from the request, useful when extraction and injection
                    are performed on different header formats and the original
                    header should not be sent to the upstream. If left empty, no
                    headers are cleared.
                  items:
                    type: string
                  type: array
                default_format:
                  description: >-
                    The default header format to use when extractors did not
                    match any format in the incoming headers and `inject` is
                    configured with the value: `preserve`. This can happen when
                    no tracing header was found in the request, or the incoming
                    tracing header formats were not included in `extract`.
                  enum:
                    - b3
                    - gcp
                    - b3-single
                    - jaeger
                    - aws
                    - ot
                    - w3c
                    - datadog
                  type: string
                extract:
                  description: >-
                    Header formats used to extract tracing context from incoming
                    requests. If multiple values are specified, the first one
                    found will be used for extraction. If left empty, Kong will
                    not extract any tracing context information from incoming
                    requests and generate a trace with no parent and a new trace
                    ID.
                  items:
                    enum:
                      - b3
                      - gcp
                      - jaeger
                      - aws
                      - ot
                      - w3c
                      - datadog
                    type: string
                  type: array
                inject:
                  description: >-
                    Header formats used to inject tracing context. The value
                    `preserve` will use the same header format as the incoming
                    request. If multiple values are specified, all of them will
                    be used during injection. If left empty, Kong will not
                    inject any tracing context information in outgoing requests.
                  items:
                    enum:
                      - preserve
                      - b3
                      - gcp
                      - b3-single
                      - jaeger
                      - aws
                      - ot
                      - w3c
                      - datadog
                    type: string
                  type: array
              required:
                - default_format
              type: object
            queue:
              default:
                max_batch_size: 200
              properties:
                initial_retry_delay:
                  default: 0.01
                  description: >-
                    Time in seconds before the initial retry is made for a
                    failing batch.
                  maximum: 1000000
                  minimum: 0.001
                  type: number
                max_batch_size:
                  default: 1
                  description: Maximum number of entries that can be processed at a time.
                  maximum: 1000000
                  minimum: 1
                  type: integer
                max_bytes:
                  description: >-
                    Maximum number of bytes that can be waiting on a queue,
                    requires string content.
                  type: integer
                max_coalescing_delay:
                  default: 1
                  description: >-
                    Maximum number of (fractional) seconds to elapse after the
                    first entry was queued before the queue starts calling the
                    handler.
                  maximum: 3600
                  minimum: 0
                  type: number
                max_entries:
                  default: 10000
                  description: Maximum number of entries that can be waiting on the queue.
                  maximum: 1000000
                  minimum: 1
                  type: integer
                max_retry_delay:
                  default: 60
                  description: >-
                    Maximum time in seconds between retries, caps exponential
                    backoff.
                  maximum: 1000000
                  minimum: 0.001
                  type: number
                max_retry_time:
                  default: 60
                  description: >-
                    Time in seconds before the queue gives up calling a failed
                    handler for a batch.
                  type: number
              type: object
            read_timeout:
              default: 5000
              description: >-
                An integer representing a timeout in milliseconds. Must be
                between 0 and 2^31-2.
              maximum: 2147483646
              minimum: 0
              type: integer
            resource_attributes:
              additionalProperties: true
              type: object
            sampling_rate:
              description: >-
                Tracing sampling rate for configuring the probability-based
                sampler. When set, this value supersedes the global
                `tracing_sampling_rate` setting from kong.conf.
              maximum: 1
              minimum: 0
              type: number
            send_timeout:
              default: 5000
              description: >-
                An integer representing a timeout in milliseconds. Must be
                between 0 and 2^31-2.
              maximum: 2147483646
              minimum: 0
              type: integer
          type: object
        name:
          const: opentelemetry
          type: string
    Plugin:
      allOf:
        - $ref: '#/components/schemas/PluginWithoutParents'
        - properties:
            consumer:
              additionalProperties: false
              description: >-
                If set, the plugin will activate only for requests where the
                specified has been authenticated. (Note that some plugins can
                not be restricted to consumers this way.). Leave unset for the
                plugin to activate regardless of the authenticated Consumer.
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
            consumer_group:
              additionalProperties: false
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
            route:
              additionalProperties: false
              description: >-
                If set, the plugin will only activate when receiving requests
                via the specified route. Leave unset for the plugin to activate
                regardless of the Route being used.
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
            service:
              additionalProperties: false
              description: >-
                If set, the plugin will only activate when receiving requests
                via one of the routes belonging to the specified Service. Leave
                unset for the plugin to activate regardless of the Service being
                matched.
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          type: object
    PluginWithoutParents:
      properties:
        config:
          additionalProperties: true
          description: >-
            The configuration properties for the Plugin which can be found on
            the plugins documentation page in the [Kong
            Hub](https://docs.konghq.com/hub/).
          type: object
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        enabled:
          default: true
          description: Whether the plugin is applied.
          type: boolean
        id:
          readOnly: true
          type: string
        instance_name:
          type: string
        name:
          description: >-
            The name of the Plugin that's going to be added. Currently, the
            Plugin must be installed in every Kong instance separately.
          type: string
        protocols:
          default:
            - grpc
            - grpcs
            - http
            - https
          description: >-
            A list of the request protocols that will trigger this plugin. The
            default value, as well as the possible values allowed on this field,
            may change depending on the plugin type. For example, plugins that
            only work in stream mode will only support `"tcp"` and `"tls"`.
          items:
            enum:
              - grpc
              - grpcs
              - http
              - https
              - tcp
              - tls
              - tls_passthrough
              - udp
              - ws
              - wss
            type: string
          type: array
        tags:
          description: >-
            An optional set of strings associated with the Plugin for grouping
            and filtering.
          items:
            type: string
          type: array
        updated_at:
          description: Unix epoch when the resource was last updated.
          readOnly: true
          type: integer
      type: object
    PreFunctionPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/PreFunctionPluginConfig'
      x-speakeasy-entity: GatewayPluginPreFunction
    PreFunctionPluginConfig:
      properties:
        config:
          properties:
            access:
              default: []
              items:
                type: string
              type: array
            body_filter:
              default: []
              items:
                type: string
              type: array
            certificate:
              default: []
              items:
                type: string
              type: array
            header_filter:
              default: []
              items:
                type: string
              type: array
            log:
              default: []
              items:
                type: string
              type: array
            rewrite:
              default: []
              items:
                type: string
              type: array
            ws_client_frame:
              default: []
              items:
                type: string
              type: array
            ws_close:
              default: []
              items:
                type: string
              type: array
            ws_handshake:
              default: []
              items:
                type: string
              type: array
            ws_upstream_frame:
              default: []
              items:
                type: string
              type: array
          type: object
        name:
          const: pre-function
          type: string
    PrometheusPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/PrometheusPluginConfig'
      x-speakeasy-entity: GatewayPluginPrometheus
    PrometheusPluginConfig:
      properties:
        config:
          properties:
            bandwidth_metrics:
              default: false
              description: >-
                A boolean value that determines if bandwidth metrics should be
                collected. If enabled, `bandwidth_bytes` and
                `stream_sessions_total` metrics will be exported.
              type: boolean
            latency_metrics:
              default: false
              description: >-
                A boolean value that determines if latency metrics should be
                collected. If enabled, `kong_latency_ms`, `upstream_latency_ms`
                and `request_latency_ms` metrics will be exported.
              type: boolean
            per_consumer:
              default: false
              description: >-
                A boolean value that determines if per-consumer metrics should
                be collected. If enabled, the `kong_http_requests_total` and
                `kong_bandwidth_bytes` metrics fill in the consumer label when
                available.
              type: boolean
            status_code_metrics:
              default: false
              description: >-
                A boolean value that determines if status code metrics should be
                collected. If enabled, `http_requests_total`,
                `stream_sessions_total` metrics will be exported.
              type: boolean
            upstream_health_metrics:
              default: false
              description: >-
                A boolean value that determines if upstream metrics should be
                collected. If enabled, `upstream_target_health` metric will be
                exported.
              type: boolean
          type: object
        name:
          const: prometheus
          type: string
    ProxyCachePlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/ProxyCachePluginConfig'
      x-speakeasy-entity: GatewayPluginProxyCache
    ProxyCachePluginConfig:
      properties:
        config:
          properties:
            cache_control:
              default: false
              description: >-
                When enabled, respect the Cache-Control behaviors defined in
                RFC7234.
              type: boolean
            cache_ttl:
              default: 300
              description: TTL, in seconds, of cache entities.
              minimum: 0
              type: integer
            content_type:
              default:
                - text/plain
                - application/json
              description: >-
                Upstream response content types considered cacheable. The plugin
                performs an **exact match** against each specified value.
              items:
                type: string
              type: array
            ignore_uri_case:
              default: false
              type: boolean
            memory:
              properties:
                dictionary_name:
                  default: kong_db_cache
                  description: >-
                    The name of the shared dictionary in which to hold cache
                    entities when the memory strategy is selected. Note that
                    this dictionary currently must be defined manually in the
                    Kong Nginx template.
                  type: string
              type: object
            request_method:
              default:
                - GET
                - HEAD
              description: Downstream request methods considered cacheable.
              items:
                enum:
                  - HEAD
                  - GET
                  - POST
                  - PATCH
                  - PUT
                type: string
              type: array
            response_code:
              default:
                - 200
                - 301
                - 404
              description: Upstream response status code considered cacheable.
              items:
                maximum: 900
                minimum: 100
                type: integer
              minLength: 1
              type: array
            response_headers:
              description: >-
                Caching related diagnostic headers that should be included in
                cached responses
              properties:
                X-Cache-Key:
                  default: true
                  type: boolean
                X-Cache-Status:
                  default: true
                  type: boolean
                age:
                  default: true
                  type: boolean
              type: object
            storage_ttl:
              description: >-
                Number of seconds to keep resources in the storage backend. This
                value is independent of `cache_ttl` or resource TTLs defined by
                Cache-Control behaviors.
              type: integer
            strategy:
              description: The backing data store in which to hold cache entities.
              enum:
                - memory
              type: string
            vary_headers:
              description: >-
                Relevant headers considered for the cache key. If undefined,
                none of the headers are taken into consideration.
              items:
                type: string
              type: array
            vary_query_params:
              description: >-
                Relevant query parameters considered for the cache key. If
                undefined, all params are taken into consideration.
              items:
                type: string
              type: array
          type: object
        name:
          const: proxy-cache
          type: string
    RateLimitingAdvancedPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/RateLimitingAdvancedPluginConfig'
      x-speakeasy-entity: GatewayPluginRateLimitingAdvanced
    RateLimitingAdvancedPluginConfig:
      properties:
        config:
          properties:
            consumer_groups:
              description: >-
                List of consumer groups allowed to override the rate limiting
                settings for the given Route or Service. Required if
                `enforce_consumer_groups` is set to `true`.
              items:
                type: string
              type: array
            dictionary_name:
              default: kong_rate_limiting_counters
              description: >-
                The shared dictionary where counters are stored. When the plugin
                is configured to synchronize counter data externally (that is
                `config.strategy` is `cluster` or `redis` and `config.sync_rate`
                isn't `-1`), this dictionary serves as a buffer to populate
                counters in the data store on each synchronization cycle.
              type: string
            disable_penalty:
              default: false
              description: >-
                If set to `true`, this doesn't count denied requests (status =
                `429`). If set to `false`, all requests, including denied ones,
                are counted. This parameter only affects the `sliding`
                window_type.
              type: boolean
            enforce_consumer_groups:
              default: false
              description: >-
                Determines if consumer groups are allowed to override the rate
                limiting settings for the given Route or Service. Flipping
                `enforce_consumer_groups` from `true` to `false` disables the
                group override, but does not clear the list of consumer groups.
                You can then flip `enforce_consumer_groups` to `true` to
                re-enforce the groups.
              type: boolean
            error_code:
              default: 429
              description: >-
                Set a custom error code to return when the rate limit is
                exceeded.
              minimum: 0
              type: number
            error_message:
              default: API rate limit exceeded
              description: >-
                Set a custom error message to return when the rate limit is
                exceeded.
              type: string
            header_name:
              description: A string representing an HTTP header name.
              type: string
            hide_client_headers:
              default: false
              description: >-
                Optionally hide informative response headers that would
                otherwise provide information about the current status of limits
                and counters.
              type: boolean
            identifier:
              default: consumer
              description: >-
                The type of identifier used to generate the rate limit key.
                Defines the scope used to increment the rate limiting counters.
                Can be `ip`, `credential`, `consumer`, `service`, `header`,
                `path` or `consumer-group`.
              enum:
                - ip
                - credential
                - consumer
                - service
                - header
                - path
                - consumer-group
              type: string
            limit:
              description: >-
                One or more requests-per-window limits to apply. There must be a
                matching number of window limits and sizes specified.
              items:
                type: number
              type: array
            namespace:
              description: >-
                The rate limiting library namespace to use for this plugin
                instance. Counter data and sync configuration is isolated in
                each namespace. NOTE: For the plugin instances sharing the same
                namespace, all the configurations that are required for
                synchronizing counters, e.g. `strategy`, `redis`, `sync_rate`,
                `window_size`, `dictionary_name`, need to be the same.
              type: string
            path:
              description: >-
                A string representing a URL path, such as /path/to/resource.
                Must start with a forward slash (/) and must not contain empty
                segments (i.e., two consecutive forward slashes).
              type: string
            redis:
              properties:
                cluster_addresses:
                  description: >-
                    Cluster addresses to use for Redis connections when the
                    `redis` strategy is defined. Defining this value implies
                    using Redis Cluster. Each string element must be a hostname.
                    The minimum length of the array is 1 element.
                  items:
                    type: string
                  minLength: 1
                  type: array
                connect_timeout:
                  description: >-
                    An integer representing a timeout in milliseconds. Must be
                    between 0 and 2^31-2.
                  maximum: 2147483646
                  minimum: 0
                  type: integer
                database:
                  default: 0
                  description: >-
                    Database to use for the Redis connection when using the
                    `redis` strategy
                  type: integer
                host:
                  description: A string representing a host name, such as example.com.
                  type: string
                keepalive_backlog:
                  description: >-
                    Limits the total number of opened connections for a pool. If
                    the connection pool is full, connection queues above the
                    limit go into the backlog queue. If the backlog queue is
                    full, subsequent connect operations fail and return `nil`.
                    Queued operations (subject to set timeouts) resume once the
                    number of connections in the pool is less than
                    `keepalive_pool_size`. If latency is high or throughput is
                    low, try increasing this value. Empirically, this value is
                    larger than `keepalive_pool_size`.
                  maximum: 2147483646
                  minimum: 0
                  type: integer
                keepalive_pool_size:
                  default: 256
                  description: >-
                    The size limit for every cosocket connection pool associated
                    with every remote server, per worker process. If neither
                    `keepalive_pool_size` nor `keepalive_backlog` is specified,
                    no pool is created. If `keepalive_pool_size` isn't specified
                    but `keepalive_backlog` is specified, then the pool uses the
                    default value. Try to increase (e.g. 512) this value if
                    latency is high or throughput is low.
                  maximum: 2147483646
                  minimum: 1
                  type: integer
                password:
                  description: >-
                    Password to use for Redis connections. If undefined, no AUTH
                    commands are sent to Redis.
                  type: string
                port:
                  description: >-
                    An integer representing a port number between 0 and 65535,
                    inclusive.
                  maximum: 65535
                  minimum: 0
                  type: integer
                read_timeout:
                  description: >-
                    An integer representing a timeout in milliseconds. Must be
                    between 0 and 2^31-2.
                  maximum: 2147483646
                  minimum: 0
                  type: integer
                send_timeout:
                  description: >-
                    An integer representing a timeout in milliseconds. Must be
                    between 0 and 2^31-2.
                  maximum: 2147483646
                  minimum: 0
                  type: integer
                sentinel_addresses:
                  description: >-
                    Sentinel addresses to use for Redis connections when the
                    `redis` strategy is defined. Defining this value implies
                    using Redis Sentinel. Each string element must be a
                    hostname. The minimum length of the array is 1 element.
                  items:
                    type: string
                  minLength: 1
                  type: array
                sentinel_master:
                  description: >-
                    Sentinel master to use for Redis connections. Defining this
                    value implies using Redis Sentinel.
                  type: string
                sentinel_password:
                  description: >-
                    Sentinel password to authenticate with a Redis Sentinel
                    instance. If undefined, no AUTH commands are sent to Redis
                    Sentinels.
                  type: string
                sentinel_role:
                  description: >-
                    Sentinel role to use for Redis connections when the `redis`
                    strategy is defined. Defining this value implies using Redis
                    Sentinel.
                  enum:
                    - master
                    - slave
                    - any
                  type: string
                sentinel_username:
                  description: >-
                    Sentinel username to authenticate with a Redis Sentinel
                    instance. If undefined, ACL authentication won't be
                    performed. This requires Redis v6.2.0+.
                  type: string
                server_name:
                  description: >-
                    A string representing an SNI (server name indication) value
                    for TLS.
                  type: string
                ssl:
                  default: false
                  description: If set to true, uses SSL to connect to Redis.
                  type: boolean
                ssl_verify:
                  default: false
                  description: >-
                    If set to true, verifies the validity of the server SSL
                    certificate. If setting this parameter, also configure
                    `lua_ssl_trusted_certificate` in `kong.conf` to specify the
                    CA (or server) certificate used by your Redis server. You
                    may also need to configure `lua_ssl_verify_depth`
                    accordingly.
                  type: boolean
                timeout:
                  default: 2000
                  description: >-
                    An integer representing a timeout in milliseconds. Must be
                    between 0 and 2^31-2.
                  maximum: 2147483646
                  minimum: 0
                  type: integer
                username:
                  description: >-
                    Username to use for Redis connections. If undefined, ACL
                    authentication won't be performed. This requires Redis
                    v6.0.0+. To be compatible with Redis v5.x.y, you can set it
                    to `default`.
                  type: string
              type: object
            retry_after_jitter_max:
              default: 0
              description: >-
                The upper bound of a jitter (random delay) in seconds to be
                added to the `Retry-After` header of denied requests (status =
                `429`) in order to prevent all the clients from coming back at
                the same time. The lower bound of the jitter is `0`; in this
                case, the `Retry-After` header is equal to the `RateLimit-Reset`
                header.
              type: number
            strategy:
              default: local
              description: >-
                The rate-limiting strategy to use for retrieving and
                incrementing the limits. Available values are: `local` and
                `cluster`.
              enum:
                - cluster
                - redis
                - local
              type: string
            sync_rate:
              description: >-
                How often to sync counter data to the central data store. A
                value of 0 results in synchronous behavior; a value of -1
                ignores sync behavior entirely and only stores counters in node
                memory. A value greater than 0 will sync the counters in the
                specified number of seconds. The minimum allowed interval is
                0.02 seconds (20ms).
              type: number
            window_size:
              description: >-
                One or more window sizes to apply a limit to (defined in
                seconds). There must be a matching number of window limits and
                sizes specified.
              items:
                type: number
              type: array
            window_type:
              default: sliding
              description: >-
                Sets the time window type to either `sliding` (default) or
                `fixed`. Sliding windows apply the rate limiting logic while
                taking into account previous hit rates (from the window that
                immediately precedes the current) using a dynamic weight. Fixed
                windows consist of buckets that are statically assigned to a
                definitive time range, each request is mapped to only one fixed
                window based on its timestamp and will affect only that window's
                counters.
              enum:
                - fixed
                - sliding
              type: string
          type: object
        name:
          const: rate-limiting-advanced
          type: string
    RateLimitingPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/RateLimitingPluginConfig'
      x-speakeasy-entity: GatewayPluginRateLimiting
    RateLimitingPluginConfig:
      properties:
        config:
          properties:
            day:
              description: The number of HTTP requests that can be made per day.
              minimum: 0
              type: number
            error_code:
              default: 429
              description: >-
                Set a custom error code to return when the rate limit is
                exceeded.
              minimum: 0
              type: number
            error_message:
              default: API rate limit exceeded
              description: >-
                Set a custom error message to return when the rate limit is
                exceeded.
              type: string
            fault_tolerant:
              default: true
              description: >-
                A boolean value that determines if the requests should be
                proxied even if Kong has troubles connecting a third-party data
                store. If `true`, requests will be proxied anyway, effectively
                disabling the rate-limiting function until the data store is
                working again. If `false`, then the clients will see `500`
                errors.
              type: boolean
            header_name:
              description: A string representing an HTTP header name.
              type: string
            hide_client_headers:
              default: false
              description: Optionally hide informative response headers.
              type: boolean
            hour:
              description: The number of HTTP requests that can be made per hour.
              minimum: 0
              type: number
            limit_by:
              default: consumer
              description: The entity that is used when aggregating the limits.
              enum:
                - consumer
                - credential
                - ip
                - service
                - header
                - path
                - consumer-group
              type: string
            minute:
              description: The number of HTTP requests that can be made per minute.
              minimum: 0
              type: number
            month:
              description: The number of HTTP requests that can be made per month.
              minimum: 0
              type: number
            path:
              description: >-
                A string representing a URL path, such as /path/to/resource.
                Must start with a forward slash (/) and must not contain empty
                segments (i.e., two consecutive forward slashes).
              type: string
            policy:
              default: local
              description: >-
                The rate-limiting policies to use for retrieving and
                incrementing the limits.
              enum:
                - local
                - cluster
                - redis
              type: string
            redis:
              description: Redis configuration
              properties:
                database:
                  default: 0
                  description: >-
                    Database to use for the Redis connection when using the
                    `redis` strategy
                  type: integer
                host:
                  description: A string representing a host name, such as example.com.
                  type: string
                password:
                  description: >-
                    Password to use for Redis connections. If undefined, no AUTH
                    commands are sent to Redis.
                  type: string
                port:
                  default: 6379
                  description: >-
                    An integer representing a port number between 0 and 65535,
                    inclusive.
                  maximum: 65535
                  minimum: 0
                  type: integer
                server_name:
                  description: >-
                    A string representing an SNI (server name indication) value
                    for TLS.
                  type: string
                ssl:
                  default: false
                  description: If set to true, uses SSL to connect to Redis.
                  type: boolean
                ssl_verify:
                  default: false
                  description: >-
                    If set to true, verifies the validity of the server SSL
                    certificate. If setting this parameter, also configure
                    `lua_ssl_trusted_certificate` in `kong.conf` to specify the
                    CA (or server) certificate used by your Redis server. You
                    may also need to configure `lua_ssl_verify_depth`
                    accordingly.
                  type: boolean
                timeout:
                  default: 2000
                  description: >-
                    An integer representing a timeout in milliseconds. Must be
                    between 0 and 2^31-2.
                  maximum: 2147483646
                  minimum: 0
                  type: integer
                username:
                  description: >-
                    Username to use for Redis connections. If undefined, ACL
                    authentication won't be performed. This requires Redis
                    v6.0.0+. To be compatible with Redis v5.x.y, you can set it
                    to `default`.
                  type: string
              type: object
            second:
              description: The number of HTTP requests that can be made per second.
              minimum: 0
              type: number
            sync_rate:
              default: -1
              description: >-
                How often to sync counter data to the central data store. A
                value of -1 results in synchronous behavior.
              type: number
            year:
              description: The number of HTTP requests that can be made per year.
              minimum: 0
              type: number
          shorthand_fields:
            redis_database:
              translate_backwards:
                - redis
                - database
              type: integer
            redis_host:
              translate_backwards:
                - redis
                - host
              type: string
            redis_password:
              minLength: 0
              translate_backwards:
                - redis
                - password
              type: string
            redis_port:
              translate_backwards:
                - redis
                - port
              type: integer
            redis_server_name:
              translate_backwards:
                - redis
                - server_name
              type: string
            redis_ssl:
              translate_backwards:
                - redis
                - ssl
              type: boolean
            redis_ssl_verify:
              translate_backwards:
                - redis
                - ssl_verify
              type: boolean
            redis_timeout:
              translate_backwards:
                - redis
                - timeout
              type: integer
            redis_username:
              translate_backwards:
                - redis
                - username
              type: string
          type: object
        name:
          const: rate-limiting
          type: string
    RequestTerminationPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/RequestTerminationPluginConfig'
      x-speakeasy-entity: GatewayPluginRequestTermination
    RequestTerminationPluginConfig:
      properties:
        config:
          properties:
            body:
              description: >-
                The raw response body to send. This is mutually exclusive with
                the `config.message` field.
              type: string
            content_type:
              description: Content type of the raw response configured with `config.body`.
              type: string
            echo:
              default: false
              description: >-
                When set, the plugin will echo a copy of the request back to the
                client. The main usecase for this is debugging. It can be
                combined with `trigger` in order to debug requests on live
                systems without disturbing real traffic.
              type: boolean
            message:
              description: The message to send, if using the default response generator.
              type: string
            status_code:
              default: 503
              description: >-
                The response code to send. Must be an integer between 100 and
                599.
              maximum: 599
              minimum: 100
              type: integer
            trigger:
              description: A string representing an HTTP header name.
              type: string
          type: object
        name:
          const: request-termination
          type: string
    RequestTransformerAdvancedPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/RequestTransformerAdvancedPluginConfig'
      x-speakeasy-entity: GatewayPluginRequestTransformerAdvanced
    RequestTransformerAdvancedPluginConfig:
      properties:
        config:
          properties:
            add:
              properties:
                body:
                  default: []
                  items:
                    type: string
                  type: array
                headers:
                  default: []
                  items:
                    type: string
                  type: array
                json_types:
                  default: []
                  items:
                    enum:
                      - boolean
                      - number
                      - string
                    type: string
                  type: array
                querystring:
                  default: []
                  items:
                    type: string
                  type: array
              type: object
            allow:
              properties:
                body:
                  items:
                    type: string
                  type: array
              type: object
            append:
              properties:
                body:
                  default: []
                  items:
                    type: string
                  type: array
                headers:
                  default: []
                  items:
                    type: string
                  type: array
                json_types:
                  default: []
                  items:
                    enum:
                      - boolean
                      - number
                      - string
                    type: string
                  type: array
                querystring:
                  default: []
                  items:
                    type: string
                  type: array
              type: object
            dots_in_keys:
              default: true
              description: >-
                Specify whether dots (for example, `customers.info.phone`)
                should be treated as part of a property name or used to descend
                into nested JSON objects.  See [Arrays and nested
                objects](#arrays-and-nested-objects).
              type: boolean
            http_method:
              description: >-
                A string representing an HTTP method, such as GET, POST, PUT, or
                DELETE. The string must contain only uppercase letters.
              pattern: ^%u+$
              type: string
            remove:
              properties:
                body:
                  default: []
                  items:
                    type: string
                  type: array
                headers:
                  default: []
                  items:
                    type: string
                  type: array
                querystring:
                  default: []
                  items:
                    type: string
                  type: array
              type: object
            rename:
              properties:
                body:
                  default: []
                  items:
                    type: string
                  type: array
                headers:
                  default: []
                  items:
                    type: string
                  type: array
                querystring:
                  default: []
                  items:
                    type: string
                  type: array
              type: object
            replace:
              properties:
                body:
                  default: []
                  items:
                    type: string
                  type: array
                headers:
                  default: []
                  items:
                    type: string
                  type: array
                json_types:
                  default: []
                  items:
                    enum:
                      - boolean
                      - number
                      - string
                    type: string
                  type: array
                querystring:
                  default: []
                  items:
                    type: string
                  type: array
                uri:
                  type: string
              type: object
          type: object
        name:
          const: request-transformer-advanced
          type: string
    RequestTransformerPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/RequestTransformerPluginConfig'
      x-speakeasy-entity: GatewayPluginRequestTransformer
    RequestTransformerPluginConfig:
      properties:
        config:
          properties:
            add:
              properties:
                body:
                  default: []
                  items:
                    type: string
                  type: array
                headers:
                  default: []
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  type: array
                querystring:
                  default: []
                  items:
                    type: string
                  type: array
              type: object
            append:
              properties:
                body:
                  default: []
                  items:
                    type: string
                  type: array
                headers:
                  default: []
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  type: array
                querystring:
                  default: []
                  items:
                    type: string
                  type: array
              type: object
            http_method:
              description: >-
                A string representing an HTTP method, such as GET, POST, PUT, or
                DELETE. The string must contain only uppercase letters.
              pattern: ^%u+$
              type: string
            remove:
              properties:
                body:
                  default: []
                  items:
                    type: string
                  type: array
                headers:
                  default: []
                  items:
                    type: string
                  type: array
                querystring:
                  default: []
                  items:
                    type: string
                  type: array
              type: object
            rename:
              properties:
                body:
                  default: []
                  items:
                    type: string
                  type: array
                headers:
                  default: []
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  type: array
                querystring:
                  default: []
                  items:
                    type: string
                  type: array
              type: object
            replace:
              properties:
                body:
                  default: []
                  items:
                    type: string
                  type: array
                headers:
                  default: []
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  type: array
                querystring:
                  default: []
                  items:
                    type: string
                  type: array
                uri:
                  type: string
              type: object
          type: object
        name:
          const: request-transformer
          type: string
    ResponseTransformerAdvancedPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/ResponseTransformerAdvancedPluginConfig'
      x-speakeasy-entity: GatewayPluginResponseTransformerAdvanced
    ResponseTransformerAdvancedPluginConfig:
      properties:
        config:
          properties:
            add:
              properties:
                headers:
                  default: []
                  items:
                    type: string
                  type: array
                if_status:
                  default: []
                  items:
                    type: string
                  type: array
                json:
                  default: []
                  items:
                    type: string
                  type: array
                json_types:
                  default: []
                  items:
                    enum:
                      - boolean
                      - number
                      - string
                    type: string
                  type: array
              type: object
            allow:
              properties:
                json:
                  items:
                    type: string
                  type: array
              type: object
            append:
              properties:
                headers:
                  default: []
                  items:
                    type: string
                  type: array
                if_status:
                  default: []
                  items:
                    type: string
                  type: array
                json:
                  default: []
                  items:
                    type: string
                  type: array
                json_types:
                  default: []
                  items:
                    enum:
                      - boolean
                      - number
                      - string
                    type: string
                  type: array
              type: object
            dots_in_keys:
              default: true
              description: >-
                Whether dots (for example, `customers.info.phone`) should be
                treated as part of a property name or used to descend into
                nested JSON objects..
              type: boolean
            remove:
              properties:
                headers:
                  default: []
                  items:
                    type: string
                  type: array
                if_status:
                  default: []
                  items:
                    type: string
                  type: array
                json:
                  default: []
                  items:
                    type: string
                  type: array
              type: object
            rename:
              properties:
                headers:
                  default: []
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  type: array
                if_status:
                  default: []
                  items:
                    type: string
                  type: array
              type: object
            replace:
              properties:
                body:
                  description: String with which to replace the entire response body.
                  type: string
                headers:
                  default: []
                  items:
                    type: string
                  type: array
                if_status:
                  default: []
                  items:
                    type: string
                  type: array
                json:
                  default: []
                  items:
                    type: string
                  type: array
                json_types:
                  default: []
                  items:
                    enum:
                      - boolean
                      - number
                      - string
                    type: string
                  type: array
              type: object
            transform:
              properties:
                functions:
                  default: []
                  items:
                    type: string
                  type: array
                if_status:
                  default: []
                  items:
                    type: string
                  type: array
                json:
                  default: []
                  items:
                    type: string
                  type: array
              type: object
          type: object
        name:
          const: response-transformer-advanced
          type: string
    ResponseTransformerPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/ResponseTransformerPluginConfig'
      x-speakeasy-entity: GatewayPluginResponseTransformer
    ResponseTransformerPluginConfig:
      properties:
        config:
          properties:
            add:
              properties:
                headers:
                  default: []
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  type: array
                json:
                  default: []
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  type: array
                json_types:
                  default: []
                  description: >-
                    List of JSON type names. Specify the types of the JSON
                    values returned when appending

                    JSON properties. Each string element can be one of: boolean,
                    number, or string.
                  items:
                    enum:
                      - boolean
                      - number
                      - string
                    type: string
                  type: array
              type: object
            append:
              properties:
                headers:
                  default: []
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  type: array
                json:
                  default: []
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  type: array
                json_types:
                  default: []
                  description: >-
                    List of JSON type names. Specify the types of the JSON
                    values returned when appending

                    JSON properties. Each string element can be one of: boolean,
                    number, or string.
                  items:
                    enum:
                      - boolean
                      - number
                      - string
                    type: string
                  type: array
              type: object
            remove:
              properties:
                headers:
                  default: []
                  items:
                    type: string
                  type: array
                json:
                  default: []
                  items:
                    type: string
                  type: array
              type: object
            rename:
              properties:
                headers:
                  default: []
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  type: array
              type: object
            replace:
              properties:
                headers:
                  default: []
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  type: array
                json:
                  default: []
                  items:
                    pattern: ^[^:]+:.*$
                    type: string
                  type: array
                json_types:
                  default: []
                  description: >-
                    List of JSON type names. Specify the types of the JSON
                    values returned when appending

                    JSON properties. Each string element can be one of: boolean,
                    number, or string.
                  items:
                    enum:
                      - boolean
                      - number
                      - string
                    type: string
                  type: array
              type: object
          type: object
        name:
          const: response-transformer
          type: string
    Route:
      allOf:
        - $ref: '#/components/schemas/RouteWithoutParents'
        - properties:
            service:
              additionalProperties: false
              description: >-
                The Service this Route is associated to. This is where the Route
                proxies traffic to.
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          type: object
          x-speakeasy-entity: GatewayRoute
    RouteWithoutParents:
      properties:
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        destinations:
          description: >-
            A list of IP destinations of incoming connections that match this
            Route when using stream routing. Each entry is an object with fields
            "ip" (optionally in CIDR range notation) and/or "port".
          items:
            properties:
              ip:
                type: string
              port:
                type: integer
            type: object
          type: array
        headers:
          additionalProperties: true
          description: >-
            One or more lists of values indexed by header name that will cause
            this Route to match if present in the request. The `Host` header
            cannot be used with this attribute: hosts should be specified using
            the `hosts` attribute. When `headers` contains only one value and
            that value starts with the special prefix `~*`, the value is
            interpreted as a regular expression.
          type: object
        hosts:
          description: >-
            A list of domain names that match this Route. Note that the hosts
            value is case sensitive.
          items:
            type: string
          type: array
        https_redirect_status_code:
          default: 426
          description: >-
            The status code Kong responds with when all properties of a Route
            match except the protocol i.e. if the protocol of the request is
            `HTTP` instead of `HTTPS`. `Location` header is injected by Kong if
            the field is set to 301, 302, 307 or 308. Note: This config applies
            only if the Route is configured to only accept the `https` protocol.
          enum:
            - 426
            - 301
            - 302
            - 307
            - 308
          type: integer
        id:
          readOnly: true
          type: string
        methods:
          description: A list of HTTP methods that match this Route.
          items:
            type: string
          type: array
        name:
          description: >-
            The name of the Route. Route names must be unique, and they are case
            sensitive. For example, there can be two different Routes named
            "test" and "Test".
          type: string
        path_handling:
          default: v0
          description: >-
            Controls how the Service path, Route path and requested path are
            combined when sending a request to the upstream. See above for a
            detailed description of each behavior.
          enum:
            - v0
            - v1
          type: string
        paths:
          description: A list of paths that match this Route.
          items:
            type: string
          type: array
        preserve_host:
          default: false
          description: >-
            When matching a Route via one of the `hosts` domain names, use the
            request `Host` header in the upstream request headers. If set to
            `false`, the upstream `Host` header will be that of the Service's
            `host`.
          type: boolean
        protocols:
          default:
            - http
            - https
          description: >-
            An array of the protocols this Route should allow. See the [Route
            Object](#route-object) section for a list of accepted protocols.
            When set to only `"https"`, HTTP requests are answered with an
            upgrade error. When set to only `"http"`, HTTPS requests are
            answered with an error.
          items:
            enum:
              - grpc
              - grpcs
              - http
              - https
              - tcp
              - tls
              - tls_passthrough
              - udp
              - ws
              - wss
            type: string
          type: array
        regex_priority:
          default: 0
          description: >-
            A number used to choose which route resolves a given request when
            several routes match it using regexes simultaneously. When two
            routes match the path and have the same `regex_priority`, the older
            one (lowest `created_at`) is used. Note that the priority for
            non-regex routes is different (longer non-regex routes are matched
            before shorter ones).
          type: integer
        request_buffering:
          default: true
          description: >-
            Whether to enable request body buffering or not. With HTTP 1.1, it
            may make sense to turn this off on services that receive data with
            chunked transfer encoding.
          type: boolean
        response_buffering:
          default: true
          description: >-
            Whether to enable response body buffering or not. With HTTP 1.1, it
            may make sense to turn this off on services that send data with
            chunked transfer encoding.
          type: boolean
        snis:
          description: A list of SNIs that match this Route when using stream routing.
          items:
            type: string
          type: array
        sources:
          description: >-
            A list of IP sources of incoming connections that match this Route
            when using stream routing. Each entry is an object with fields "ip"
            (optionally in CIDR range notation) and/or "port".
          items:
            properties:
              ip:
                type: string
              port:
                type: integer
            type: object
          type: array
        strip_path:
          default: true
          description: >-
            When matching a Route via one of the `paths`, strip the matching
            prefix from the upstream request URL.
          type: boolean
        tags:
          description: >-
            An optional set of strings associated with the Route for grouping
            and filtering.
          items:
            type: string
          type: array
        updated_at:
          description: Unix epoch when the resource was last updated.
          readOnly: true
          type: integer
      type: object
      x-speakeasy-entity: GatewayRoute
    SNI:
      allOf:
        - $ref: '#/components/schemas/SNIWithoutParents'
        - properties:
            certificate:
              additionalProperties: false
              description: >-
                The id (a UUID) of the certificate with which to associate the
                SNI hostname. The Certificate must have a valid private key
                associated with it to be used by the SNI object.
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          type: object
          x-speakeasy-entity: GatewaySNI
    SNIWithoutParents:
      properties:
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        id:
          readOnly: true
          type: string
        name:
          description: The SNI name to associate with the given certificate.
          type: string
        tags:
          description: >-
            An optional set of strings associated with the SNIs for grouping and
            filtering.
          items:
            type: string
          type: array
        updated_at:
          description: Unix epoch when the resource was last updated.
          readOnly: true
          type: integer
      type: object
      x-speakeasy-entity: GatewaySNI
    SamlPlugin:
      allOf:
        - $ref: '#/components/schemas/Plugin'
        - $ref: '#/components/schemas/SamlPluginConfig'
      x-speakeasy-entity: GatewayPluginSaml
    SamlPluginConfig:
      properties:
        config:
          properties:
            anonymous:
              description: >-
                An optional string (consumer UUID or username) value to use as
                an “anonymous” consumer. If not set, a Kong Consumer must exist
                for the SAML IdP user credentials, mapping the username format
                to the Kong Consumer username.
              type: string
            assertion_consumer_path:
              description: >-
                A string representing a URL path, such as /path/to/resource.
                Must start with a forward slash (/) and must not contain empty
                segments (i.e., two consecutive forward slashes).
              type: string
            idp_certificate:
              description: >-
                The public certificate provided by the IdP. This is used to
                validate responses from the IdP.  Only include the contents of
                the certificate. Do not include the header (`BEGIN CERTIFICATE`)
                and footer (`END CERTIFICATE`) lines.
              type: string
            idp_sso_url:
              description: >-
                A string representing a URL, such as
                https://example.com/path/to/resource?q=search.
              type: string
            issuer:
              description: >-
                The unique identifier of the IdP application. Formatted as a URL
                containing information about the IdP so the SP can validate that
                the SAML assertions it receives are issued from the correct IdP.
              type: string
            nameid_format:
              default: EmailAddress
              description: >-
                The requested `NameId` format. Options available are: -
                `Unspecified` - `EmailAddress` - `Persistent` - `Transient`
              enum:
                - Unspecified
                - EmailAddress
                - Persistent
                - Transient
              type: string
            request_digest_algorithm:
              default: SHA256
              description: 'The digest algorithm for Authn requests: - `SHA256` - `SHA1`'
              enum:
                - SHA256
                - SHA1
              type: string
            request_signature_algorithm:
              default: SHA256
              description: >-
                The signature algorithm for signing Authn requests. Options
                available are: - `SHA256` - `SHA384` - `SHA512`
              enum:
                - SHA256
                - SHA384
                - SHA512
              type: string
            request_signing_certificate:
              description: The certificate for signing requests.
              type: string
            request_signing_key:
              description: >-
                The private key for signing requests.  If this parameter is set,
                requests sent to the IdP are signed.  The
                `request_signing_certificate` parameter must be set as well.
              type: string
            response_digest_algorithm:
              default: SHA256
              description: >-
                The algorithm for verifying digest in SAML responses: - `SHA256`
                - `SHA1`
              enum:
                - SHA256
                - SHA1
              type: string
            response_encryption_key:
              description: >-
                The private encryption key required to decrypt encrypted
                assertions.
              type: string
            response_signature_algorithm:
              default: SHA256
              description: >-
                The algorithm for validating signatures in SAML responses.
                Options available are: - `SHA256` - `SHA384` - `SHA512`
              enum:
                - SHA256
                - SHA384
                - SHA512
              type: string
            session_absolute_timeout:
              default: 86400
              description: >-
                The session cookie absolute timeout in seconds. Specifies how
                long the session can be used until it is no longer valid.
              type: number
            session_audience:
              default: default
              description: The session audience, for example "my-application"
              type: string
            session_cookie_domain:
              description: The session cookie domain flag.
              type: string
            session_cookie_http_only:
              default: true
              description: >-
                Forbids JavaScript from accessing the cookie, for example,
                through the `Document.cookie` property.
              type: boolean
            session_cookie_name:
              default: session
              description: The session cookie name.
              type: string
            session_cookie_path:
              default: /
              description: >-
                A string representing a URL path, such as /path/to/resource.
                Must start with a forward slash (/) and must not contain empty
                segments (i.e., two consecutive forward slashes).
              type: string
            session_cookie_same_site:
              default: Lax
              description: >-
                Controls whether a cookie is sent with cross-origin requests,
                providing some protection against cross-site request forgery
                attacks.
              enum:
                - Strict
                - Lax
                - None
                - Default
              type: string
            session_cookie_secure:
              description: >-
                The cookie is only sent to the server when a request is made
                with the https:scheme (except on localhost), and therefore is
                more resistant to man-in-the-middle attacks.
              type: boolean
            session_enforce_same_subject:
              default: false
              description: >-
                When set to `true`, audiences are forced to share the same
                subject.
              type: boolean
            session_hash_storage_key:
              default: false
              description: >-
                When set to `true`, the storage key (session ID) is hashed for
                extra security. Hashing the storage key means it is impossible
                to decrypt data from the storage without a cookie.
              type: boolean
            session_hash_subject:
              default: false
              description: >-
                When set to `true`, the value of subject is hashed before being
                stored. Only applies when `session_store_metadata` is enabled.
              type: boolean
            session_idling_timeout:
              default: 900
              description: The session cookie idle time in seconds.
              type: number
            session_memcached_host:
              default: 127.0.0.1
              description: The memcached host.
              type: string
            session_memcached_port:
              default: 11211
              description: >-
                An integer representing a port number between 0 and 65535,
                inclusive.
              maximum: 65535
              minimum: 0
              type: integer
            session_memcached_prefix:
              description: The memcached session key prefix.
              type: string
            session_memcached_socket:
              description: The memcached unix socket path.
              type: string
            session_redis_cluster_max_redirections:
              description: The Redis cluster maximum redirects.
              type: integer
            session_redis_cluster_nodes:
              description: >-
                The Redis cluster node host. Takes an array of host records,
                with either `ip` or `host`, and `port` values.
              items:
                properties:
                  ip:
                    default: 127.0.0.1
                    description: A string representing a host name, such as example.com.
                    type: string
                  port:
                    default: 6379
                    description: >-
                      An integer representing a port number between 0 and 65535,
                      inclusive.
                    maximum: 65535
                    minimum: 0
                    type: integer
                type: object
              type: array
            session_redis_connect_timeout:
              description: The Redis connection timeout in milliseconds.
              type: integer
            session_redis_host:
              default: 127.0.0.1
              description: The Redis host IP.
              type: string
            session_redis_password:
              description: >-
                Password to use for Redis connection when the `redis` session
                storage is defined. If undefined, no auth commands are sent to
                Redis. This value is pulled from
              type: string
            session_redis_port:
              default: 6379
              description: >-
                An integer representing a port number between 0 and 65535,
                inclusive.
              maximum: 65535
              minimum: 0
              type: integer
            session_redis_prefix:
              description: The Redis session key prefix.
              type: string
            session_redis_read_timeout:
              description: The Redis read timeout in milliseconds.
              type: integer
            session_redis_send_timeout:
              description: The Redis send timeout in milliseconds.
              type: integer
            session_redis_server_name:
              description: The SNI used for connecting to the Redis server.
              type: string
            session_redis_socket:
              description: The Redis unix socket path.
              type: string
            session_redis_ssl:
              default: false
              description: Use SSL/TLS for the Redis connection.
              type: boolean
            session_redis_ssl_verify:
              default: false
              description: Verify the Redis server certificate.
              type: boolean
            session_redis_username:
              description: >-
                Redis username if the `redis` session storage is defined and ACL
                authentication is desired.If undefined, ACL authentication will
                not be performed.  This requires Redis v6.0.0+. The username
                **cannot** be set to `default`.
              type: string
            session_remember:
              default: false
              description: Enables or disables persistent sessions
              type: boolean
            session_remember_absolute_timeout:
              default: 2592000
              description: Persistent session absolute timeout in seconds.
              type: number
            session_remember_cookie_name:
              default: remember
              description: Persistent session cookie name
              type: string
            session_remember_rolling_timeout:
              default: 604800
              description: Persistent session rolling timeout in seconds.
              type: number
            session_request_headers:
              items:
                enum:
                  - id
                  - audience
                  - subject
                  - timeout
                  - idling-timeout
                  - rolling-timeout
                  - absolute-timeout
                type: string
              type: array
            session_response_headers:
              items:
                enum:
                  - id
                  - audience
                  - subject
                  - timeout
                  - idling-timeout
                  - rolling-timeout
                  - absolute-timeout
                type: string
              type: array
            session_rolling_timeout:
              default: 3600
              description: >-
                The session cookie absolute timeout in seconds. Specifies how
                long the session can be used until it is no longer valid.
              type: number
            session_secret:
              description: >-
                The session secret. This must be a random string of 32
                characters from the base64 alphabet (letters, numbers, `/`, `_`
                and `+`). It is used as the secret key for encrypting session
                data as well as state information that is sent to the IdP in the
                authentication exchange.
              maxLength: 32
              minLength: 32
              pattern: ^[0-9a-zA-Z/_+]+$
              type: string
            session_storage:
              default: cookie
              description: >-
                The session storage for session data: - `cookie`: stores session
                data with the session cookie. The session cannot be invalidated
                or revoked without changing the session secret, but is
                stateless, and doesn't require a database. - `memcached`: stores
                session data in memcached - `redis`: stores session data in
                Redis
              enum:
                - cookie
                - memcache
                - memcached
                - redis
              type: string
            session_store_metadata:
              default: false
              description: >-
                Configures whether or not session metadata should be stored.
                This includes information about the active sessions for the
                `specific_audience` belonging to a specific subject.
              type: boolean
            validate_assertion_signature:
              default: true
              description: Enable signature validation for SAML responses.
              type: boolean
          shorthand_fields:
            session_auth_ttl:
              type: number
            session_compressor:
              type: string
            session_cookie_httponly:
              type: boolean
            session_cookie_idletime:
              type: number
            session_cookie_lifetime:
              type: number
            session_cookie_maxsize:
              type: integer
            session_cookie_renew:
              type: number
            session_cookie_samesite:
              type: string
            session_memcache_host:
              type: string
            session_memcache_port:
              type: integer
            session_memcache_prefix:
              type: string
            session_memcache_socket:
              type: string
            session_redis_cluster_maxredirections:
              type: integer
            session_strategy:
              type: string
          type: object
        name:
          const: saml
          type: string
    Service:
      properties:
        ca_certificates:
          description: >-
            Array of `CA Certificate` object UUIDs that are used to build the
            trust store while verifying upstream server's TLS certificate. If
            set to `null` when Nginx default is respected. If default CA list in
            Nginx are not specified and TLS verification is enabled, then
            handshake with upstream server will always fail (because no CA are
            trusted).
          items:
            type: string
          type: array
        client_certificate:
          additionalProperties: false
          description: >-
            Certificate to be used as client certificate while TLS handshaking
            to the upstream server.
          properties:
            id:
              type: string
          type: object
          x-foreign: true
        connect_timeout:
          default: 60000
          description: >-
            The timeout in milliseconds for establishing a connection to the
            upstream server.
          type: integer
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        enabled:
          default: true
          description: >-
            Whether the Service is active. If set to `false`, the proxy behavior
            will be as if any routes attached to it do not exist (404). Default:
            `true`.
          type: boolean
        host:
          description: >-
            The host of the upstream server. Note that the host value is case
            sensitive.
          type: string
        id:
          readOnly: true
          type: string
        name:
          description: The Service name.
          type: string
        path:
          description: The path to be used in requests to the upstream server.
          type: string
        port:
          default: 80
          description: The upstream server port.
          type: integer
        protocol:
          default: http
          description: The protocol used to communicate with the upstream.
          enum:
            - grpc
            - grpcs
            - http
            - https
            - tcp
            - tls
            - tls_passthrough
            - udp
            - ws
            - wss
          type: string
        read_timeout:
          default: 60000
          description: >-
            The timeout in milliseconds between two successive read operations
            for transmitting a request to the upstream server.
          type: integer
        retries:
          default: 5
          description: The number of retries to execute upon failure to proxy.
          type: integer
        tags:
          description: >-
            An optional set of strings associated with the Service for grouping
            and filtering.
          items:
            type: string
          type: array
        tls_verify:
          description: >-
            Whether to enable verification of upstream server TLS certificate.
            If set to `null`, then the Nginx default is respected.
          type: boolean
        tls_verify_depth:
          description: >-
            Maximum depth of chain while verifying Upstream server's TLS
            certificate. If set to `null`, then the Nginx default is respected.
          type: integer
        updated_at:
          description: Unix epoch when the resource was last updated.
          readOnly: true
          type: integer
        url:
          description: >-
            Helper field to set `protocol`, `host`, `port` and `path` using a
            URL. This field is write-only and is not returned in responses.
          type: string
          writeOnly: true
          x-speakeasy-ignore: true
        write_timeout:
          default: 60000
          description: >-
            The timeout in milliseconds between two successive write operations
            for transmitting a request to the upstream server.
          type: integer
      type: object
      x-speakeasy-entity: GatewayService
    Target:
      allOf:
        - $ref: '#/components/schemas/TargetWithoutParents'
        - properties:
            upstream:
              additionalProperties: false
              properties:
                id:
                  type: string
              type: object
              x-foreign: true
          type: object
          x-speakeasy-entity: GatewayTarget
    TargetWithoutParents:
      properties:
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: number
        id:
          readOnly: true
          type: string
        tags:
          description: >-
            An optional set of strings associated with the Target for grouping
            and filtering.
          items:
            type: string
          type: array
        target:
          description: >-
            The target address (ip or hostname) and port. If the hostname
            resolves to an SRV record, the `port` value will be overridden by
            the value from the DNS record.
          type: string
        updated_at:
          description: Unix epoch when the resource was last updated.
          readOnly: true
          type: number
        weight:
          default: 100
          description: >-
            The weight this target gets within the upstream loadbalancer
            (`0`-`65535`). If the hostname resolves to an SRV record, the
            `weight` value will be overridden by the value from the DNS record.
          type: integer
      type: object
      x-speakeasy-entity: GatewayTarget
    Upstream:
      properties:
        algorithm:
          default: round-robin
          description: Which load balancing algorithm to use.
          enum:
            - consistent-hashing
            - least-connections
            - round-robin
            - latency
          type: string
        client_certificate:
          additionalProperties: false
          description: >-
            If set, the certificate to be used as client certificate while TLS
            handshaking to the upstream server.
          properties:
            id:
              type: string
          type: object
          x-foreign: true
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        hash_fallback:
          default: none
          description: >-
            What to use as hashing input if the primary `hash_on` does not
            return a hash (eg. header is missing, or no Consumer identified).
            Not available if `hash_on` is set to `cookie`.
          enum:
            - none
            - consumer
            - ip
            - header
            - cookie
            - path
            - query_arg
            - uri_capture
          type: string
        hash_fallback_header:
          description: >-
            The header name to take the value from as hash input. Only required
            when `hash_fallback` is set to `header`.
          type: string
        hash_fallback_query_arg:
          description: >-
            The name of the query string argument to take the value from as hash
            input. Only required when `hash_fallback` is set to `query_arg`.
          type: string
        hash_fallback_uri_capture:
          description: >-
            The name of the route URI capture to take the value from as hash
            input. Only required when `hash_fallback` is set to `uri_capture`.
          type: string
        hash_on:
          default: none
          description: >-
            What to use as hashing input. Using `none` results in a
            weighted-round-robin scheme with no hashing.
          enum:
            - none
            - consumer
            - ip
            - header
            - cookie
            - path
            - query_arg
            - uri_capture
          type: string
        hash_on_cookie:
          description: >-
            The cookie name to take the value from as hash input. Only required
            when `hash_on` or `hash_fallback` is set to `cookie`. If the
            specified cookie is not in the request, Kong will generate a value
            and set the cookie in the response.
          type: string
        hash_on_cookie_path:
          default: /
          description: >-
            The cookie path to set in the response headers. Only required when
            `hash_on` or `hash_fallback` is set to `cookie`.
          type: string
        hash_on_header:
          description: >-
            The header name to take the value from as hash input. Only required
            when `hash_on` is set to `header`.
          type: string
        hash_on_query_arg:
          description: >-
            The name of the query string argument to take the value from as hash
            input. Only required when `hash_on` is set to `query_arg`.
          type: string
        hash_on_uri_capture:
          description: >-
            The name of the route URI capture to take the value from as hash
            input. Only required when `hash_on` is set to `uri_capture`.
          type: string
        healthchecks:
          properties:
            active:
              properties:
                concurrency:
                  default: 10
                  type: integer
                headers:
                  additionalProperties: true
                  type: object
                healthy:
                  properties:
                    http_statuses:
                      default:
                        - 200
                        - 302
                      items:
                        type: integer
                      type: array
                    interval:
                      default: 0
                      type: number
                    successes:
                      default: 0
                      type: integer
                  type: object
                http_path:
                  default: /
                  type: string
                https_sni:
                  type: string
                https_verify_certificate:
                  default: true
                  type: boolean
                timeout:
                  default: 1
                  type: number
                type:
                  default: http
                  enum:
                    - tcp
                    - http
                    - https
                    - grpc
                    - grpcs
                  type: string
                unhealthy:
                  properties:
                    http_failures:
                      default: 0
                      type: integer
                    http_statuses:
                      default:
                        - 429
                        - 404
                        - 500
                        - 501
                        - 502
                        - 503
                        - 504
                        - 505
                      items:
                        type: integer
                      type: array
                    interval:
                      default: 0
                      type: number
                    tcp_failures:
                      default: 0
                      type: integer
                    timeouts:
                      default: 0
                      type: integer
                  type: object
              type: object
            passive:
              properties:
                healthy:
                  properties:
                    http_statuses:
                      default:
                        - 200
                        - 201
                        - 202
                        - 203
                        - 204
                        - 205
                        - 206
                        - 207
                        - 208
                        - 226
                        - 300
                        - 301
                        - 302
                        - 303
                        - 304
                        - 305
                        - 306
                        - 307
                        - 308
                      items:
                        type: integer
                      type: array
                    successes:
                      default: 0
                      type: integer
                  type: object
                type:
                  default: http
                  enum:
                    - tcp
                    - http
                    - https
                    - grpc
                    - grpcs
                  type: string
                unhealthy:
                  properties:
                    http_failures:
                      default: 0
                      type: integer
                    http_statuses:
                      default:
                        - 429
                        - 500
                        - 503
                      items:
                        type: integer
                      type: array
                    tcp_failures:
                      default: 0
                      type: integer
                    timeouts:
                      default: 0
                      type: integer
                  type: object
              type: object
            threshold:
              default: 0
              type: number
          type: object
        host_header:
          description: >-
            The hostname to be used as `Host` header when proxying requests
            through Kong.
          type: string
        id:
          readOnly: true
          type: string
        name:
          description: This is a hostname, which must be equal to the `host` of a Service.
          type: string
        slots:
          default: 10000
          description: >-
            The number of slots in the load balancer algorithm. If `algorithm`
            is set to `round-robin`, this setting determines the maximum number
            of slots. If `algorithm` is set to `consistent-hashing`, this
            setting determines the actual number of slots in the algorithm.
            Accepts an integer in the range `10`-`65536`.
          type: integer
        tags:
          description: >-
            An optional set of strings associated with the Upstream for grouping
            and filtering.
          items:
            type: string
          type: array
        updated_at:
          description: Unix epoch when the resource was last updated.
          readOnly: true
          type: integer
        use_srv_name:
          default: false
          description: >-
            If set, the balancer will use SRV hostname(if DNS Answer has SRV
            record) as the proxy upstream `Host`.
          type: boolean
      type: object
      x-speakeasy-entity: GatewayUpstream
    Vault:
      properties:
        config:
          description: >-
            The configuration properties for the Vault which can be found on the
            vaults' documentation page.
          type: object
        created_at:
          description: Unix epoch when the resource was created.
          readOnly: true
          type: integer
        description:
          description: The description of the Vault entity.
          type: string
        id:
          readOnly: true
          type: string
        name:
          description: >-
            The name of the Vault that's going to be added. Currently, the Vault
            implementation must be installed in every Kong instance.
          type: string
        prefix:
          description: >-
            The unique prefix (or identifier) for this Vault configuration. The
            prefix is used to load the right Vault configuration and
            implementation when referencing secrets with the other entities.
          type: string
        tags:
          description: >-
            An optional set of strings associated with the Vault for grouping
            and filtering.
          items:
            type: string
          type: array
        updated_at:
          description: Unix epoch when the resource was last updated.
          readOnly: true
          type: integer
      type: object
      x-speakeasy-entity: GatewayVault
    MeshControlPlaneLabels:
      title: Labels
      type: object
      nullable: true
      example:
        test: 'true'
      description: >-
        Labels to facilitate tagged search on control planes. Keys must be of
        length 1-63 characters.
      maxProperties: 10
      additionalProperties:
        type: string
        pattern: ^[a-z0-9A-Z]{1}([a-z0-9A-Z\-\.\_]*[a-z0-9A-Z]+)?$
        minLength: 1
        maxLength: 63
        nullable: true
    MeshControlPlane:
      type: object
      title: ControlPlane
      description: a control plane
      required:
        - id
        - name
        - updated_at
        - created_at
      properties:
        id:
          type: string
          format: uuid
          description: ID of the control plane.
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
          readOnly: true
        name:
          type: string
          example: Test control plane
          description: The name of the control plane.
          maxLength: 100
        description:
          type: string
          example: A control plane to handle traffic on development environment.
          maxLength: 250
        labels:
          $ref: '#/components/schemas/MeshControlPlaneLabels'
        created_at:
          type: string
          format: date-time
          example: '2023-01-11T02:30:42.227Z'
        updated_at:
          type: string
          format: date-time
          example: '2023-01-11T02:30:42.227Z'
    CreateMeshControlPlaneRequest:
      type: object
      title: CreateMeshControlPlaneRequest
      description: a payload to create a control plane
      required:
        - name
      additionalProperties: false
      properties:
        name:
          type: string
          example: Test control plane
          description: The name of the control plane.
          minLength: 1
          maxLength: 100
        description:
          type: string
          example: A control plane to handle traffic on development environment.
          maxLength: 250
        labels:
          $ref: '#/components/schemas/MeshControlPlaneLabels'
    UpdateMeshControlPlaneRequest:
      type: object
      title: UpdateMeshControlPlaneRequest
      description: a payload to update the control plane
      properties:
        name:
          type: string
          example: Test control plane
          description: The name of the control plane.
          maxLength: 100
        description:
          type: string
          example: A control plane to handle traffic on development environment.
          maxLength: 250
        labels:
          $ref: '#/components/schemas/MeshControlPlaneLabels'
    APIProductPortals:
      title: APIProductPortals
      type: array
      minItems: 0
      description: The list of portals which this API product is published to
      items:
        $ref: '#/components/schemas/APIProductPortal'
    APIProductPortal:
      title: APIProductPortal
      type: object
      additionalProperties: false
      required:
        - portal_id
        - portal_name
      properties:
        portal_id:
          type: string
          format: uuid
          example: 35a2624c-49fc-4764-99e1-224ed819f200
        portal_name:
          type: string
          example: Developer Portal
    APIProductVersionPublishStatus:
      title: APIProductVersionPublishStatus
      type: string
      enum:
        - published
        - unpublished
      example: published
    APIProductVersionPortals:
      title: APIProductVersionPortals
      type: array
      minItems: 0
      description: The list of portals which this API product version is configured for
      items:
        $ref: '#/components/schemas/APIProductVersionPortal'
    APIProductVersionPortal:
      title: APIProductVersionPortal
      type: object
      additionalProperties: false
      required:
        - portal_id
        - portal_name
        - portal_product_version_id
        - publish_status
        - deprecated
        - application_registration_enabled
        - auto_approve_registration
        - auth_strategies
      properties:
        portal_id:
          type: string
          format: uuid
          example: 35a2624c-49fc-4764-99e1-224ed819f200
        portal_name:
          type: string
          example: Developer Portal
        portal_product_version_id:
          type: string
          format: uuid
          example: 35a2624c-49fc-4764-99e1-224ed819f200
        publish_status:
          $ref: '#/components/schemas/APIProductVersionPublishStatus'
        deprecated:
          type: boolean
          example: false
        application_registration_enabled:
          type: boolean
          example: true
        auto_approve_registration:
          type: boolean
          example: false
        auth_strategies:
          type: array
          items:
            $ref: '#/components/schemas/APIProductVersionAuthStrategy'
    APIProductVersionAuthStrategy:
      title: APIProductVersionAuthStrategy
      type: object
      additionalProperties: false
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          example: 9f5061ce-78f6-4452-9108-ad7c02821fd5
        name:
          type: string
          example: Key Auth
      example:
        id: 9f5061ce-78f6-4452-9108-ad7c02821fd5
        name: Key Auth
    APIProduct:
      x-speakeasy-entity: ApiProduct
      title: API Product
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - description
        - portal_ids
        - portals
        - created_at
        - updated_at
        - labels
        - version_count
      properties:
        id:
          type: string
          format: uuid
          example: b9e81174-b5bb-4638-a3c3-8afe61a0abf8
          description: The API product ID.
          readOnly: true
        name:
          type: string
          description: The name of the API product
          example: My Name
        description:
          type: string
          nullable: true
          description: The description of the API product
          example: MyDescription
        portal_ids:
          deprecated: true
          type: array
          nullable: false
          uniqueItems: true
          minItems: 0
          description: >
            The list of portal identifiers which this API product is published
            to.

            This property is deprecated and will be removed in a future version.
            Use the `portals` property instead.
          items:
            type: string
            format: uuid
            example: 25a2624c-49fc-4764-99e1-224ed819f200
        portals:
          $ref: '#/components/schemas/APIProductPortals'
        version_count:
          type: number
          example: 10
          description: The number of product versions attached to this API product
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        labels:
          $ref: '#/components/schemas/Labels'
    AuthStrategySyncError:
      type: object
      additionalProperties: false
      required:
        - message
      properties:
        plugin_name:
          type: string
        value:
          type: string
          enum:
            - plugin_sync_error_comm
            - plugin_sync_error_unknown
            - plugin_sync_error_fatal
            - plugin_sync_error_updating_plugin_refs
        message:
          type: string
        info:
          type: object
          additionalProperties: true
          properties:
            details:
              type: array
              items:
                type: object
                additionalProperties: true
                properties:
                  type:
                    type: string
                  message:
                    type: array
                    items:
                      type: string
      example:
        plugin_name: konnect-application-auth
        value: plugin_sync_error_comm
        message: Unable to connect to the control plane to update plugin
    AuthStrategySyncErrors:
      x-speakeasy-terraform-ignore: true
      readOnly: true
      type: array
      nullable: true
      description: >-
        The set of errors encountered when trying to sync the auth strategies on
        the version
      items:
        $ref: '#/components/schemas/AuthStrategySyncError'
      example:
        - plugin_name: konnect-application-auth
          value: plugin_sync_error_comm
          message: Unable to connect to the control plane to update plugin
    APIProductVersion:
      x-speakeasy-entity: ApiProductVersion
      title: API Product Version
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - gateway_service
        - publish_status
        - deprecated
        - portals
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          example: 9f5061ce-78f6-4452-9108-ad7c02821fd5
          description: The API product version identifier.
          readOnly: true
        name:
          type: string
          description: The version of the API product
          example: FirstVersion
        gateway_service:
          type: object
          nullable: true
          additionalProperties: false
          required:
            - id
            - control_plane_id
          properties:
            id:
              type: string
              format: uuid
              nullable: true
              description: >-
                The identifier of a gateway service associated with the version
                of the API product.
              example: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
            runtime_group_id:
              type: string
              format: uuid
              deprecated: true
              description: >-
                This field is deprecated, please use `control_plane_id` instead.
                The identifier of the control plane that the gateway service
                resides in
              example: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
            control_plane_id:
              type: string
              format: uuid
              description: >-
                The identifier of the control plane that the gateway service
                resides in
              example: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
        publish_status:
          x-speakeasy-terraform-ignore: true
          type: string
          deprecated: true
          description: >-
            This field is published if the API product version is published to
            at least one portal. This field is deprecated: Use
            PortalProductVersion.publish_status instead.
          enum:
            - unpublished
            - published
          example: unpublished
        deprecated:
          type: boolean
          deprecated: true
          description: >-
            Whether this API product version is deprecated in at least one
            portal. This field is deprecated: Use
            PortalProductVersion.deprecated instead
          example: false
        auth_strategy_sync_errors:
          $ref: '#/components/schemas/AuthStrategySyncErrors'
        portals:
          $ref: '#/components/schemas/APIProductVersionPortals'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    CreateAPIProductDTO:
      x-speakeasy-entity: ApiProduct
      title: Create API Product Request
      description: The request schema to create an API product.
      type: object
      additionalProperties: false
      required:
        - name
        - portal_ids
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          example: API Product
          description: The name of the API product.
        description:
          type: string
          nullable: true
          example: Text describing the API product
          description: The description of the API product.
          default: null
        labels:
          $ref: '#/components/schemas/Labels'
        portal_ids:
          type: array
          nullable: false
          uniqueItems: true
          minItems: 0
          description: >-
            The list of portal identifiers which this API product should be
            published to
          items:
            type: string
            format: uuid
            example: 25a2624c-49fc-4764-99e1-224ed819f200
    UpdateAPIProductDTO:
      x-speakeasy-entity: ApiProduct
      title: Update API Product Request
      description: The request schema for updating an API product.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          example: API Product
          description: The name for the API product.
        description:
          type: string
          nullable: true
          example: Text describing the API product
          description: The description of the API product.
        labels:
          $ref: '#/components/schemas/LabelsUpdate'
        portal_ids:
          type: array
          nullable: false
          uniqueItems: true
          minItems: 0
          description: >-
            The list of portal identifiers which this API product should be
            published to
          items:
            type: string
            format: uuid
            example: 25a2624c-49fc-4764-99e1-224ed819f200
      required:
        - portal_ids
    CreateAPIProductVersionDTO:
      title: Create API Product Version Request
      description: The request schema to create a version of an API product.
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        name:
          type: string
          nullable: false
          minLength: 1
          example: v1
          description: The version name of the API product version.
        publish_status:
          type: string
          nullable: false
          deprecated: true
          description: >-
            The publish status of the API product version. Applies publish
            status to all related portal product versions. This field is
            deprecated: Use PortalProductVersion.publish_status instead.
          enum:
            - unpublished
            - published
          example: unpublished
          default: unpublished
        deprecated:
          type: boolean
          nullable: false
          deprecated: true
          description: >-
            Indicates if the version of the API product is deprecated. Applies
            deprecation or removes deprecation from all related portal product
            versions. This field is deprecated: Use
            PortalProductVersion.deprecated instead.
          example: false
          default: false
        gateway_service:
          oneOf:
            - $ref: '#/components/schemas/GatewayServicePayload'
            - $ref: '#/components/schemas/LegacyGatewayServicePayload'
          $ref: '#/components/schemas/GatewayServicePayload'
    UpdateAPIProductVersionDTO:
      title: Update API Product Version Request
      description: The request schema for updating a version of an API product.
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          minLength: 1
          example: v1
          description: The version name of the API product version.
        publish_status:
          type: string
          deprecated: true
          description: >-
            The publish status of the API product version. Applies publish
            status to all related portal product versions. This field is
            deprecated: Use PortalProductVersion.publish_status instead.
          enum:
            - unpublished
            - published
          example: unpublished
        deprecated:
          type: boolean
          deprecated: true
          description: >-
            Indicates if the version of the API product is deprecated. Applies
            deprecation or removes deprecation from all related portal product
            versions. This field is deprecated: Use
            PortalProductVersion.deprecated instead.
          example: false
        notify:
          type: boolean
          description: >
            When set to `true`, and all the following conditions are true:

            - version of the API product deprecation has changed from `false` ->
            `true`

            - version of the API product is published


            then consumers of the now deprecated verion of the API product will
            be notified.
          example: true
        gateway_service:
          anyOf:
            - $ref: '#/components/schemas/GatewayServicePayload'
            - $ref: '#/components/schemas/LegacyGatewayServicePayload'
          $ref: '#/components/schemas/GatewayServicePayload'
    LegacyGatewayServicePayload:
      type: object
      nullable: true
      additionalProperties: false
      required:
        - id
        - runtime_group_id
      properties:
        id:
          type: string
          format: uuid
          description: >-
            The identifier of a gateway service associated with the version of
            the API product.
          example: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
        runtime_group_id:
          type: string
          format: uuid
          deprecated: true
          description: >-
            The identifier of the control plane that the gateway service resides
            in
          example: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
    GatewayServicePayload:
      type: object
      nullable: true
      additionalProperties: false
      required:
        - id
        - control_plane_id
      properties:
        id:
          type: string
          format: uuid
          description: >-
            The identifier of a gateway service associated with the version of
            the API product.
          example: 09b4786a-3e48-4631-8f6b-62d1d8e1a7f3
        control_plane_id:
          type: string
          format: uuid
          description: >-
            The identifier of the control plane that the gateway service resides
            in
          example: e4d9ebb1-26b4-426a-b00e-cb67044f3baf
    CreatedAt:
      type: string
      format: date-time
      example: '2022-11-04T20:10:06.927Z'
      description: An ISO-8601 timestamp representation of entity creation date.
      readOnly: true
    UpdatedAt:
      type: string
      format: date-time
      example: '2022-11-04T20:10:06.927Z'
      description: An ISO-8601 timestamp representation of entity update date.
      readOnly: true
    UnsupportedMediaTypeError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - type: object
          properties:
            status:
              example: 415
            title:
              example: UnsupportedMediaType
            type:
              example: https://httpstatuses.com/415
            instance:
              example: kong:trace:1234567890
            detail:
              example: UnsupportedMediaType
    LabelsUpdate:
      type: object
      nullable: true
      description: >
        Labels store metadata of an entity that can be used for filtering an
        entity list or for searching across entity types. 


        Keys must be of length 1-63 characters, and cannot start with "kong",
        "konnect", "mesh", "kic", or "_".
      example:
        env: test
      maxProperties: 50
      additionalProperties:
        type: string
        pattern: ^[a-z0-9A-Z]{1}([a-z0-9A-Z-._]*[a-z0-9A-Z]+)?$
        minLength: 1
        maxLength: 63
        nullable: true
      writeOnly: true
    AuthStrategy:
      type: object
      oneOf:
        - $ref: '#/components/schemas/AuthStrategyKeyAuth'
        - $ref: '#/components/schemas/AuthStrategyClientCredentials'
      discriminator:
        propertyName: credential_type
        mapping:
          key_auth: '#/components/schemas/AuthStrategyKeyAuth'
          client_credentials: '#/components/schemas/AuthStrategyClientCredentials'
          self_managed_client_credentials: '#/components/schemas/AuthStrategyClientCredentials'
    PortalClaimMappings:
      title: PortalClaimMappings
      description: Mappings from a portal developer atribute to an Identity Provider claim.
      type: object
      minProperties: 0
      maxProperties: 3
      properties:
        name:
          type: string
          example: name
          default: name
        email:
          type: string
          example: email
          default: email
        groups:
          type: string
          default: groups
          example: custom-group-claim
      example:
        name: name
        email: email
        groups: custom-group-claim
    PortalOIDCConfig:
      title: PortalOIDCConfig
      description: Configuration properties for an OpenID Connect Identity Provider.
      type: object
      properties:
        issuer:
          type: string
          example: https://identity.example.com/v2
        client_id:
          type: string
          example: x7id0o42lklas0blidl2
        scopes:
          type: array
          default:
            - email
            - openid
            - profile
          items:
            type: string
            default: openid
          example:
            - email
            - openid
            - profile
        claim_mappings:
          $ref: '#/components/schemas/PortalClaimMappings'
      required:
        - issuer
        - client_id
      example:
        issuer: https://identity.example.com/v2
        client_id: x7id0o42lklas0blidl2
        scopes:
          - email
          - openid
          - profile
        claim_mappings:
          name: name
          email: email
          groups: custom-group-claim
    PortalAuthenticationSettingsResponse:
      x-speakeasy-entity: PortalAuth
      title: PortalAuthenticationSettingsResponse
      description: The developer authentication settings for a portal.
      type: object
      properties:
        basic_auth_enabled:
          type: boolean
          example: true
          description: The organization has basic auth enabled.
        oidc_auth_enabled:
          type: boolean
          example: false
          description: The organization has OIDC disabled.
        oidc_team_mapping_enabled:
          type: boolean
          example: true
          description: IdP groups determine the Portal Teams a developer has.
        konnect_mapping_enabled:
          type: boolean
          example: false
          description: A Konnect Identity Admin assigns teams to a developer.
        oidc_config:
          $ref: '#/components/schemas/PortalOIDCConfig'
      required:
        - basic_auth_enabled
        - konnect_mapping_enabled
        - oidc_auth_enabled
        - oidc_team_mapping_enabled
      example:
        basic_auth_enabled: true
        oidc_auth_enabled: true
        oidc_team_mapping_enabled: true
        konnect_mapping_enabled: false
        oidc_config:
          issuer: https://identity.example.com/v2
          client_id: x7id0o42lklas0blidl2
          scopes:
            - email
            - openid
            - profile
          claim_mappings:
            name: name
            email: email
            groups: custom-group-claim
    PortalAuthenticationSettingsUpdateRequest:
      x-speakeasy-entity: PortalAuth
      title: PortalAuthenticationSettingsUpdateRequest
      description: Properties to update a portal's developer auth settings.
      type: object
      properties:
        basic_auth_enabled:
          type: boolean
          example: true
          description: The organization has basic auth enabled.
        oidc_auth_enabled:
          type: boolean
          example: false
          description: The organization has OIDC disabled.
        oidc_team_mapping_enabled:
          type: boolean
          example: true
          description: >-
            Whether IdP groups determine the Konnect Portal teams a developer
            has.
        konnect_mapping_enabled:
          type: boolean
          example: false
          description: Whether a Konnect Identity Admin assigns teams to a developer.
        oidc_issuer:
          type: string
        oidc_client_id:
          type: string
        oidc_client_secret:
          type: string
        oidc_scopes:
          type: array
          default:
            - email
            - openid
            - profile
          items:
            type: string
            default: openid
        oidc_claim_mappings:
          $ref: '#/components/schemas/PortalClaimMappings'
      example:
        basic_auth_enabled: true
        oidc_auth_enabled: true
        oidc_team_mapping_enabled: true
        konnect_mapping_enabled: false
        oidc_issuer: https://identity.example.com/v2
        oidc_client_id: x7id0o42lklas0blidl2
        oidc_scopes:
          - email
          - openid
          - profile
        oidc_claim_mappings:
          name: name
          email: email
          groups: custom-group-claim
    ListPortalsResponse:
      x-speakeasy-entity: PortalList
      additionalProperties: false
      description: A paginated list of portals in the current region in the organization.
      type: object
      required:
        - data
        - meta
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Portal'
      example:
        meta:
          page:
            number: 1
            size: 10
            total: 1
        data:
          - id: 8f9fd312-a987-4628-b4c5-bb4f4fddd5f7
            created_at: '2022-02-07T17:46:57.52Z'
            updated_at: '2022-10-08T17:00:00.52Z'
            name: Portal A
            display_name: Developer Portal A
            description: The Portal A
            default_domain: 123455678abcd.us.portal.konghq.com
            is_public: false
            rbac_enabled: true
            auto_approve_applications: false
            auto_approve_developers: true
            custom_domain: api.example.com
            custom_client_domain: portal.example.com
            application_count: 0
            developer_count: 0
            published_product_count: 0
    PortalProductVersionPublishStatus:
      type: string
      description: Publication status of the API product version on the portal
      enum:
        - published
        - unpublished
    PortalProductVersionDeprecated:
      type: boolean
      description: Whether the api product version on the portal is deprecated
    NotifyDevelopers:
      title: NotifyDevelopers
      description: Whether to notify developers who are affected by this change
      type: boolean
    ApplicationRegistrationEnabled:
      type: boolean
      description: >-
        Whether the application registration on this portal for the api product
        version is enabled
    AutoApproveRegistration:
      type: boolean
      description: >-
        Whether the application registration auto approval on this portal for
        the api product version is enabled
    AuthStrategies:
      description: A list of authentication strategies
      type: array
      minItems: 0
      maxItems: 1
      items:
        $ref: '#/components/schemas/AuthStrategy'
    AuthStrategyIDs:
      description: A list of authentication strategy IDs
      type: array
      minItems: 0
      maxItems: 1
      items:
        $ref: '#/components/schemas/UUID_RW'
    ReplacePortalProductVersionPayload:
      title: ReplacePortalProductVersionPayload
      type: object
      description: Payload to update a Portal Product Version
      additionalProperties: false
      required:
        - publish_status
        - application_registration_enabled
        - auto_approve_registration
        - deprecated
        - auth_strategy_ids
      properties:
        publish_status:
          $ref: '#/components/schemas/PortalProductVersionPublishStatus'
        auth_strategy_ids:
          $ref: '#/components/schemas/AuthStrategyIDs'
        application_registration_enabled:
          $ref: '#/components/schemas/ApplicationRegistrationEnabled'
        auto_approve_registration:
          $ref: '#/components/schemas/AutoApproveRegistration'
        deprecated:
          $ref: '#/components/schemas/PortalProductVersionDeprecated'
        notify_developers:
          $ref: '#/components/schemas/NotifyDevelopers'
    PortalProductVersion:
      x-speakeasy-entity: PortalProductVersion
      title: PortalProductVersion
      type: object
      description: >
        A Portal Product Version holds metadata that describes how a Product
        Version is configured for a specific portal.


        It contains:

        - Lifecyle and deprecation statuses

        - Application registration settings like auto approve or whether
        application registration is enabled

        - The Authentication Strategy (if present) that is enabled for
        Application Registration
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/schemas-UUID'
        publish_status:
          $ref: '#/components/schemas/PortalProductVersionPublishStatus'
        product_version_id:
          $ref: '#/components/schemas/UUID_RW'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        auth_strategies:
          $ref: '#/components/schemas/AuthStrategies'
        application_registration_enabled:
          $ref: '#/components/schemas/ApplicationRegistrationEnabled'
        auto_approve_registration:
          $ref: '#/components/schemas/AutoApproveRegistration'
        deprecated:
          $ref: '#/components/schemas/PortalProductVersionDeprecated'
      required:
        - id
        - publish_status
        - application_registration_enabled
        - auto_approve_registration
        - product_version_id
        - deprecated
        - auth_strategies
        - created_at
        - updated_at
    UpdatePortalResponse:
      $ref: '#/components/schemas/Portal'
    Portal:
      x-speakeasy-entity: Portal
      additionalProperties: false
      type: object
      required:
        - id
        - created_at
        - updated_at
        - name
        - display_name
        - default_domain
        - is_public
        - rbac_enabled
        - auto_approve_applications
        - auto_approve_developers
        - custom_domain
        - custom_client_domain
        - description
        - application_count
        - developer_count
        - published_product_count
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        name:
          $ref: '#/components/schemas/PortalName'
        display_name:
          $ref: '#/components/schemas/PortalDisplayName'
        description:
          $ref: '#/components/schemas/PortalDescription'
        default_domain:
          description: >-
            The domain assigned to the portal by Konnect. This is the default
            place to access the portal and its API if not using a
            `custom_domain``.
          type: string
          format: hostname
          readOnly: true
        is_public:
          description: >-
            Whether the portal catalog can be accessed publicly without any
            developer authentication. Developer accounts and applications cannot
            be created if the portal is public.
          type: boolean
        rbac_enabled:
          description: >-
            Whether the portal resources are protected by Role Based Access
            Control (RBAC). If enabled, developers view or register for products
            until unless assigned to teams with access to view and consume
            specific products.
          type: boolean
        auto_approve_applications:
          description: >-
            Whether the requests from applications to register for products will
            be automatically approved, or if they will be set to pending until
            approved by an admin.
          type: boolean
        auto_approve_developers:
          type: boolean
          description: >-
            Whether the developer account registrations will be automatically
            approved, or if they will be set to pending until approved by an
            admin.
        custom_domain:
          nullable: true
          type: string
          format: hostname
          description: >-
            The custom domain to access the developer portal. A CNAME for the
            portal's default domain must be able to be set for the custom domain
            for it to be valid. After setting a valid CNAME, an SSL/TLS
            certificate will be automatically manged for the custom domain, and
            traffic will be able to use the custom domain to route to the
            portal's web client and API.
        custom_client_domain:
          description: >-
            The custom domain to access a self-hosted customized developer
            portal client. If this is set, the Konnect-hosted portal client will
            no longer be available. `custom_domain` must be also set for this
            value to be set. See https://github.com/Kong/konnect-portal for
            information on how to get started deploying and customizing your own
            Konnect portal.
          nullable: true
          type: string
          format: hostname
        default_application_auth_strategy_id:
          $ref: '#/components/schemas/DefaultApplicationAuthStratID'
        application_count:
          type: number
          description: Number of applications created in the portal.
        developer_count:
          type: number
          description: Number of developers using the portal.
        published_product_count:
          type: number
          description: Number of api products published to the portal
      example:
        id: 9f9fd312-a987-4628-b4c5-bb4f4fddd5f7
        created_at: '2022-02-07T17:46:57.52Z'
        updated_at: '2022-10-08T17:00:00.52Z'
        name: Portal A
        display_name: Developer Portal A
        description: The Portal A
        default_domain: 123455678abcd.us.portal.konghq.com
        is_public: false
        rbac_enabled: true
        auto_approve_applications: false
        auto_approve_developers: true
        custom_domain: api.example.com
        custom_client_domain: portal.example.com
        application_count: 0
        developer_count: 0
        published_product_count: 0
    PortalDescription:
      description: The description of the portal.
      type: string
      maxLength: 512
      nullable: true
    DefaultApplicationAuthStratID:
      description: Default strategy ID applied on applications for the portal
      nullable: true
      type: string
      format: uuid
      example: 5f9fd312-a987-4628-b4c5-bb4f4fddd5f7
    PortalName:
      description: >-
        The name of the portal, used to distinguish it from other portals. Name
        must be unique.
      type: string
      maxLength: 255
      minLength: 1
    PortalDisplayName:
      description: >-
        The display name of the portal. This value will be the portal's `name`
        in Portal API.
      type: string
      maxLength: 255
      minLength: 1
    UpdatePortalRequest:
      additionalProperties: false
      type: object
      properties:
        name:
          $ref: '#/components/schemas/PortalName'
        display_name:
          $ref: '#/components/schemas/PortalDisplayName'
        description:
          $ref: '#/components/schemas/PortalDescription'
        is_public:
          description: >-
            Whether the portal catalog can be accessed publicly without any
            developer authentication. Developer accounts and applications cannot
            be created if the portal is public.
          type: boolean
        rbac_enabled:
          description: >-
            Whether the portal resources are protected by Role Based Access
            Control (RBAC). If enabled, developers view or register for products
            until unless assigned to teams with access to view and consume
            specific products.
          type: boolean
        auto_approve_applications:
          description: >-
            Whether the requests from applications to register for products will
            be automatically approved, or if they will be set to pending until
            approved by an admin.
          type: boolean
        auto_approve_developers:
          description: >-
            Whether the developer account registrations will be automatically
            approved, or if they will be set to pending until approved by an
            admin.
          type: boolean
        custom_domain:
          description: >-
            The custom domain to access the developer portal. A CNAME for the
            portal's default domain must be able to be set for the custom domain
            for it to be valid. After setting a valid CNAME, an SSL/TLS
            certificate will be automatically manged for the custom domain, and
            traffic will be able to use the custom domain to route to the
            portal's web client and API.
          type: string
          format: hostname
          nullable: true
          maxLength: 1024
        custom_client_domain:
          description: >-
            The custom domain to access a self-hosted customized developer
            portal client. If this is set, the Konnect-hosted portal will no
            longer be available.  `custom_domain` must be also set for this
            value to be set. See https://github.com/Kong/konnect-portal for
            information on how to get started deploying and customizing your own
            Konnect portal.
          type: string
          format: hostname
          nullable: true
          maxLength: 1024
        default_application_auth_strategy_id:
          $ref: '#/components/schemas/DefaultApplicationAuthStratID'
      example:
        name: Aperture
        is_public: false
        rbac_enabled: true
        auto_approve_applications: false
        auto_approve_developers: false
        custom_domain: api.example.com
        custom_client_domain: portal.example.com
        default_application_auth_strategy_id: 5f9fd312-a987-4628-b4c5-bb4f4fddd5f7
    UUID:
      type: string
      format: uuid
      example: 5f9fd312-a987-4628-b4c5-bb4f4fddd5f7
      description: Contains a unique identifier used for this resource.
      readOnly: true
    schemas-UUID:
      type: string
      format: uuid
      example: 5f9fd312-a987-4628-b4c5-bb4f4fddd5f7
      description: Contains a unique identifier used by the API for this resource.
      readOnly: true
    UUID_RW:
      type: string
      format: uuid
      example: 5f9fd312-a987-4628-b4c5-bb4f4fddd5f7
      description: Contains a unique identifier used by the API for this resource.
    AuthStrategyKeyAuth:
      description: KeyAuth Auth strategy that the application uses.
      type: object
      required:
        - id
        - name
        - credential_type
      properties:
        id:
          type: string
          format: uuid
          example: b9e81174-b5bb-4638-a3c3-8afe61a0abf8
          description: The Application Auth Strategy ID.
          readOnly: true
        name:
          type: string
          example: name
          default: name
        credential_type:
          type: string
          enum:
            - key_auth
    AuthMethods:
      type: array
      items:
        description: Auth Methods enabled for this strategy
        type: string
      example:
        - bearer
    AuthStrategyClientCredentials:
      description: Client Credential Auth strategy that the application uses.
      type: object
      required:
        - id
        - name
        - credential_type
        - auth_methods
      properties:
        id:
          type: string
          format: uuid
          example: b9e81174-b5bb-4638-a3c3-8afe61a0abf8
          description: The Application Auth Strategy ID.
          readOnly: true
        name:
          type: string
          example: name
          default: name
        credential_type:
          type: string
          enum:
            - client_credentials
            - self_managed_client_credentials
        auth_methods:
          $ref: '#/components/schemas/AuthMethods'
    DcrProviderType:
      title: DcrProviderType
      type: string
      description: >-
        The type of DCR provider. Can be one of the following - auth0, azureAd,
        curity, okta, http
      enum:
        - auth0
        - azureAd
        - curity
        - okta
        - http
    AppAuthStrategyConfigKeyAuth:
      title: AppAuthStrategyConfigKeyAuth
      description: >
        The most basic mode to configure an Application Auth Strategy for an API
        Product Version. 

        Using this mode will allow developers to generate API keys that will
        authenticate their application requests. 

        Once authenticated, an application will be granted access to any Product
        Version it is registered for that is configured for Key Auth.
      type: object
      additionalProperties: false
      properties:
        key_names:
          type: array
          maxItems: 10
          minItems: 1
          items:
            type: string
            maxLength: 256
          description: >-
            The names of the headers containing the API key. You can specify
            multiple header names.
    PartialAppAuthStrategyConfigOpenIDConnect:
      title: PartialAppAuthStrategyConfigOpenIDConnect
      description: >
        A more advanced mode to configure an API Product Version’s Application
        Auth Strategy. 

        Using this mode will allow developers to use API credentials issued from
        an external IdP that will authenticate their application requests. 

        Once authenticated, an application will be granted access to any Product
        Version it is registered for that is configured for the same Auth
        Strategy. 

        An OIDC strategy may be used in conjunction with a DCR provider to
        automatically create the IdP application.
      type: object
      additionalProperties: true
      properties:
        issuer:
          type: string
          format: url
          maxLength: 256
        credential_claim:
          type: array
          maxItems: 10
          items:
            type: string
            maxLength: 128
        scopes:
          type: array
          maxItems: 50
          items:
            type: string
            maxLength: 128
        auth_methods:
          type: array
          maxItems: 10
          items:
            type: string
            maxLength: 64
    AppAuthStrategyConfigOpenIDConnect:
      title: AppAuthStrategyConfigOpenIDConnect
      description: >
        A more advanced mode to configure an API Product Version’s Application
        Auth Strategy. 

        Using this mode will allow developers to use API credentials issued from
        an external IdP that will authenticate their application requests. 

        Once authenticated, an application will be granted access to any Product
        Version it is registered for that is configured for the same Auth
        Strategy. 

        An OIDC strategy may be used in conjunction with a DCR provider to
        automatically create the IdP application.
      type: object
      additionalProperties: true
      required:
        - issuer
        - credential_claim
        - scopes
        - auth_methods
      properties:
        issuer:
          type: string
          format: url
          maxLength: 256
        credential_claim:
          type: array
          maxItems: 10
          items:
            type: string
            maxLength: 128
        scopes:
          type: array
          maxItems: 50
          items:
            type: string
            maxLength: 128
        auth_methods:
          type: array
          maxItems: 10
          items:
            type: string
            maxLength: 64
    AppAuthStrategyKeyAuthRequest:
      title: AppAuthStrategyKeyAuthRequest
      description: Request for creating a Key Auth Application Auth Strategy
      type: object
      additionalProperties: false
      required:
        - name
        - display_name
        - strategy_type
        - configs
      properties:
        name:
          $ref: '#/components/schemas/AuthStrategyName'
        display_name:
          $ref: '#/components/schemas/AuthStrategyDisplayName'
        strategy_type:
          type: string
          enum:
            - key_auth
        configs:
          type: object
          description: JSON-B object containing the configuration for the Key Auth strategy
          additionalProperties: false
          required:
            - key-auth
          properties:
            key-auth:
              $ref: '#/components/schemas/AppAuthStrategyConfigKeyAuth'
    AppAuthStrategyKeyAuthResponse:
      title: AppAuthStrategyKeyAuthResponse
      description: >-
        Response payload from creating or updating a Key Auth Application Auth
        Strategy
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - display_name
        - strategy_type
        - configs
        - active
        - dcr_provider
        - created_at
        - updated_at
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          $ref: '#/components/schemas/AuthStrategyName'
        display_name:
          $ref: '#/components/schemas/AuthStrategyDisplayName'
        strategy_type:
          type: string
          enum:
            - key_auth
        configs:
          type: object
          description: JSON-B object containing the configuration for the Key Auth strategy
          additionalProperties: false
          required:
            - key-auth
          properties:
            key-auth:
              $ref: '#/components/schemas/AppAuthStrategyConfigKeyAuth'
        active:
          type: boolean
          description: At least one published product version is using this auth strategy.
        dcr_provider:
          nullable: true
          type: object
          additionalProperties: false
          required:
            - id
            - name
            - provider_type
          properties:
            id:
              $ref: '#/components/schemas/UUID'
            name:
              type: string
            display_name:
              $ref: '#/components/schemas/DcrProviderDisplayName'
            provider_type:
              $ref: '#/components/schemas/DcrProviderType'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    AppAuthStrategyOpenIDConnectRequest:
      title: AppAuthStrategyOpenIDConnectRequest
      description: Payload for creating an OIDC Application Auth Strategy
      type: object
      additionalProperties: false
      required:
        - name
        - display_name
        - strategy_type
        - configs
      properties:
        name:
          $ref: '#/components/schemas/AuthStrategyName'
        display_name:
          $ref: '#/components/schemas/AuthStrategyDisplayName'
        strategy_type:
          type: string
          enum:
            - openid_connect
        configs:
          type: object
          description: JSON-B object containing the configuration for the OIDC strategy
          additionalProperties: false
          required:
            - openid-connect
          properties:
            openid-connect:
              $ref: '#/components/schemas/AppAuthStrategyConfigOpenIDConnect'
        dcr_provider_id:
          nullable: true
          type: string
          format: uuid
    AppAuthStrategyOpenIDConnectResponse:
      title: AppAuthStrategyOpenIDConnectResponse
      description: Response payload from creating an OIDC Application Auth Strategy
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - display_name
        - strategy_type
        - configs
        - active
        - dcr_provider
        - created_at
        - updated_at
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          $ref: '#/components/schemas/AuthStrategyName'
        display_name:
          $ref: '#/components/schemas/AuthStrategyDisplayName'
        strategy_type:
          type: string
          enum:
            - openid_connect
        configs:
          type: object
          description: JSON-B object containing the configuration for the OIDC strategy
          additionalProperties: false
          required:
            - openid-connect
          properties:
            openid-connect:
              $ref: '#/components/schemas/AppAuthStrategyConfigOpenIDConnect'
        active:
          type: boolean
          description: At least one published product version is using this auth strategy.
        dcr_provider:
          nullable: true
          type: object
          additionalProperties: false
          required:
            - id
            - name
            - provider_type
          properties:
            id:
              $ref: '#/components/schemas/UUID'
            name:
              type: string
            display_name:
              $ref: '#/components/schemas/DcrProviderDisplayName'
            provider_type:
              $ref: '#/components/schemas/DcrProviderType'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
    CreateAppAuthStrategyRequest:
      x-speakeasy-entity: ApplicationAuthStrategy
      title: CreateAppAuthStrategyRequest
      description: Request body for creating an Application Auth Strategy
      type: object
      discriminator:
        propertyName: strategy_type
        mapping:
          key_auth: '#/components/schemas/AppAuthStrategyKeyAuthRequest'
          openid_connect: '#/components/schemas/AppAuthStrategyOpenIDConnectRequest'
      required:
        - strategy_type
      oneOf:
        - $ref: '#/components/schemas/AppAuthStrategyKeyAuthRequest'
        - $ref: '#/components/schemas/AppAuthStrategyOpenIDConnectRequest'
    AppAuthStrategy:
      x-speakeasy-entity: ApplicationAuthStrategy
      title: AppAuthStrategy
      description: >-
        A set of plugin configurations that represent how the gateway will
        perform authentication and authorization for a Product Version. Called
        “Auth Strategy” for short in the context of portals/applications. The
        plugins are synced to any Gateway Service that is currently linked or
        becomes linked to the Product Version.
      type: object
      discriminator:
        propertyName: strategy_type
        mapping:
          key_auth: '#/components/schemas/AppAuthStrategyKeyAuthResponse'
          openid_connect: '#/components/schemas/AppAuthStrategyOpenIDConnectResponse'
      required:
        - strategy_type
      oneOf:
        - $ref: '#/components/schemas/AppAuthStrategyKeyAuthResponse'
        - $ref: '#/components/schemas/AppAuthStrategyOpenIDConnectResponse'
    UpdateAppAuthStrategyRequest:
      x-speakeasy-entity: ApplicationAuthStrategy
      title: UpdateAppAuthStrategyRequest
      description: Request body for updating an Application Auth Strategy
      type: object
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/AuthStrategyName'
        display_name:
          $ref: '#/components/schemas/AuthStrategyDisplayName'
        dcr_provider_id:
          nullable: true
          type: string
          format: uuid
        configs:
          type: object
          description: >-
            JSON-B object containing the configuration for the OIDC strategy
            under the key 'openid-connect' or the configuration for the Key Auth
            strategy under the key 'key-auth'
          oneOf:
            - type: object
              additionalProperties: false
              required:
                - openid-connect
              properties:
                openid-connect:
                  $ref: >-
                    #/components/schemas/PartialAppAuthStrategyConfigOpenIDConnect
            - type: object
              additionalProperties: false
              required:
                - key-auth
              properties:
                key-auth:
                  $ref: '#/components/schemas/AppAuthStrategyConfigKeyAuth'
    CreateAppAuthStrategyResponse:
      $ref: '#/components/schemas/AppAuthStrategy'
    UpdateAppAuthStrategyResponse:
      $ref: '#/components/schemas/AppAuthStrategy'
    GetAppAuthStrategyResponse:
      $ref: '#/components/schemas/AppAuthStrategy'
    DcrProviderDisplayName:
      type: string
      description: >
        The display name of the DCR provider. This is used to identify the DCR
        provider in the Portal UI.
      minLength: 1
      maxLength: 256
    AuthStrategyName:
      type: string
      description: >
        The name of the auth strategy. This is used to identify the auth
        strategy in the Konnect UI.
      minLength: 1
      maxLength: 256
    AuthStrategyDisplayName:
      type: string
      description: >
        The display name of the Auth strategy. This is used to identify the Auth
        strategy in the Portal UI.
      maxLength: 256
    AssignedRole:
      title: AssignedRole
      type: object
      description: An assigned role is a role that has been assigned to a user or team.
      example:
        id: 54cc6168-ebb1-4300-8168-d62a0dd08fc8
        role_name: Viewer
        entity_id: 18ee2573-dec0-4b83-be99-fa7700bcdc61
        entity_type_name: Control Planes
        entity_region: us
      properties:
        id:
          type: string
          format: uuid
          example: eaf7adf1-32c8-4bbf-b960-d1f8456afe67
          description: The ID of the role assignment.
        role_name:
          type: string
          example: Viewer
          description: Name of the role being assigned.
        entity_id:
          type: string
          format: uuid
          example: 817d0422-45c9-4d88-8d64-45aef05c1ae7
          description: A RBAC entity ID.
        entity_type_name:
          type: string
          example: Control Planes
          description: Name of the entity type the role is being assigned to.
        entity_region:
          type: string
          enum:
            - us
            - eu
            - au
            - '*'
          example: eu
          description: Region of the entity.
    SystemAccount:
      x-speakeasy-entity: SystemAccount
      title: System Account
      type: object
      example:
        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        name: Example System Account
        description: This is a sample system account description.
        created_at: '2022-08-24T14:15:22Z'
        updated_at: '2022-10-05T10:33:49Z'
        konnect_managed: false
      description: Schema of the system account.
      properties:
        id:
          type: string
          format: uuid
          description: ID of the system account.
          readOnly: true
        name:
          type: string
          description: Name of the system account.
        description:
          type: string
          description: Description of the system account.
        created_at:
          type: string
          format: date-time
          description: Timestamp of when the system account was created.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Timestamp of when the system account was last updated.
          readOnly: true
        konnect_managed:
          type: boolean
          description: The system account is managed by Konnect (true/false).
    SystemAccountAccessToken:
      x-speakeasy-entity: SystemAccountAccessToken
      title: System Account Access Token
      example:
        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        name: Sample Access Token
        created_at: '2022-08-01T14:16:09Z'
        updated_at: '2022-08-02T08:35:49Z'
        expires_at: '2022-12-31T12:52:23Z'
        last_used_at: '2022-10-24T13:05:42Z'
      description: Schema of the system account access token.
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID of the system account access token.
          readOnly: true
        name:
          type: string
          description: Name of the system account access token.
        created_at:
          type: string
          format: date-time
          description: Timestamp of when the system account access token was created.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Timestamp of when the system account access token was last updated.
          readOnly: true
        expires_at:
          type: string
          format: date-time
          description: Timestamp of when the system account access token will expire.
        last_used_at:
          type: string
          format: date-time
          description: Timestamp of when the system account access token was last used.
          readOnly: true
  securitySchemes:
    personalAccessToken:
      type: http
      scheme: bearer
      bearerFormat: Token
      description: >
        The personal access token is meant to be used as an alternative to
        basic-auth when accessing Konnect via APIs.

        You can generate a Personal Access Token (PAT) from the [personal access
        token page](https://cloud.konghq.com/global/tokens/) in the Konnect
        dashboard.

        The PAT token must be passed in the header of a request, for example:

        `curl -X GET 'https://global.api.konghq.com/v2/users/' --header
        'Authorization: Bearer kpat_xgfT...'`
    systemAccountAccessToken:
      type: http
      scheme: bearer
      bearerFormat: Token
      description: >
        The system account access token is meant for automations and
        integrations that are not directly associated with a human identity.

        You can generate a system account Access Token by creating a system
        account and then obtaining a system account access token for that
        account.

        The access token must be passed in the header of a request, for example:

        `curl -X GET 'https://global.api.konghq.com/v2/users/' --header
        'Authorization: Bearer spat_i2Ej...'`
    konnectAccessToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: >
        The Konnect access token is meant to be used by the Konnect dashboard
        and the decK CLI authenticate with.
  requestBodies:
    GroupMemebershipAdd:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GroupMembership'
      description: >-
        Request body for adding a list of child control planes to a control
        plane group membership.
    GroupMembershipRemove:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GroupMembership'
      description: >-
        Request body for removing a list of child control planes from a control
        plane group membership.
    DataPlaneClientCertificateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              cert:
                type: string
                description: JSON escaped string of the certificate.
            required:
              - cert
      description: Request body for creating a dp-client-certificate.
    CreateAPIProductRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAPIProductDTO'
    UpdateAPIProductRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAPIProductDTO'
    CreateAPIProductVersionRequest:
      x-speakeasy-entity: APIProductVersion
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAPIProductVersionDTO'
    UpdateAPIProductVersionRequest:
      x-speakeasy-entity: APIProductVersion
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAPIProductVersionDTO'
    UpdatePortalAuthenticationSettings:
      description: Update a portal's developer authentication settings.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalAuthenticationSettingsUpdateRequest'
    UpdatePortal:
      description: Update a portal's settings.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePortalRequest'
    ReplacePortalProductVersion:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReplacePortalProductVersionPayload'
    CreateAppAuthStrategy:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAppAuthStrategyRequest'
    UpdateAppAuthStrategy:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAppAuthStrategyRequest'
    AssignRole:
      content:
        application/json:
          schema:
            x-speakeasy-entity: SystemAccountRole
            type: object
            description: >-
              An assigned role is a role that has been assigned to a user or
              team.
            properties:
              role_name:
                type: string
                example: Viewer
                description: The desired role.
              entity_id:
                type: string
                format: uuid
                example: e67490ce-44dc-4cbd-b65e-b52c746fc26a
                description: The ID of the entity.
              entity_type_name:
                type: string
                example: Control Planes
                description: The type of entity.
              entity_region:
                type: string
                enum:
                  - us
                  - eu
                  - au
                  - '*'
                example: eu
                description: The region of the team.
      description: The request schema for assigning a role.
    CreateSystemAccount:
      content:
        application/json:
          schema:
            x-speakeasy-entity: SystemAccount
            type: object
            required:
              - name
              - description
            properties:
              name:
                type: string
                description: Name of the system account.
              description:
                type: string
                description: >-
                  Description of the system account. Useful when the system
                  account name is not sufficient to differentiate one system
                  account from another.
              konnect_managed:
                type: boolean
                description: The system account is managed by Konnect (true/false).
      description: The request schema to create a system account.
    UpdateSystemAccount:
      content:
        application/json:
          schema:
            x-speakeasy-entity: SystemAccount
            type: object
            properties:
              name:
                type: string
                description: Name of the system account.
              description:
                type: string
                description: Description of the system account.
      description: The request schema for the update system account request.
    UpdateSystemAccountAccessToken:
      content:
        application/json:
          schema:
            x-speakeasy-entity: SystemAccountAccessToken
            type: object
            properties:
              name:
                type: string
                description: Name of the system account access token.
    CreateSystemAccountAccessToken:
      content:
        application/json:
          schema:
            x-speakeasy-entity: SystemAccountAccessToken
            type: object
            properties:
              name:
                type: string
              expires_at:
                type: string
                format: date-time
      description: The request body to create a system account access token.
    AddSystemAccountToTeam:
      content:
        application/json:
          schema:
            x-speakeasy-entity: SystemAccountTeam
            type: object
            properties:
              id:
                x-speakeasy-name-override: account_id
                type: string
                description: ID of the system account.
                format: uuid
      description: The request schema for adding a system account to a team.
security:
  - personalAccessToken: []
  - systemAccountAccessToken: []
  - konnectAccessToken: []
tags:
  - name: Control Planes
  - name: Control Plane Groups
  - name: Data-Plane Group Configurations
  - name: Networks
  - name: Transit Gateways
  - name: Provider Accounts
  - name: Custom Domains
  - name: Resource Quotas
  - name: Resource Availability
  - description: DP Nodes
    name: DP Nodes
  - description: DP Certificates
    name: DP Certificates
  - description: Custom Plugin Schemas
    name: Custom Plugin Schemas
  - description: >
      Service entities are abstractions of your microservice interfaces or
      formal APIs. For example, a service could be a data transformation
      microservice or a billing API.

      <br><br>

      The main attribute of a service is the destination URL for proxying
      traffic. This URL can be set as a single string or by specifying its
      protocol, host, port and path individually.

      <br><br>

      Services are associated to routes, and a single service can have many
      routes associated with it. Routes are entrypoints in Kong Gateway which
      define rules to match client requests. Once a route is matched, Kong
      Gateway proxies the request to its associated service. See the [Proxy
      Reference](https://docs.konghq.com/gateway/latest/how-kong-works/routing-traffic/)
      for a detailed explanation of how Kong proxies traffic.

      <br><br>

      Services can be both [tagged and filtered by
      tags](https://docs.konghq.com/gateway/latest/admin-api/#tags).
    name: Services
  - description: >
      Route entities define rules to match client requests. Each route is
      associated with a service, and a service may have multiple routes
      associated to it. Every request matching a given route will be proxied to
      the associated service. You need at least one matching rule that applies
      to the protocol being matched by the route.

      <br><br>

      The combination of routes and services, and the separation of concerns
      between them, offers a powerful routing mechanism with which it is
      possible to define fine-grained entrypoints in Kong Gateway leading to
      different upstream services of your infrastructure.

      <br><br>

      Depending on the protocol, one of the following attributes must be set:

      <br>


      - `http`: At least one of `methods`, `hosts`, `headers`, or `paths`

      - `https`: At least one of `methods`, `hosts`, `headers`, `paths`, or
      `snis`

      - `tcp`: At least one of `sources` or `destinations`

      - `tls`: at least one of `sources`, `destinations`, or `snis`

      - `tls_passthrough`: set `snis`

      - `grpc`: At least one of `hosts`, `headers`, or `paths`

      - `grpcs`: At least one of `hosts`, `headers`, `paths`, or `snis`

      - `ws`: At least one of `hosts`, `headers`, or `paths`

      - `wss`: At least one of `hosts`, `headers`, `paths`, or `snis`






        <br>
        A route can't have both `tls` and `tls_passthrough` protocols at same time.
        <br><br>
        Learn more about the router:
      - [Configure routes using
      expressions](https://docs.konghq.com/gateway/latest/key-concepts/routes/expressions)

      - [Router Expressions language
      reference](https://docs.konghq.com/gateway/latest/reference/router-expressions-language/)
    name: Routes
  - description: >
      A plugin entity represents a plugin configuration that will be executed
      during the HTTP request/response lifecycle. Plugins let you add
      functionality to services that run behind a Kong Gateway instance, like
      authentication or rate limiting.

      You can find more information about available plugins and which values
      each plugin accepts at the [Plugin Hub](https://docs.konghq.com/hub/).

      <br><br>

      When adding a plugin configuration to a service, the plugin will run on
      every request made by a client to that service. If a plugin needs to be
      tuned to different values for some specific consumers, you can do so by
      creating a separate plugin instance that specifies both the service and
      the consumer, through the service and consumer fields.

      <br><br>

      Plugins can be both [tagged and filtered by
      tags](https://docs.konghq.com/gateway/latest/admin-api/#tags).
    name: Plugins
  - description: >
      The consumer object represents a consumer - or a user - of a service.

      You can either rely on Kong Gateway as the primary datastore, or you can
      map the consumer list with your database to keep consistency between Kong
      Gateway and your existing primary datastore.
    name: Consumers
  - description: >-
      Consumer groups enable the organization and categorization of consumers
      (users or applications) within an API ecosystem. 

      By grouping consumers together, you eliminate the need to manage them
      individually, providing a scalable, efficient approach to managing
      configurations.
    name: Consumer Groups
  - description: >
      A certificate object represents a public certificate, and can be
      optionally paired with the corresponding private key. These objects are
      used by Kong Gateway to handle SSL/TLS termination for encrypted requests,
      or for use as a trusted CA store when validating peer certificate of
      client/service.

      <br><br>

      Certificates are optionally associated with SNI objects to tie a cert/key
      pair to one or more hostnames.

      <br><br>

      If intermediate certificates are required in addition to the main
      certificate, they should be concatenated together into one string.
    name: Certificates
  - description: >-
      An SNI object represents a many-to-one mapping of hostnames to a
      certificate. 

      <br><br>

      A certificate object can have many hostnames associated with it. When Kong
      Gateway receives an SSL request, it uses the SNI field in the Client Hello
      to look up the certificate object based on the SNI associated with the
      certificate.
    name: SNIs
  - description: >-
      A CA certificate object represents a trusted certificate authority. 

      These objects are used by Kong Gateway to verify the validity of a client
      or server certificate.
    name: CA Certificates
  - description: >-
      The upstream object represents a virtual hostname and can be used to load
      balance incoming requests over multiple services (targets). 

      <br><br>

      An upstream also includes a [health
      checker](https://docs.konghq.com/gateway/latest/how-kong-works/health-checks/),
      which can enable and disable targets based on their ability or inability
      to serve requests. 

      The configuration for the health checker is stored in the upstream object,
      and applies to all of its targets.
    name: Upstreams
  - description: >
      Vault objects are used to configure different vault connectors for
      [managing
      secrets](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/).

      Configuring a vault lets you reference secrets from other entities.

      This allows for a proper separation of secrets and configuration and
      prevents secret sprawl.

      <br><br>

      For example, you could store a certificate and a key in a vault, then
      reference them from a certificate entity. This way, the certificate and
      key are not stored in the entity directly and are more secure.

      <br><br>

      Secrets rotation can be managed using
      [TTLs](https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/advanced-usage/).
    name: Vaults
  - description: >
      A key object holds a representation of asymmetric keys in various formats.
      When Kong Gateway or a Kong plugin requires a specific public or private
      key to perform certain operations, it can use this entity.
    name: Keys
  - description: >
      A JSON Web key set. Key sets are the preferred way to expose keys to
      plugins because they tell the plugin where to look for keys or have a
      scoping mechanism to restrict plugins to specific keys.
    name: KeySets
  - name: API-keys
  - name: Basic-auth credentials
  - name: JWTs
  - name: HMAC-auth credentials
  - name: ACLs
  - name: Mesh
  - name: API Products
  - name: API Product Documentation
  - name: API Product Versions
  - name: API Product Version Specification
  - name: Portals
    description: APIs related to Configuration of Konnect Developer Portals.
  - name: Portal Developers
    description: APIs related to Konnect Developer Portal Developers.
  - name: Portal Teams
    description: APIs related to Konnect Developer Portal Developer Teams.
  - name: Portal Team Membership
    description: >-
      APIs related to Developer Membership in Konnect Developer Portal Developer
      Teams.
  - name: Portal Team Roles
    description: APIs related to Team Roles in Konnect Developer Portal.
  - name: Portal Applications
    description: APIs related to Konnect Developer Portal Applications.
  - name: Portal Application Registrations
    description: APIs related to Konnect Developer Portal Application Registrations.
  - name: Portal Products
    description: APIs related to API Products Published to Konnect Developer Portals.
  - name: Portal Auth Settings
    description: APIs related to Konnect Developer Portal Authentication Settings.
  - name: Portal Appearance
    description: APIs related to Konnect Developer Portal Appearance Settings.
  - name: Portal Product Versions
    description: >
      Portal Product Versions hold metadata that describes how a Product Version
      is configured for a specific portal.
        
        They contain:
        - Lifecyle and deprecation statuses
        - Application registration settings like auto approve or whether application registration is enabled
        - The authentication strategy that is enabled for Application Registration
  - name: DCR Providers
    description: >
      Dynamic Client Registration Providers are configurations representing an
      external Identity Provider whose clients (i.e. Applications) Konnect will
      be authorized to manage.

      For instance, they will be able to perform dynamic client registration
      (DCR) with the provider. 

      The DCR provider provides credentials to each DCR-enabled application in
      Konnect that can be used to access Product Versions that the app is
      registered for.
  - name: App Auth Strategies
    description: >
      Application Auth Strategies are sets of plugin configurations that
      represent how the gateway will perform authentication and authorization
      for a Product Version. 

      Called “Auth Strategy” for short in the context of portals/applications. 

      The plugins are synced to any Gateway Service that is currently linked or
      becomes linked to the Product Version.
  - name: Auth Settings
  - name: Invites
  - name: Roles
  - name: Team Membership
  - name: Teams
  - name: Users
  - name: System Accounts
  - name: System Accounts - Access Tokens
  - name: System Accounts - Roles
  - name: System Accounts - Team Membership
  - name: Authentication
  - name: Impersonation Settings
